{"version":3,"file":"9954.e7538e9e36c397057e63.js","mappings":"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,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,KAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,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","sources":["webpack://telegram-t/./src/lib/secret-sauce/utils.ts","webpack://telegram-t/./src/lib/secret-sauce/parseSdp.ts","webpack://telegram-t/./src/lib/secret-sauce/buildSdp.ts","webpack://telegram-t/./src/lib/secret-sauce/blacksilence.ts","webpack://telegram-t/./src/lib/secret-sauce/secretsauce.ts","webpack://telegram-t/./src/lib/secret-sauce/p2p.ts","webpack://telegram-t/./src/global/actions/api/calls.async.ts","webpack://telegram-t/./src/util/phoneCallEmojiConstants.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/calls.async.ts","webpack://telegram-t/./src/util/vibrate.ts","webpack://telegram-t/./src/components/calls/group/MicrophoneButton.tsx","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantMenu.tsx","webpack://telegram-t/./src/hooks/useRunThrottled.ts","webpack://telegram-t/./src/components/calls/group/OutlinedMicrophoneIcon.tsx","webpack://telegram-t/./src/components/calls/group/GroupCallParticipant.tsx","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantList.tsx","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantVideo.tsx","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantStreams.tsx","webpack://telegram-t/./src/components/calls/group/GroupCall.tsx","webpack://telegram-t/./src/components/calls/ActiveCallHeader.tsx","webpack://telegram-t/./src/components/calls/phone/PhoneCallButton.module.scss?9dea","webpack://telegram-t/./src/components/calls/phone/PhoneCallButton.tsx","webpack://telegram-t/./src/components/calls/phone/PhoneCall.module.scss?a250","webpack://telegram-t/./src/components/calls/phone/PhoneCall.tsx","webpack://telegram-t/./src/components/calls/phone/RatePhoneCallModal.module.scss?64f6","webpack://telegram-t/./src/components/calls/phone/RatePhoneCallModal.tsx","webpack://telegram-t/./src/bundles/calls.ts"],"sourcesContent":["import type { P2PPayloadType } from './p2pMessage';\nimport type { PayloadType } from './types';\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// unsign => sign\nexport function toTelegramSource(source: number) {\n  // eslint-disable-next-line no-bitwise\n  return source << 0;\n}\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// sign => unsign\nexport function fromTelegramSource(source: number) {\n  // eslint-disable-next-line no-bitwise\n  return source >>> 0;\n}\n\nexport function getAmplitude(array: Uint8Array, scale = 3) {\n  if (!array) return 0;\n\n  const { length } = array;\n  let total = 0;\n  for (let i = 0; i < length; i++) {\n    total += array[i] * array[i];\n  }\n  const rms = Math.sqrt(total / length) / 255;\n\n  return Math.min(1, rms * scale);\n}\n\nexport function p2pPayloadTypeToConference(p: P2PPayloadType): PayloadType {\n  return {\n    id: p.id,\n    name: p.name,\n    'rtcp-fbs': p.feedbackTypes,\n    clockrate: p.clockrate,\n    parameters: p.parameters,\n    channels: p.channels,\n  };\n}\n\nexport const THRESHOLD = 0.1;\n\nexport const IS_SCREENSHARE_SUPPORTED = 'getDisplayMedia' in (navigator?.mediaDevices || {});\nexport const IS_ECHO_CANCELLATION_SUPPORTED = navigator?.mediaDevices?.getSupportedConstraints().echoCancellation;\n// @ts-ignore\nexport const IS_NOISE_SUPPRESSION_SUPPORTED = navigator?.mediaDevices?.getSupportedConstraints().noiseSuppression;\n","import { toTelegramSource } from './utils';\nimport type { JoinGroupCallPayload, SsrcGroup } from './types';\n\nexport default (sessionDescription: RTCSessionDescriptionInit, isP2p = false): JoinGroupCallPayload => {\n  if (!sessionDescription || !sessionDescription.sdp) {\n    throw Error('Failed parsing SDP: session description is null');\n  }\n\n  const sections = sessionDescription\n    .sdp\n    .split('\\r\\nm=')\n    .map((s, i) => (i === 0 ? s : `m=${s}`))\n    .reduce((acc: Record<string, string[]>, el) => {\n      const name = el.match(/^m=(.+?)\\s/)?.[1] || 'header';\n      acc[acc.hasOwnProperty(name) && name === 'video' ? 'screencast' : name] = el.split('\\r\\n').filter(Boolean);\n      return acc;\n    }, {});\n\n  const lookup = (prefix: string, sectionName?: string) => {\n    if (!sectionName) {\n      return Object.values(sections).map((section) => {\n        return section.find((line) => line.startsWith(prefix))?.substr(prefix.length);\n      }).filter(Boolean)[0];\n    } else {\n      return sections[sectionName]?.find((line) => line.startsWith(prefix))?.substr(prefix.length);\n    }\n  };\n\n  const parseExtmaps = (sectionName: string) => {\n    return sections[sectionName].filter((l) => l.startsWith('a=extmap')).map((l) => {\n      const [, id, uri] = l.match(/extmap:(\\d+)(?:\\/.+)?\\s(.+)/)!;\n      return { id: Number(id), uri };\n    });\n  };\n\n  const parsePayloadTypes = (sectionName: string) => {\n    const payloads = sections[sectionName].filter((l) => l.startsWith('a=rtpmap')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const [name, clockrate, channels] = data.split('/');\n      return {\n        id: Number(id), name, clockrate: Number(clockrate), ...(channels && { channels: Number(channels) }),\n      };\n    });\n\n    const fbParams = sections[sectionName].filter((l) => l.startsWith('a=rtcp-fb')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const [type, subtype] = data.split(' ');\n      return { id: Number(id), type, subtype: subtype || '' };\n    });\n\n    const parameters = sections[sectionName].filter((l) => l.startsWith('a=fmtp')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const d = data.split(';').reduce((acc: Record<string, string>, q) => {\n        const [name, value] = q.split('=');\n        acc[name] = value;\n        return acc;\n      }, {});\n      if (Object.values(d).some((z) => !z)) return undefined;\n      return { id: Number(id), data: d };\n    }).filter(Boolean);\n\n    return payloads.map((payload) => {\n      const p = parameters.filter((l) => l!.id === payload.id).map((q) => q!.data).reduce((acc, el) => {\n        return Object.assign(acc, el);\n      }, {});\n      const f = fbParams.filter((l) => l.id === payload.id).map((l) => {\n        return {\n          type: l.type,\n          subtype: l.subtype,\n        };\n      });\n\n      return {\n        ...payload,\n        ...(Object.keys(p).length > 0 && { parameters: p }),\n        ...(f.length > 0 && { feedbackTypes: f }),\n      };\n    });\n  };\n\n  const rawSource = lookup('a=ssrc:', 'audio');\n  const sourceAudio = rawSource && Number(rawSource.split(' ')[0]);\n\n  // TODO multiple source groups\n  const rawSourceVideo = lookup('a=ssrc-group:', 'video')?.split(' ') || undefined;\n  const rawSourceScreencast = lookup('a=ssrc-group:', 'screencast')?.split(' ') || undefined;\n\n  if (!rawSourceVideo) {\n    throw Error('Failed parsing SDP: no video ssrc');\n  }\n\n  const [hash, fingerprint] = lookup('a=fingerprint:')?.split(' ') || [];\n\n  const setup = lookup('a=setup:');\n  if (!hash || !fingerprint) {\n    throw Error('Failed parsing SDP: no fingerprint');\n  }\n\n  console.log(sections);\n\n  const ufrag = lookup('a=ice-ufrag:');\n  const pwd = lookup('a=ice-pwd:');\n\n  if (!ufrag || !pwd) {\n    throw Error('Failed parsing SDP: no ICE ufrag or pwd');\n  }\n\n  return {\n    fingerprints: [\n      {\n        fingerprint,\n        hash,\n        setup: isP2p ? setup! : 'active',\n      },\n    ],\n    pwd,\n    ufrag,\n    ...(sourceAudio && { ssrc: toTelegramSource(sourceAudio) }),\n    ...(rawSourceVideo && {\n      'ssrc-groups': [\n        {\n          semantics: rawSourceVideo[0],\n          sources: rawSourceVideo.slice(1, rawSourceVideo.length).map(Number).map(toTelegramSource),\n        },\n        (isP2p && rawSourceScreencast && {\n          semantics: rawSourceScreencast[0],\n          sources: rawSourceScreencast.slice(1, rawSourceScreencast.length).map(Number).map(toTelegramSource),\n        }),\n      ].filter(Boolean) as SsrcGroup[],\n    }),\n    ...(isP2p && {\n      audioExtmap: parseExtmaps('audio'),\n      videoExtmap: parseExtmaps('video'),\n      screencastExtmap: parseExtmaps('screencast'),\n      audioPayloadTypes: parsePayloadTypes('audio'),\n      videoPayloadTypes: parsePayloadTypes('video'),\n      screencastPayloadTypes: parsePayloadTypes('screencast'),\n    }),\n  };\n};\n","import type {\n  Candidate, GroupCallTransport, PayloadType, RTPExtension, SsrcGroup,\n} from './types';\nimport { fromTelegramSource } from './utils';\n\nexport type Conference = {\n  sessionId: number;\n  audioExtensions: RTPExtension[];\n  videoExtensions: RTPExtension[];\n  audioPayloadTypes: PayloadType[];\n  videoPayloadTypes: PayloadType[];\n  ssrcs: Ssrc[];\n  transport: GroupCallTransport;\n};\n\nexport type Ssrc = {\n  userId: string;\n  endpoint: string;\n  isMain: boolean;\n  isRemoved?: boolean;\n  isVideo: boolean;\n  isPresentation?: boolean;\n  sourceGroups: SsrcGroup[];\n};\n\nexport default (conference: Conference, isAnswer = false, isPresentation = false, isP2p = false) => {\n  const lines: string[] = [];\n\n  const add = (value: string) => {\n    lines.push(value);\n  };\n\n  const {\n    sessionId,\n    ssrcs,\n    audioExtensions,\n    videoExtensions,\n    audioPayloadTypes,\n    videoPayloadTypes,\n    transport: {\n      ufrag,\n      pwd,\n      fingerprints,\n      candidates,\n    },\n  } = conference;\n\n  // Header\n  add('v=0'); // version\n  add(`o=- ${sessionId} 2 IN IP4 0.0.0.0`); // sessionId, 2=sessionVersion\n  add('s=-'); // name of the session\n  add('t=0 0'); // time when session is valid\n  add('a=ice-options:trickle');\n  add('a=msid-semantic:WMS *');\n  add(`a=group:BUNDLE ${ssrcs.map((ssrc) => ssrc.endpoint).join(' ')}${isPresentation ? '' : ` ${isP2p ? '3' : '2'}`}`);\n  // ice-lite: is a minimal version of the ICE specification, intended only for servers running on a public IP address\n  if (!isP2p) add('a=ice-lite');\n\n  const addCandidate = (c: Candidate) => {\n    if (c.sdpString) {\n      add(`a=${c.sdpString}`);\n    } else {\n      let str = '';\n      str += 'a=candidate:';\n      str += `${c.foundation} ${c.component} ${c.protocol} ${c.priority} ${c.ip} ${c.port} typ ${c.type}`;\n      if ('rel-addr' in c) {\n        str += ` raddr ${c['rel-addr']} rport ${c['rel-port']}`;\n      }\n      str += ` generation ${c.generation}`;\n      add(str);\n    }\n  };\n\n  const addTransport = () => {\n    add(`a=ice-ufrag:${ufrag}`);\n    add(`a=ice-pwd:${pwd}`);\n    fingerprints.forEach((fingerprint) => {\n      add(`a=fingerprint:${fingerprint.hash} ${fingerprint.fingerprint}`);\n      add(`a=setup:${isP2p ? (fingerprint.setup) : 'passive'}`);\n    });\n\n    candidates.forEach(addCandidate);\n  };\n\n  const addPayloadType = (payloadType: PayloadType) => {\n    const {\n      channels, id, name, clockrate, parameters,\n    } = payloadType;\n\n    const channelsString = channels ? `/${channels}` : '';\n    add(`a=rtpmap:${id} ${name}/${clockrate}${channelsString}`);\n\n    if (parameters) {\n      const parametersString = Object.keys(parameters).map((key) => {\n        return `${key}=${parameters![key]};`;\n      }).join(' ');\n\n      add(`a=fmtp:${id} ${parametersString}`);\n    }\n\n    payloadType['rtcp-fbs']?.forEach((fbParam) => {\n      add(`a=rtcp-fb:${id} ${fbParam.type}${fbParam.subtype ? ` ${fbParam.subtype}` : ''}`);\n    });\n  };\n\n  const addSsrcEntry = (entry: Ssrc) => {\n    const payloadTypes = entry.isVideo ? videoPayloadTypes : audioPayloadTypes;\n\n    const type = entry.isVideo ? 'video' : 'audio';\n    add(`m=${type} ${entry.isMain ? 1 : 0} RTP/SAVPF ${payloadTypes.map((l) => l.id).join(' ')}`);\n    add('c=IN IP4 0.0.0.0');\n    add('b=AS:1300'); // 1300000 / 1000\n    add(`a=mid:${entry.endpoint}`);\n    add('a=rtcp-mux');\n    payloadTypes.forEach(addPayloadType);\n\n    add('a=rtcp:1 IN IP4 0.0.0.0');\n    if (entry.isVideo) {\n      add('a=rtcp-rsize');\n    }\n\n    (entry.isVideo ? videoExtensions : audioExtensions).forEach(({ id, uri }) => {\n      add(`a=extmap:${id} ${uri}`);\n    });\n\n    if (entry.isRemoved) {\n      add('a=inactive');\n      return;\n    }\n\n    addTransport();\n\n    if (isP2p) {\n      add('a=sendrecv');\n      add('a=bundle-only');\n    } else {\n      if (isAnswer) {\n        add('a=recvonly');\n        return;\n      }\n      if (entry.isMain) {\n        add('a=sendrecv');\n      } else {\n        add('a=sendonly');\n        add('a=bundle-only');\n      }\n    }\n\n    entry.sourceGroups.forEach((sourceGroup) => {\n      add(`a=ssrc-group:${sourceGroup.semantics} ${sourceGroup.sources.map(fromTelegramSource).join(' ')}`);\n      sourceGroup.sources.forEach((ssrcTelegram) => {\n        const ssrc = fromTelegramSource(ssrcTelegram);\n        add(`a=ssrc:${ssrc} cname:${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} msid:${entry.endpoint} ${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} mslabel:${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} label:${entry.endpoint}`);\n      });\n    });\n  };\n\n  if (!isP2p) {\n    ssrcs.filter((ssrc) => ssrc.endpoint === '0' || ssrc.endpoint === '1').map(addSsrcEntry);\n  } else {\n    ssrcs.filter(addSsrcEntry);\n  }\n\n  if (!isPresentation) {\n    add('m=application 1 UDP/DTLS/SCTP webrtc-datachannel');\n    add('c=IN IP4 0.0.0.0');\n    addTransport();\n    add('a=ice-options:trickle');\n    add(`a=mid:${isP2p ? '3' : (isPresentation ? '1' : '2')}`);\n    add('a=sctp-port:5000');\n    add('a=max-message-size:262144');\n  }\n\n  if (!isP2p) {\n    ssrcs.filter((ssrc) => ssrc.endpoint !== '0' && ssrc.endpoint !== '1').map(addSsrcEntry);\n  }\n\n  return `${lines.join('\\n')}\\n`;\n};\n","// https://blog.mozilla.org/webrtc/warm-up-with-replacetrack/\n\nexport const silence = (ctx: AudioContext) => {\n  const oscillator = ctx.createOscillator();\n  const dst = oscillator.connect(ctx.createMediaStreamDestination());\n  oscillator.start();\n  return new MediaStream([Object.assign((dst as any).stream.getAudioTracks()[0], { enabled: false })]);\n};\n\nexport const black = ({ width = 640, height = 480 } = {}) => {\n  const canvas = Object.assign(document.createElement('canvas'), { width, height });\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw Error('Cannot create canvas ctx');\n\n  ctx.fillRect(0, 0, width, height);\n  const stream = canvas.captureStream();\n  return new MediaStream([Object.assign(stream.getVideoTracks()[0], { enabled: false })]);\n};\n","import parseSdp from './parseSdp';\nimport { ColibriClass } from './colibriClass';\nimport type {\n  GroupCallConnectionData, GroupCallConnectionState, GroupCallParticipant, JoinGroupCallPayload,\n} from './types';\nimport buildSdp, { Conference, Ssrc } from './buildSdp';\nimport { black, silence } from './blacksilence';\nimport {\n  getAmplitude,\n  IS_ECHO_CANCELLATION_SUPPORTED,\n  IS_NOISE_SUPPRESSION_SUPPORTED,\n  THRESHOLD,\n} from './utils';\n\nexport type StreamType = 'audio' | 'video' | 'presentation';\n\ntype GroupCallState = {\n  connection?: RTCPeerConnection;\n  screenshareConnection?: RTCPeerConnection;\n  dataChannel?: RTCDataChannel;\n  screenshareDataChannel?: RTCDataChannel;\n  participants?: GroupCallParticipant[];\n  conference?: Partial<Conference>;\n  screenshareConference?: Partial<Conference>;\n  streams?: Record<string, {\n    audio?: MediaStream;\n    video?: MediaStream;\n    presentation?: MediaStream;\n  }>;\n  participantFunctions?: Record<string, {\n    setVolume?: (volume: number) => void;\n    toggleMute?: (muted: boolean) => void;\n    getCurrentAmplitude?: () => number;\n  }>;\n  onUpdate?: (...args: any[]) => void;\n  myId?: string;\n  black?: MediaStream;\n  silence?: MediaStream;\n  updatingParticipantsQueue?: any[];\n  facingMode?: VideoFacingModeEnum;\n  isSpeakerDisabled?: boolean;\n  analyserInterval?: number;\n  speaking?: Record<string, number>;\n  audioElement?: HTMLAudioElement;\n  destination?: MediaStreamAudioDestinationNode;\n  audioContext?: AudioContext;\n  mediaStream?: MediaStream;\n};\n\nlet state: GroupCallState | undefined;\n\nexport async function getDevices(streamType: StreamType, isInput = true) {\n  return (await navigator.mediaDevices.enumerateDevices())\n    .filter((l) => l.kind === `${streamType}${isInput ? 'input' : 'output'}`);\n}\n\nexport function toggleSpeaker() {\n  if (!state) {\n    return;\n  }\n\n  state.isSpeakerDisabled = !state.isSpeakerDisabled;\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallConnectionState',\n    connectionState: 'connected',\n    isSpeakerDisabled: state.isSpeakerDisabled,\n  });\n  if (state.participantFunctions) {\n    Object.values(state.participantFunctions).forEach((l) => {\n      l.toggleMute?.(!!state?.isSpeakerDisabled);\n    });\n  }\n}\n\nfunction leavePresentation(isFromToggle?: boolean) {\n  if (!state) {\n    return;\n  }\n  state.screenshareDataChannel?.close();\n  state.screenshareConnection?.close();\n\n  if (!isFromToggle) {\n    state.onUpdate?.({\n      '@type': 'updateGroupCallLeavePresentation',\n    });\n  }\n}\n\nexport function toggleNoiseSuppression() {\n  if (!state || !state.myId || !state.streams) {\n    return;\n  }\n\n  const audioStream = state.streams[state.myId].audio;\n  if (!audioStream) {\n    return;\n  }\n\n  const track = audioStream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  // @ts-ignore\n  const { echoCancellation, noiseSuppression } = track.getConstraints();\n\n  track.applyConstraints({\n    echoCancellation: !echoCancellation,\n    // @ts-ignore\n    noiseSuppression: !noiseSuppression,\n  });\n}\n\nexport function getUserStreams(userId: string) {\n  return state?.streams?.[userId];\n}\n\nexport function setVolume(userId: string, volume: number) {\n  const participantFunctions = state?.participantFunctions?.[userId];\n  if (!participantFunctions) return;\n  participantFunctions.setVolume?.(volume);\n}\n\nexport function isStreamEnabled(streamType: StreamType, userId?: string) {\n  const id = userId || state?.myId;\n  const stream = id && getUserStreams(id)?.[streamType];\n  if (!stream) return false;\n\n  return stream.getTracks()[0]?.enabled;\n}\n\nfunction updateGroupCallStreams(userId: string) {\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallStreams',\n    userId,\n    hasAudioStream: isStreamEnabled('audio', userId),\n    hasVideoStream: isStreamEnabled('video', userId),\n    hasPresentationStream: isStreamEnabled('presentation', userId),\n    amplitude: state.speaking?.[userId],\n  });\n}\n\nfunction getUserStream(streamType: StreamType, facing: VideoFacingModeEnum = 'user') {\n  if (streamType === 'presentation') {\n    return (navigator.mediaDevices as any).getDisplayMedia({\n      audio: false,\n      video: true,\n    });\n  }\n\n  return navigator.mediaDevices.getUserMedia({\n    audio: streamType === 'audio' ? {\n      // @ts-ignore\n      ...(IS_ECHO_CANCELLATION_SUPPORTED && { echoCancellation: true }),\n      ...(IS_NOISE_SUPPRESSION_SUPPORTED && { noiseSuppression: true }),\n    } : false,\n    video: streamType === 'video' ? {\n      facingMode: facing,\n    } : false,\n\n  });\n}\n\nexport async function switchCameraInput() {\n  if (!state?.myId || !state.connection || !state.streams || !state.facingMode) {\n    return;\n  }\n\n  const stream = getUserStreams(state.myId)?.video;\n\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  state.facingMode = state.facingMode === 'environment' ? 'user' : 'environment';\n  try {\n    const newStream = await getUserStream('video', state.facingMode);\n\n    await sender.replaceTrack(newStream.getTracks()[0]);\n    state.streams[state.myId].video = newStream;\n  } catch (e) {\n\n  }\n}\n\nexport async function toggleStream(streamType: StreamType, value: boolean | undefined = undefined) {\n  if (!state || !state.myId || !state.connection || !state.streams) {\n    return;\n  }\n\n  const stream = getUserStreams(state.myId)?.[streamType];\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = [\n    ...state.connection.getSenders(),\n    ...(state.screenshareConnection?.getSenders() || []),\n  ].find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  value = value === undefined ? !track.enabled : value;\n\n  try {\n    if (value && !track.enabled) {\n      const newStream = await getUserStream(streamType);\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      state.streams[state.myId][streamType] = newStream;\n      if (streamType === 'video') {\n        state.facingMode = 'user';\n      } else if (streamType === 'audio') {\n        const { audioContext } = state;\n        if (!audioContext) return;\n        const source = audioContext.createMediaStreamSource(newStream);\n\n        const analyser = audioContext.createAnalyser();\n        analyser.minDecibels = -100;\n        analyser.maxDecibels = -30;\n        analyser.smoothingTimeConstant = 0.05;\n        analyser.fftSize = 1024;\n\n        source.connect(analyser);\n\n        state = {\n          ...state,\n          participantFunctions: {\n            ...state.participantFunctions,\n            [state.myId]: {\n              ...state.participantFunctions?.[state.myId],\n              getCurrentAmplitude: () => {\n                const array = new Uint8Array(analyser.frequencyBinCount);\n                analyser.getByteFrequencyData(array);\n                return getAmplitude(array, 1.5);\n              },\n            },\n          },\n        };\n      }\n    } else if (!value && track.enabled) {\n      track.stop();\n      const newStream = streamType === 'audio' ? state.silence : state.black;\n      if (!newStream) return;\n\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      state.streams[state.myId][streamType] = newStream;\n      if (streamType === 'video') {\n        state.facingMode = undefined;\n      }\n    }\n    updateGroupCallStreams(state.myId!);\n    if (streamType === 'presentation' && !value) leavePresentation(true);\n  } catch (e) {\n\n  }\n}\n\nfunction updateConnectionState(connectionState: GroupCallConnectionState) {\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallConnectionState',\n    connectionState,\n  });\n}\n\nexport function leaveGroupCall() {\n  if (!state) {\n    return;\n  }\n\n  if (state.myId && state.streams?.[state.myId]) {\n    Object.values(state.streams[state.myId] || {}).forEach((stream) => {\n      stream?.getTracks().forEach((track) => {\n        track.stop();\n      });\n    });\n  }\n  leavePresentation(true);\n  state.dataChannel?.close();\n  state.connection?.close();\n  updateConnectionState('disconnected');\n\n  if (state.analyserInterval) {\n    clearInterval(state.analyserInterval);\n  }\n\n  state = undefined;\n}\n\nfunction analyzeAmplitudes() {\n  if (!state || !state.participantFunctions) return;\n\n  Object.keys(state.participantFunctions).forEach((id) => {\n    const { getCurrentAmplitude } = state!.participantFunctions![Number(id)];\n\n    if (getCurrentAmplitude) {\n      const amplitude = getCurrentAmplitude();\n      const prevAmplitude = state!.speaking![id] || 0;\n      state!.speaking![id] = amplitude;\n      if ((amplitude > THRESHOLD && prevAmplitude <= THRESHOLD)\n        || (amplitude <= THRESHOLD && prevAmplitude > THRESHOLD)) {\n        updateGroupCallStreams(id);\n      }\n    }\n  });\n}\n\nfunction createDataChannel(connection: RTCPeerConnection) {\n  const dataChannel = connection.createDataChannel('data', {\n    id: 0,\n  });\n\n  dataChannel.onopen = () => {\n    // console.log('Data channel open!');\n  };\n\n  dataChannel.onmessage = (e) => {\n    // console.log('onmessage');\n    const data = JSON.parse(e.data) as ColibriClass;\n    // console.log(data);\n    switch (data.colibriClass) {\n      case 'DominantSpeakerEndpointChangeEvent':\n        break;\n      case 'SenderVideoConstraints':\n\n        break;\n      case 'EndpointConnectivityStatusChangeEvent':\n\n        break;\n    }\n  };\n\n  dataChannel.onerror = (e) => {\n    console.log('%conerror', 'background: green; font-size: 5em');\n    console.error(e);\n  };\n\n  return dataChannel;\n}\n\nexport async function handleUpdateGroupCallParticipants(updatedParticipants: GroupCallParticipant[]) {\n  if (!state) {\n    return;\n  }\n\n  const {\n    participants, conference, connection, myId,\n  } = state;\n\n  if (!participants || !conference || !connection || !conference.ssrcs || !conference.transport || !myId) {\n    return;\n  }\n\n  // Joined from another client\n  if (updatedParticipants.find((participant) => {\n    return participant.isSelf\n      && participant.source\n      !== state?.conference?.ssrcs?.find((l) => l.isMain && !l.isVideo)?.sourceGroups[0].sources[0];\n  })) {\n    leaveGroupCall();\n    return;\n  }\n\n  const newEndpoints: string[] = [];\n  updatedParticipants.forEach((participant) => {\n    console.log('handleUpdateGroupCallParticipants', participant);\n    if (participant.isSelf) {\n      if (participant.isMuted && !participant.canSelfUnmute) {\n        // Muted by admin\n        toggleStream('audio', false);\n        toggleStream('video', false);\n        toggleStream('presentation', false);\n      }\n      return;\n    }\n\n    const { isLeft } = participant;\n    const isAudioLeft = participant.isMuted || participant.isMutedByMe;\n    const isVideoLeft = !participant.isVideoJoined || !participant.video || isLeft;\n    const isPresentationLeft = !participant.presentation || isLeft;\n\n    let hasVideo = false;\n    let hasAudio = false;\n    let hasPresentation = false;\n\n    conference.ssrcs!.filter((l) => l.userId === participant.id).forEach((ssrc) => {\n      if (!ssrc.isVideo) {\n        if (ssrc.sourceGroups[0].sources[0] === participant.source) {\n          hasAudio = true;\n        }\n        // console.log('has audio, removed=', isAudioLeft);\n        ssrc.isRemoved = isAudioLeft;\n      }\n\n      if (ssrc.isVideo) {\n        if (!ssrc.isPresentation) {\n          if (!!participant.video && ssrc.endpoint === participant.video.endpoint) {\n            hasVideo = true;\n          }\n          // console.log('has video = ', hasVideo, ' removed=', isVideoLeft);\n          ssrc.isRemoved = isVideoLeft;\n        }\n\n        if (ssrc.isPresentation) {\n          if (!!participant.presentation && ssrc.endpoint === participant.presentation.endpoint) {\n            hasPresentation = true;\n          }\n          // console.log('has presentation, removed=', isPresentationLeft);\n          ssrc.isRemoved = isPresentationLeft;\n        }\n      }\n    });\n\n    if (!isAudioLeft && !hasAudio) {\n      // console.log('add audio');\n      conference.ssrcs!.push({\n        userId: participant.id,\n        isMain: false,\n        endpoint: `audio${participant.source}`,\n        isVideo: false,\n        sourceGroups: [{\n          semantics: 'FID',\n          sources: [participant.source],\n        }],\n      });\n    }\n\n    if (!isVideoLeft && !hasVideo && participant.video) {\n      // console.log('add video', participant.video);\n      newEndpoints.push(participant.video.endpoint);\n      conference.ssrcs!.push({\n        userId: participant.id,\n        isMain: false,\n        endpoint: participant.video.endpoint,\n        isVideo: true,\n        sourceGroups: participant.video.sourceGroups,\n      });\n    }\n\n    if (!isPresentationLeft && !hasPresentation && participant.presentation) {\n      // console.log('add presentation');\n      conference.ssrcs!.push({\n        isPresentation: true,\n        userId: participant.id,\n        isMain: false,\n        endpoint: participant.presentation.endpoint,\n        isVideo: true,\n        sourceGroups: participant.presentation.sourceGroups,\n      });\n    }\n  });\n\n  if (state.updatingParticipantsQueue) {\n    state.updatingParticipantsQueue.push(conference);\n    return;\n  } else {\n    state.updatingParticipantsQueue = [];\n  }\n\n  const sdp = buildSdp(conference as Conference);\n  console.log('build sdp!', sdp);\n  await connection.setRemoteDescription({\n    type: 'offer',\n    sdp,\n  });\n\n  try {\n    const answer = await connection.createAnswer();\n    await connection.setLocalDescription(answer);\n\n    updateGroupCallStreams(myId);\n    if (state.updatingParticipantsQueue.length > 0) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const newConference of state.updatingParticipantsQueue) {\n        await connection.setRemoteDescription({\n          type: 'offer',\n          sdp: buildSdp(newConference as Conference),\n        });\n        const answerNew = await connection.createAnswer();\n        await connection.setLocalDescription(answerNew);\n        updateGroupCallStreams(myId);\n\n        // if (newEndpoints.length > 0) {\n        //   sendDataChannelMessage({\n        //     colibriClass: 'ReceiverVideoConstraints',\n        //     defaultConstraints: {\n        //       maxHeight: 0,\n        //     },\n        //     constraints: {\n        //       ...(newEndpoints.reduce((acc: Record<string, any>, el) => {\n        //         acc[el] = {\n        //           minHeight: 0,\n        //           maxHeight: 1080,\n        //         };\n        //         return acc;\n        //       }, {})),\n        //     },\n        //     onStageEndpoints: [],\n        //   });\n        // }\n      }\n    }\n    state.updatingParticipantsQueue = undefined;\n  } catch (e) {\n    console.error(e);\n  }\n}\n//\n// function sendDataChannelMessage(message: ColibriClass) {\n//   if (!state || !state.dataChannel || state.dataChannel.readyState !== 'open') {\n//     return;\n//   }\n//\n//   // console.log('SEND!', message);\n//   state.dataChannel.send(JSON.stringify(message));\n// }\n\nexport async function handleUpdateGroupCallConnection(data: GroupCallConnectionData, isPresentation: boolean) {\n  if (!state) {\n    return;\n  }\n\n  const conference = isPresentation ? state.screenshareConference : state.conference;\n  const connection = isPresentation ? state.screenshareConnection : state.connection;\n\n  if (!conference || !connection || !conference.ssrcs) {\n    return;\n  }\n\n  const sessionId = Date.now();\n  const newConference = {\n    ...conference,\n    transport: data.transport,\n    sessionId,\n    audioExtensions: data.audio?.['rtp-hdrexts'],\n    audioPayloadTypes: data.audio?.['payload-types'],\n    videoExtensions: data.video?.['rtp-hdrexts'],\n    videoPayloadTypes: data.video?.['payload-types'],\n  } as Conference;\n\n  state = {\n    ...state,\n    ...(!isPresentation ? { conference: newConference } : { screenshareConference: newConference }),\n  };\n\n  console.warn('update remote description', newConference, buildSdp(newConference, true, isPresentation));\n\n  try {\n    await connection.setRemoteDescription({\n      type: 'answer',\n      sdp: buildSdp(newConference, true, isPresentation),\n    });\n\n    // state.resolveTest();\n    // state.test = true;\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction handleTrack(e: RTCTrackEvent) {\n  if (!state || !state.audioElement || !state.audioContext || !state.mediaStream) {\n    return;\n  }\n  const ssrc = state.conference?.ssrcs?.find((l) => l.endpoint === e.track.id);\n  if (!ssrc || !ssrc.userId) {\n    return;\n  }\n\n  const { userId, isPresentation } = ssrc;\n  const participant = state.participants?.find((p) => p.id === userId);\n\n  const streamType = (e.track.kind === 'video' ? (isPresentation ? 'presentation' : 'video') : 'audio') as StreamType;\n\n  e.track.onended = () => {\n    delete state?.streams?.[userId][streamType];\n    updateGroupCallStreams(userId);\n  };\n\n  const stream = e.streams[0];\n\n  if (e.track.kind === 'audio') {\n    const { mediaStream } = state;\n    const audioContext = new (window.AudioContext)();\n    const source = audioContext.createMediaStreamSource(stream);\n\n    const gainNode = audioContext.createGain();\n    gainNode.gain.value = (participant?.volume || 10000) / 10000;\n\n    const muteNode = audioContext.createGain();\n    gainNode.gain.value = 1;\n\n    const analyser = audioContext.createAnalyser();\n    analyser.minDecibels = -100;\n    analyser.maxDecibels = -30;\n    analyser.smoothingTimeConstant = 0.05;\n    analyser.fftSize = 1024;\n\n    source.connect(analyser).connect(muteNode).connect(gainNode).connect(audioContext.destination);\n\n    mediaStream!.addTrack(source.mediaStream.getAudioTracks()[0]);\n\n    // https://stackoverflow.com/questions/41784137/webrtc-doesnt-work-with-audiocontext#comment117600018_41784241\n    const test = new Audio();\n    test.srcObject = stream;\n    // test.srcObject = source.mediaStream;\n    test.muted = true;\n    test.remove();\n\n    state = {\n      ...state,\n      participantFunctions: {\n        ...state.participantFunctions,\n        [userId]: {\n          ...state.participantFunctions?.[userId],\n          setVolume: (volume: number) => {\n            gainNode.gain.value = volume > 1 ? volume * 2 : volume;\n          },\n          toggleMute: (muted?: boolean) => {\n            muteNode.gain.value = muted ? 0 : 1;\n          },\n          getCurrentAmplitude: () => {\n            const array = new Uint8Array(analyser.frequencyBinCount);\n            analyser.getByteFrequencyData(array);\n            return getAmplitude(array, 1.5);\n          },\n        },\n      },\n    };\n  }\n\n  state = {\n    ...state,\n    streams: {\n      ...state.streams,\n      [userId]: {\n        ...state.streams?.[userId],\n        [streamType]: stream,\n      },\n    },\n  };\n\n  updateGroupCallStreams(userId);\n}\n\nfunction initializeConnection(\n  streams: MediaStream[],\n  resolve: (payload: JoinGroupCallPayload) => void,\n  isPresentation = false,\n) {\n  const connection = new RTCPeerConnection();\n\n  const dataChannel = isPresentation ? undefined : createDataChannel(connection);\n\n  streams.forEach((stream) => stream.getTracks().forEach((track) => {\n    connection.addTrack(track, stream);\n  }));\n\n  if (!isPresentation) {\n    connection.oniceconnectionstatechange = () => {\n      const connectionState = connection.iceConnectionState;\n      console.log('ice', connectionState);\n      if (connectionState === 'connected' || connectionState === 'completed') {\n        updateConnectionState('connected');\n      } else if (connectionState === 'checking' || connectionState === 'new') {\n        updateConnectionState('connecting');\n      } else if (connection.iceConnectionState === 'disconnected') {\n        updateConnectionState('reconnecting');\n      }\n    };\n  }\n  connection.ontrack = handleTrack;\n  connection.onnegotiationneeded = async () => {\n    if (!state) return;\n\n    const { myId } = state;\n\n    if (!myId) {\n      return;\n    }\n    const offer = await connection.createOffer({\n      offerToReceiveVideo: true,\n      offerToReceiveAudio: !isPresentation,\n    });\n\n    console.log('created offer!', offer);\n\n    await connection.setLocalDescription(offer);\n\n    if (!offer.sdp) {\n      return;\n    }\n\n    const sdp = parseSdp(offer);\n    console.log('parsed sdp', sdp);\n    const audioSsrc: Ssrc | undefined = !isPresentation ? {\n      userId: '',\n      sourceGroups: [\n        {\n          semantics: 'FID',\n          sources: [sdp.ssrc || 0],\n        },\n      ],\n      isRemoved: isPresentation,\n      isMain: true,\n      isVideo: false,\n      isPresentation,\n      endpoint: isPresentation ? '1' : '0',\n    } : undefined;\n\n    const videoSsrc: Ssrc | undefined = sdp['ssrc-groups'] && {\n      isPresentation,\n      userId: '',\n      sourceGroups: sdp['ssrc-groups'],\n      isMain: true,\n      isVideo: true,\n      endpoint: isPresentation ? '0' : '1',\n    };\n\n    const conference = isPresentation ? state.screenshareConference : state.conference;\n\n    const ssrcs: Ssrc[] = [];\n    if (isPresentation) {\n      if (videoSsrc) ssrcs.push(videoSsrc);\n      if (audioSsrc) ssrcs.push(audioSsrc);\n    } else {\n      if (audioSsrc) ssrcs.push(audioSsrc);\n      if (videoSsrc) ssrcs.push(videoSsrc);\n    }\n\n    const audioStream = streams.find((l) => l.getTracks()[0].kind === 'audio');\n    const videoStream = streams.find((l) => l.getTracks()[0].kind === 'video');\n\n    state = {\n      ...state,\n      ...(!isPresentation ? {\n        conference: {\n          ...conference,\n          ssrcs,\n        },\n      } : {\n        screenshareConference: {\n          ...conference,\n          ssrcs,\n        },\n      }),\n      streams: {\n        ...state.streams,\n        [myId]: {\n          ...state.streams?.[myId],\n          ...(audioStream && { audio: audioStream }),\n          ...(!isPresentation && videoStream ? { video: videoStream } : { presentation: videoStream }),\n        },\n      },\n    };\n\n    updateGroupCallStreams(myId);\n\n    resolve(sdp);\n  };\n\n  return { connection, dataChannel };\n}\n\nexport async function startSharingScreen(): Promise<JoinGroupCallPayload | undefined> {\n  if (!state) {\n    return undefined;\n  }\n\n  try {\n    const stream: MediaStream | undefined = await getUserStream('presentation');\n\n    if (!stream) {\n      return undefined;\n    }\n\n    stream.getTracks()[0].onended = () => {\n      if (state && state.myId) {\n        delete state.streams?.[state.myId].presentation;\n        updateGroupCallStreams(state.myId);\n        leavePresentation();\n      }\n    };\n\n    return await new Promise((resolve) => {\n      const { connection, dataChannel } = initializeConnection([stream], resolve, true);\n      state = {\n        ...state,\n        screenshareConnection: connection,\n        screenshareDataChannel: dataChannel,\n      };\n    });\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function joinGroupCall(\n  myId: string,\n  audioContext: AudioContext,\n  audioElement: HTMLAudioElement,\n  onUpdate: (...args: any[]) => void,\n): Promise<JoinGroupCallPayload> {\n  if (state) {\n    throw Error('Already in call');\n  }\n\n  updateConnectionState('connecting');\n\n  const mediaStream = new MediaStream();\n  audioElement.srcObject = mediaStream;\n  audioElement.play().catch((l) => console.warn(l));\n\n  state = {\n    onUpdate,\n    participants: [],\n    myId,\n    speaking: {},\n    silence: silence(audioContext),\n    black: black({ width: 640, height: 480 }),\n    // @ts-ignore\n    analyserInterval: setInterval(analyzeAmplitudes, 1000),\n    audioElement,\n    // destination,\n    audioContext,\n    mediaStream,\n  };\n\n  return new Promise((resolve) => {\n    state = {\n      ...state,\n      ...initializeConnection([state!.silence!, state!.black!], resolve),\n    };\n  });\n}\n","import { black, silence } from './blacksilence';\nimport type { ApiPhoneCallConnection, P2pParsedSdp } from './types';\nimport parseSdp from './parseSdp';\nimport type { MediaContent, MediaStateMessage, P2pMessage } from './p2pMessage';\nimport {\n  fromTelegramSource,\n  IS_ECHO_CANCELLATION_SUPPORTED,\n  IS_NOISE_SUPPRESSION_SUPPORTED,\n  p2pPayloadTypeToConference,\n} from './utils';\nimport buildSdp, { Conference } from './buildSdp';\nimport { getUserStreams, StreamType } from './secretsauce';\n\ntype P2pState = {\n  connection: RTCPeerConnection;\n  dataChannel: RTCDataChannel;\n  emitSignalingData: (data: P2pMessage) => void;\n  onUpdate: (...args: any[]) => void;\n  conference?: Partial<Conference>;\n  isOutgoing: boolean;\n  candidates: string[];\n  streams: {\n    video?: MediaStream;\n    audio?: MediaStream;\n    presentation?: MediaStream;\n    ownAudio?: MediaStream;\n    ownVideo?: MediaStream;\n    ownPresentation?: MediaStream;\n  };\n  silence: MediaStream;\n  blackVideo: MediaStream;\n  blackPresentation: MediaStream;\n  mediaState: Omit<MediaStateMessage, '@type'>;\n  audio: HTMLAudioElement;\n  gotInitialSetup?: boolean;\n  facingMode?: VideoFacingModeEnum;\n};\n\nlet state: P2pState | undefined;\n\nexport function getStreams() {\n  return state?.streams;\n}\n\nfunction updateStreams() {\n  state?.onUpdate({\n    ...state.mediaState,\n    '@type': 'updatePhoneCallMediaState',\n  });\n}\n\nfunction getUserStream(streamType: StreamType, facing: VideoFacingModeEnum = 'user') {\n  if (streamType === 'presentation') {\n    return (navigator.mediaDevices as any).getDisplayMedia({\n      audio: false,\n      video: true,\n    });\n  }\n\n  return navigator.mediaDevices.getUserMedia({\n    audio: streamType === 'audio' ? {\n      // @ts-ignore\n      ...(IS_ECHO_CANCELLATION_SUPPORTED && { echoCancellation: true }),\n      ...(IS_NOISE_SUPPRESSION_SUPPORTED && { noiseSuppression: true }),\n    } : false,\n    video: streamType === 'video' ? {\n      facingMode: facing,\n    } : false,\n  });\n}\n\nexport async function switchCameraInputP2p() {\n  if (!state || !state.facingMode) {\n    return;\n  }\n\n  const stream = state.streams.ownVideo;\n\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  state.facingMode = state.facingMode === 'environment' ? 'user' : 'environment';\n  try {\n    const newStream = await getUserStream('video', state.facingMode);\n\n    await sender.replaceTrack(newStream.getTracks()[0]);\n    state.streams.ownVideo = newStream;\n    updateStreams();\n  } catch (e) {\n\n  }\n}\n\nexport async function toggleStreamP2p(streamType: StreamType, value: boolean | undefined = undefined) {\n  if (!state) return;\n  const stream = streamType === 'audio' ? state.streams.ownAudio\n    : (streamType === 'video' ? state.streams.ownVideo : state.streams.ownPresentation);\n\n  if (!stream) return;\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  value = value === undefined ? !track.enabled : value;\n\n  try {\n    if (value && !track.enabled) {\n      const newStream = await getUserStream(streamType);\n      newStream.getTracks()[0].onended = () => {\n        toggleStreamP2p(streamType, false);\n      };\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      if (streamType === 'audio') {\n        state.streams.ownAudio = newStream;\n      } else if (streamType === 'video') {\n        state.streams.ownVideo = newStream;\n        state.facingMode = 'user';\n      } else {\n        state.streams.ownPresentation = newStream;\n      }\n      if (streamType === 'video' || streamType === 'presentation') {\n        toggleStreamP2p(streamType === 'video' ? 'presentation' : 'video', false);\n      }\n      // if (streamType === 'video') {\n      //   state.facingMode = 'user';\n      // }\n    } else if (!value && track.enabled) {\n      track.stop();\n      const newStream = streamType === 'audio' ? state.silence\n        : (streamType === 'video' ? state.blackVideo : state.blackPresentation);\n      if (!newStream) return;\n\n      await sender.replaceTrack(newStream.getTracks()[0]);\n\n      if (streamType === 'audio') {\n        state.streams.ownAudio = newStream;\n      } else if (streamType === 'video') {\n        state.streams.ownVideo = newStream;\n      } else {\n        state.streams.ownPresentation = newStream;\n      }\n      // if (streamType === 'video') {\n      //   state.facingMode = undefined;\n      // }\n    }\n    updateStreams();\n    sendMediaState();\n  } catch (e) {\n\n  }\n}\n\nexport async function joinPhoneCall(\n  connections: ApiPhoneCallConnection[],\n  emitSignalingData: (data: P2pMessage) => void,\n  isOutgoing: boolean,\n  shouldStartVideo: boolean,\n  onUpdate: (...args: any[]) => void,\n) {\n  const conn = new RTCPeerConnection({\n    iceServers: connections.map((connection) => (\n      {\n        urls: [\n          connection.isTurn && `turn:${connection.ip}:${connection.port}`,\n          connection.isStun && `stun:${connection.ip}:${connection.port}`,\n        ].filter(Boolean) as string[],\n        username: connection.username,\n        credentialType: 'password',\n        credential: connection.password,\n      }\n    )),\n    iceCandidatePoolSize: 2,\n  });\n  const slnc = silence(new AudioContext());\n  const video = black({ width: 640, height: 480 });\n  const screenshare = black({ width: 640, height: 480 });\n  conn.addTrack(slnc.getTracks()[0], slnc);\n  conn.addTrack(video.getTracks()[0], video);\n  conn.addTrack(screenshare.getTracks()[0], screenshare);\n\n  conn.onicecandidate = (e) => {\n    if (!e.candidate) return;\n\n    emitSignalingData({\n      '@type': 'Candidates',\n      candidates: [{\n        sdpString: e.candidate.candidate,\n      }],\n    });\n  };\n\n  conn.onconnectionstatechange = () => {\n    onUpdate({\n      '@type': 'updatePhoneCallConnectionState',\n      connectionState: conn.connectionState,\n    });\n  };\n\n  conn.ontrack = (e) => {\n    if (!state) return;\n\n    const stream = e.streams[0];\n    if (e.track.kind === 'audio') {\n      state.audio.srcObject = stream;\n      state.audio.play().catch();\n      state.streams.audio = stream;\n    } else if (e.transceiver.mid === '1') {\n      state.streams.video = stream;\n    } else {\n      state.streams.presentation = stream;\n    }\n\n    updateStreams();\n  };\n\n  const dc = conn.createDataChannel('data', {\n    id: 0,\n    negotiated: true,\n  });\n\n  dc.onmessage = (e) => {\n    processSignalingMessage(JSON.parse(e.data));\n  };\n\n  const audio = new Audio();\n\n  state = {\n    audio,\n    connection: conn,\n    emitSignalingData,\n    isOutgoing,\n    candidates: [],\n    onUpdate,\n    streams: {\n      ownVideo: video,\n      ownAudio: slnc,\n      ownPresentation: screenshare,\n    },\n    mediaState: {\n      isBatteryLow: false,\n      screencastState: 'inactive',\n      videoState: 'inactive',\n      videoRotation: 0,\n      isMuted: true,\n    },\n    blackVideo: video,\n    blackPresentation: screenshare,\n    silence: slnc,\n    dataChannel: dc,\n  };\n\n  try {\n    if (shouldStartVideo) {\n      toggleStreamP2p('video', true);\n    }\n    toggleStreamP2p('audio', true);\n  } catch (e) {\n\n  }\n\n  if (isOutgoing) {\n    const offer = await conn.createOffer({\n      offerToReceiveAudio: true,\n      offerToReceiveVideo: true,\n    });\n\n    await conn.setLocalDescription(offer);\n\n    sendInitialSetup(parseSdp(offer, true) as P2pParsedSdp);\n  }\n}\n\nexport function stopPhoneCall() {\n  if (!state) return;\n\n  state.streams.ownVideo?.getTracks().forEach((track) => track.stop());\n  state.streams.ownPresentation?.getTracks().forEach((track) => track.stop());\n  state.streams.ownAudio?.getTracks().forEach((track) => track.stop());\n  state.dataChannel.close();\n  state.connection.close();\n  state = undefined;\n}\n\nfunction sendMediaState() {\n  if (!state) return;\n  const { emitSignalingData, streams } = state;\n\n  emitSignalingData({\n    '@type': 'MediaState',\n    videoRotation: 0,\n    isMuted: !streams.ownAudio?.getTracks()[0].enabled,\n    isBatteryLow: true,\n    videoState: streams.ownVideo?.getTracks()[0].enabled ? 'active' : 'inactive',\n    screencastState: streams.ownPresentation?.getTracks()[0].enabled ? 'active' : 'inactive',\n  });\n}\n\nfunction filterVP8(mediaContent: MediaContent) {\n  if (!state || state.isOutgoing) return mediaContent;\n\n  const { payloadTypes } = mediaContent!;\n  const idx = payloadTypes.findIndex((payloadType) => payloadType.name === 'VP8');\n  const vp8PayloadType = payloadTypes[idx];\n  const rtxIdx = payloadTypes.findIndex((payloadType) => Number(payloadType.parameters?.apt) === vp8PayloadType.id);\n  mediaContent.payloadTypes = [payloadTypes[idx], payloadTypes[rtxIdx]];\n\n  return mediaContent;\n}\n\nfunction sendInitialSetup(sdp: P2pParsedSdp) {\n  if (!state) return;\n  const { emitSignalingData } = state;\n\n  if (!sdp.ssrc || !sdp['ssrc-groups'] || !sdp['ssrc-groups'][0] || !sdp['ssrc-groups'][1]) return;\n\n  emitSignalingData({\n    '@type': 'InitialSetup',\n    fingerprints: sdp.fingerprints,\n    ufrag: sdp.ufrag,\n    pwd: sdp.pwd,\n    audio: {\n      ssrc: fromTelegramSource(sdp.ssrc).toString(),\n      ssrcGroups: [],\n      payloadTypes: sdp.audioPayloadTypes,\n      rtpExtensions: sdp.audioExtmap,\n    },\n    video: filterVP8({\n      ssrc: fromTelegramSource(sdp['ssrc-groups'][0].sources[0]).toString(),\n      ssrcGroups: [{\n        semantics: sdp['ssrc-groups'][0].semantics,\n        ssrcs: sdp['ssrc-groups'][0].sources.map(fromTelegramSource),\n      }],\n      payloadTypes: sdp.videoPayloadTypes,\n      rtpExtensions: sdp.videoExtmap,\n    }),\n    screencast: filterVP8({\n      ssrc: fromTelegramSource(sdp['ssrc-groups'][1].sources[0]).toString(),\n      ssrcGroups: [{\n        semantics: sdp['ssrc-groups'][1].semantics,\n        ssrcs: sdp['ssrc-groups'][1].sources.map(fromTelegramSource),\n      }],\n      payloadTypes: sdp.screencastPayloadTypes,\n      rtpExtensions: sdp.screencastExtmap,\n    }),\n  });\n}\n\nexport async function processSignalingMessage(message: P2pMessage) {\n  if (!state || !state.connection) return;\n\n  console.log(message);\n\n  switch (message['@type']) {\n    case 'MediaState': {\n      state.mediaState = message;\n      updateStreams();\n      sendMediaState();\n      break;\n    }\n    case 'Candidates': {\n      const { candidates, gotInitialSetup } = state;\n\n      if (!candidates) return;\n\n      message.candidates.forEach((candidate) => {\n        state!.candidates.push(candidate.sdpString);\n      });\n\n      if (gotInitialSetup) {\n        await Promise.all(state.candidates.map((c) => state!.connection.addIceCandidate({\n          candidate: c,\n          sdpMLineIndex: 0,\n        })));\n      }\n\n      break;\n    }\n    case 'InitialSetup': {\n      const {\n        connection, isOutgoing,\n      } = state;\n      if (!connection) return;\n\n      const newConference = {\n        transport: {\n          candidates: [],\n          ufrag: message.ufrag,\n          pwd: message.pwd,\n          fingerprints: message.fingerprints,\n          'rtcp-mux': false,\n          xmlns: '',\n        },\n        sessionId: Date.now(),\n        ssrcs: [\n          message.audio && {\n            isVideo: false,\n            isMain: false,\n            userId: '123',\n            endpoint: '0',\n            sourceGroups: [{\n              semantics: 'FID',\n              sources: [message.audio.ssrc],\n            }],\n          },\n          message.video && {\n            isVideo: true,\n            isPresentation: false,\n            isMain: false,\n            userId: '123',\n            endpoint: '1',\n            sourceGroups: message.video.ssrcGroups.map((l) => ({\n              semantics: l.semantics,\n              sources: l.ssrcs,\n            })),\n          },\n          message.screencast && {\n            isVideo: true,\n            isPresentation: true,\n            isMain: false,\n            userId: '123',\n            endpoint: '2',\n            sourceGroups: message.screencast.ssrcGroups.map((l) => ({\n              semantics: l.semantics,\n              sources: l.ssrcs,\n            })),\n          },\n        ],\n        audioPayloadTypes: message.audio!.payloadTypes?.map(p2pPayloadTypeToConference) || [],\n        audioExtensions: message.audio!.rtpExtensions,\n        videoPayloadTypes: filterVP8(message.video!).payloadTypes?.map(p2pPayloadTypeToConference) || [],\n        videoExtensions: message.video!.rtpExtensions,\n      } as Conference;\n\n      await connection.setRemoteDescription({\n        sdp: buildSdp(newConference, isOutgoing, undefined, true),\n        type: isOutgoing ? 'answer' : 'offer',\n      });\n\n      state.conference = newConference;\n\n      if (!isOutgoing) {\n        const answer = await connection.createAnswer();\n        if (!answer) return;\n\n        await connection.setLocalDescription(answer);\n\n        sendInitialSetup(parseSdp(answer, true) as P2pParsedSdp);\n      }\n\n      state.gotInitialSetup = true;\n      await Promise.all(state.candidates.map((c) => connection.addIceCandidate({\n        candidate: c,\n        sdpMLineIndex: 0,\n      })));\n\n      break;\n    }\n  }\n}\n","import { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  joinGroupCall,\n  startSharingScreen,\n  leaveGroupCall,\n  toggleStream,\n  isStreamEnabled,\n  setVolume, stopPhoneCall,\n} from '../../../lib/secret-sauce';\n\nimport type { ActionReturnType } from '../../types';\n\nimport { GROUP_CALL_VOLUME_MULTIPLIER } from '../../../config';\nimport { callApi } from '../../../api/gramjs';\nimport { selectChat, selectTabState, selectUser } from '../../selectors';\nimport {\n  selectActiveGroupCall, selectPhoneCallUser,\n} from '../../selectors/calls';\nimport {\n  removeGroupCall,\n  updateActiveGroupCall,\n} from '../../reducers/calls';\nimport { getGroupCallAudioContext, getGroupCallAudioElement, removeGroupCallAudioElement } from '../ui/calls';\nimport { loadFullChat } from './chats';\nimport { addUsers } from '../../reducers';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { updateTabState } from '../../reducers/tabs';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\n\nconst HANG_UP_UI_DELAY = 500;\n\naddActionHandler('leaveGroupCall', async (global, actions, payload): Promise<void> => {\n  const {\n    isFromLibrary, shouldDiscard, shouldRemove, rejoin,\n    tabId = getCurrentTabId(),\n  } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) {\n    return;\n  }\n\n  global = updateActiveGroupCall(global, { connectionState: 'disconnected' }, groupCall.participantsCount - 1);\n  setGlobal(global);\n\n  await callApi('leaveGroupCall', {\n    call: groupCall,\n  });\n\n  if (shouldDiscard) {\n    await callApi('discardGroupCall', {\n      call: groupCall,\n    });\n  }\n\n  global = getGlobal();\n  if (shouldRemove) {\n    global = removeGroupCall(global, groupCall.id);\n  }\n\n  removeGroupCallAudioElement();\n\n  global = {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      activeGroupCallId: undefined,\n    },\n  };\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n  if (!isFromLibrary) {\n    leaveGroupCall();\n  }\n\n  actions.afterHangUp();\n\n  if (rejoin) {\n    actions.requestMasterAndJoinGroupCall({\n      ...rejoin,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('toggleGroupCallVideo', async (global): Promise<void> => {\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  await toggleStream('video');\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    videoStopped: !isStreamEnabled('video'),\n    participant: user,\n  });\n});\n\naddActionHandler('requestToSpeak', (global, actions, payload): ActionReturnType => {\n  const { value } = payload || { value: true };\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  void callApi('editGroupCallParticipant', {\n    call: groupCall,\n    raiseHand: value,\n    participant: user,\n  });\n});\n\naddActionHandler('setGroupCallParticipantVolume', (global, actions, payload): ActionReturnType => {\n  const { participantId, volume } = payload!;\n\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, participantId);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  setVolume(participantId, Math.floor(volume / GROUP_CALL_VOLUME_MULTIPLIER) / 100);\n\n  void callApi('editGroupCallParticipant', {\n    call: groupCall,\n    volume: Number(volume),\n    participant: user,\n  });\n});\n\naddActionHandler('toggleGroupCallMute', async (global, actions, payload): Promise<void> => {\n  const { participantId, value } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, participantId || global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  const muted = value === undefined ? isStreamEnabled('audio', user.id) : value;\n\n  if (!participantId) {\n    await toggleStream('audio');\n  } else {\n    setVolume(participantId, muted ? 0 : 1);\n  }\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    muted,\n    participant: user,\n  });\n});\n\naddActionHandler('toggleGroupCallPresentation', async (global, actions, payload): Promise<void> => {\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  const value = payload?.value !== undefined ? payload?.value : !isStreamEnabled('presentation');\n  if (value) {\n    const params = await startSharingScreen();\n    if (!params) {\n      return;\n    }\n\n    await callApi('joinGroupCallPresentation', {\n      call: groupCall,\n      params,\n    });\n  } else {\n    await toggleStream('presentation', false);\n    await callApi('leaveGroupCallPresentation', {\n      call: groupCall,\n    });\n  }\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    presentationPaused: !isStreamEnabled('presentation'),\n    participant: user,\n  });\n});\n\naddActionHandler('connectToActiveGroupCall', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) return;\n\n  if (groupCall.connectionState === 'discarded') {\n    actions.showNotification({ message: 'This voice chat is not active', tabId });\n    return;\n  }\n\n  const audioElement = getGroupCallAudioElement();\n  const audioContext = getGroupCallAudioContext();\n\n  if (!audioElement || !audioContext) {\n    return;\n  }\n\n  const {\n    currentUserId,\n  } = global;\n\n  if (!currentUserId) return;\n\n  const params = await joinGroupCall(currentUserId, audioContext, audioElement, actions.apiUpdate);\n\n  const result = await callApi('joinGroupCall', {\n    call: groupCall,\n    params,\n    inviteHash: groupCall.inviteHash,\n  });\n\n  global = getGlobal();\n\n  if (!result) return;\n\n  actions.loadMoreGroupCallParticipants();\n\n  if (groupCall.chatId) {\n    global = getGlobal();\n    const chat = selectChat(global, groupCall.chatId);\n    if (!chat) return;\n    await loadFullChat(global, actions, chat, tabId);\n  }\n});\n\naddActionHandler('connectToActivePhoneCall', async (global, actions): Promise<void> => {\n  const { phoneCall } = global;\n\n  if (!phoneCall) return;\n\n  const user = selectPhoneCallUser(global);\n\n  if (!user) return;\n\n  const dhConfig = await callApi('getDhConfig');\n\n  if (!dhConfig) return;\n\n  await callApi('createPhoneCallState', [true]);\n\n  const gAHash = await callApi('requestPhoneCall', [dhConfig])!;\n\n  const result = await callApi('requestCall', { user, gAHash, isVideo: phoneCall.isVideo });\n\n  if (!result) {\n    if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n    return;\n  }\n  global = getGlobal();\n  global = addUsers(global, buildCollectionByKey(result.users, 'id'));\n  setGlobal(global);\n});\n\naddActionHandler('acceptCall', async (global): Promise<void> => {\n  const { phoneCall } = global;\n\n  if (!phoneCall) return;\n\n  const dhConfig = await callApi('getDhConfig');\n  if (!dhConfig) return;\n\n  await callApi('createPhoneCallState', [false]);\n\n  const gB = await callApi('acceptPhoneCall', [dhConfig])!;\n  const result = await callApi('acceptCall', { call: phoneCall, gB });\n  if (!result) {\n    return;\n  }\n  global = getGlobal();\n  global = addUsers(global, buildCollectionByKey(result.users, 'id'));\n  setGlobal(global);\n});\n\naddActionHandler('sendSignalingData', (global, actions, payload): ActionReturnType => {\n  const { phoneCall } = global;\n  if (!phoneCall) {\n    return;\n  }\n\n  const data = JSON.stringify(payload);\n\n  (async () => {\n    const encodedData = await callApi('encodePhoneCallData', [data]);\n\n    if (!encodedData) return;\n\n    callApi('sendSignalingData', { data: encodedData, call: phoneCall });\n  })();\n});\n\naddActionHandler('closeCallRatingModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    ratingPhoneCall: undefined,\n  }, tabId);\n});\n\naddActionHandler('setCallRating', (global, actions, payload): ActionReturnType => {\n  const { rating, comment, tabId = getCurrentTabId() } = payload;\n\n  const { ratingPhoneCall } = selectTabState(global, tabId);\n  if (!ratingPhoneCall) {\n    return undefined;\n  }\n\n  callApi('setCallRating', { call: ratingPhoneCall, rating, comment });\n\n  return updateTabState(global, {\n    ratingPhoneCall: undefined,\n  }, tabId);\n});\n\naddActionHandler('hangUp', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const { phoneCall } = global;\n\n  if (!phoneCall) return undefined;\n\n  if (phoneCall.state === 'discarded') {\n    callApi('destroyPhoneCallState');\n    stopPhoneCall();\n\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n    actions.afterHangUp();\n\n    return undefined;\n  }\n\n  callApi('destroyPhoneCallState');\n  stopPhoneCall();\n  callApi('discardCall', { call: phoneCall });\n\n  if (phoneCall.state === 'requesting') {\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n    actions.afterHangUp();\n\n    return undefined;\n  }\n\n  setTimeout(() => {\n    global = getGlobal();\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n    actions.afterHangUp();\n  }, HANG_UP_UI_DELAY);\n\n  return undefined;\n});\n","export const EMOJI_DATA = new Uint16Array([\n  0xd83d, 0xde09, 0xd83d, 0xde0d, 0xd83d, 0xde1b, 0xd83d, 0xde2d, 0xd83d, 0xde31, 0xd83d, 0xde21,\n  0xd83d, 0xde0e, 0xd83d, 0xde34, 0xd83d, 0xde35, 0xd83d, 0xde08, 0xd83d, 0xde2c, 0xd83d, 0xde07,\n  0xd83d, 0xde0f, 0xd83d, 0xdc6e, 0xd83d, 0xdc77, 0xd83d, 0xdc82, 0xd83d, 0xdc76, 0xd83d, 0xdc68,\n  0xd83d, 0xdc69, 0xd83d, 0xdc74, 0xd83d, 0xdc75, 0xd83d, 0xde3b, 0xd83d, 0xde3d, 0xd83d, 0xde40,\n  0xd83d, 0xdc7a, 0xd83d, 0xde48, 0xd83d, 0xde49, 0xd83d, 0xde4a, 0xd83d, 0xdc80, 0xd83d, 0xdc7d,\n  0xd83d, 0xdca9, 0xd83d, 0xdd25, 0xd83d, 0xdca5, 0xd83d, 0xdca4, 0xd83d, 0xdc42, 0xd83d, 0xdc40,\n  0xd83d, 0xdc43, 0xd83d, 0xdc45, 0xd83d, 0xdc44, 0xd83d, 0xdc4d, 0xd83d, 0xdc4e, 0xd83d, 0xdc4c,\n  0xd83d, 0xdc4a, 0x270c, 0x270b, 0xd83d, 0xdc50, 0xd83d, 0xdc46, 0xd83d, 0xdc47, 0xd83d, 0xdc49,\n  0xd83d, 0xdc48, 0xd83d, 0xde4f, 0xd83d, 0xdc4f, 0xd83d, 0xdcaa, 0xd83d, 0xdeb6, 0xd83c, 0xdfc3,\n  0xd83d, 0xdc83, 0xd83d, 0xdc6b, 0xd83d, 0xdc6a, 0xd83d, 0xdc6c, 0xd83d, 0xdc6d, 0xd83d, 0xdc85,\n  0xd83c, 0xdfa9, 0xd83d, 0xdc51, 0xd83d, 0xdc52, 0xd83d, 0xdc5f, 0xd83d, 0xdc5e, 0xd83d, 0xdc60,\n  0xd83d, 0xdc55, 0xd83d, 0xdc57, 0xd83d, 0xdc56, 0xd83d, 0xdc59, 0xd83d, 0xdc5c, 0xd83d, 0xdc53,\n  0xd83c, 0xdf80, 0xd83d, 0xdc84, 0xd83d, 0xdc9b, 0xd83d, 0xdc99, 0xd83d, 0xdc9c, 0xd83d, 0xdc9a,\n  0xd83d, 0xdc8d, 0xd83d, 0xdc8e, 0xd83d, 0xdc36, 0xd83d, 0xdc3a, 0xd83d, 0xdc31, 0xd83d, 0xdc2d,\n  0xd83d, 0xdc39, 0xd83d, 0xdc30, 0xd83d, 0xdc38, 0xd83d, 0xdc2f, 0xd83d, 0xdc28, 0xd83d, 0xdc3b,\n  0xd83d, 0xdc37, 0xd83d, 0xdc2e, 0xd83d, 0xdc17, 0xd83d, 0xdc34, 0xd83d, 0xdc11, 0xd83d, 0xdc18,\n  0xd83d, 0xdc3c, 0xd83d, 0xdc27, 0xd83d, 0xdc25, 0xd83d, 0xdc14, 0xd83d, 0xdc0d, 0xd83d, 0xdc22,\n  0xd83d, 0xdc1b, 0xd83d, 0xdc1d, 0xd83d, 0xdc1c, 0xd83d, 0xdc1e, 0xd83d, 0xdc0c, 0xd83d, 0xdc19,\n  0xd83d, 0xdc1a, 0xd83d, 0xdc1f, 0xd83d, 0xdc2c, 0xd83d, 0xdc0b, 0xd83d, 0xdc10, 0xd83d, 0xdc0a,\n  0xd83d, 0xdc2b, 0xd83c, 0xdf40, 0xd83c, 0xdf39, 0xd83c, 0xdf3b, 0xd83c, 0xdf41, 0xd83c, 0xdf3e,\n  0xd83c, 0xdf44, 0xd83c, 0xdf35, 0xd83c, 0xdf34, 0xd83c, 0xdf33, 0xd83c, 0xdf1e, 0xd83c, 0xdf1a,\n  0xd83c, 0xdf19, 0xd83c, 0xdf0e, 0xd83c, 0xdf0b, 0x26a1, 0x2614, 0x2744, 0x26c4, 0xd83c, 0xdf00,\n  0xd83c, 0xdf08, 0xd83c, 0xdf0a, 0xd83c, 0xdf93, 0xd83c, 0xdf86, 0xd83c, 0xdf83, 0xd83d, 0xdc7b,\n  0xd83c, 0xdf85, 0xd83c, 0xdf84, 0xd83c, 0xdf81, 0xd83c, 0xdf88, 0xd83d, 0xdd2e, 0xd83c, 0xdfa5,\n  0xd83d, 0xdcf7, 0xd83d, 0xdcbf, 0xd83d, 0xdcbb, 0x260e, 0xd83d, 0xdce1, 0xd83d, 0xdcfa, 0xd83d,\n  0xdcfb, 0xd83d, 0xdd09, 0xd83d, 0xdd14, 0x23f3, 0x23f0, 0x231a, 0xd83d, 0xdd12, 0xd83d, 0xdd11,\n  0xd83d, 0xdd0e, 0xd83d, 0xdca1, 0xd83d, 0xdd26, 0xd83d, 0xdd0c, 0xd83d, 0xdd0b, 0xd83d, 0xdebf,\n  0xd83d, 0xdebd, 0xd83d, 0xdd27, 0xd83d, 0xdd28, 0xd83d, 0xdeaa, 0xd83d, 0xdeac, 0xd83d, 0xdca3,\n  0xd83d, 0xdd2b, 0xd83d, 0xdd2a, 0xd83d, 0xdc8a, 0xd83d, 0xdc89, 0xd83d, 0xdcb0, 0xd83d, 0xdcb5,\n  0xd83d, 0xdcb3, 0x2709, 0xd83d, 0xdceb, 0xd83d, 0xdce6, 0xd83d, 0xdcc5, 0xd83d, 0xdcc1, 0x2702,\n  0xd83d, 0xdccc, 0xd83d, 0xdcce, 0x2712, 0x270f, 0xd83d, 0xdcd0, 0xd83d, 0xdcda, 0xd83d, 0xdd2c,\n  0xd83d, 0xdd2d, 0xd83c, 0xdfa8, 0xd83c, 0xdfac, 0xd83c, 0xdfa4, 0xd83c, 0xdfa7, 0xd83c, 0xdfb5,\n  0xd83c, 0xdfb9, 0xd83c, 0xdfbb, 0xd83c, 0xdfba, 0xd83c, 0xdfb8, 0xd83d, 0xdc7e, 0xd83c, 0xdfae,\n  0xd83c, 0xdccf, 0xd83c, 0xdfb2, 0xd83c, 0xdfaf, 0xd83c, 0xdfc8, 0xd83c, 0xdfc0, 0x26bd, 0x26be,\n  0xd83c, 0xdfbe, 0xd83c, 0xdfb1, 0xd83c, 0xdfc9, 0xd83c, 0xdfb3, 0xd83c, 0xdfc1, 0xd83c, 0xdfc7,\n  0xd83c, 0xdfc6, 0xd83c, 0xdfca, 0xd83c, 0xdfc4, 0x2615, 0xd83c, 0xdf7c, 0xd83c, 0xdf7a, 0xd83c,\n  0xdf77, 0xd83c, 0xdf74, 0xd83c, 0xdf55, 0xd83c, 0xdf54, 0xd83c, 0xdf5f, 0xd83c, 0xdf57, 0xd83c,\n  0xdf71, 0xd83c, 0xdf5a, 0xd83c, 0xdf5c, 0xd83c, 0xdf61, 0xd83c, 0xdf73, 0xd83c, 0xdf5e, 0xd83c,\n  0xdf69, 0xd83c, 0xdf66, 0xd83c, 0xdf82, 0xd83c, 0xdf70, 0xd83c, 0xdf6a, 0xd83c, 0xdf6b, 0xd83c,\n  0xdf6d, 0xd83c, 0xdf6f, 0xd83c, 0xdf4e, 0xd83c, 0xdf4f, 0xd83c, 0xdf4a, 0xd83c, 0xdf4b, 0xd83c,\n  0xdf52, 0xd83c, 0xdf47, 0xd83c, 0xdf49, 0xd83c, 0xdf53, 0xd83c, 0xdf51, 0xd83c, 0xdf4c, 0xd83c,\n  0xdf50, 0xd83c, 0xdf4d, 0xd83c, 0xdf46, 0xd83c, 0xdf45, 0xd83c, 0xdf3d, 0xd83c, 0xdfe1, 0xd83c,\n  0xdfe5, 0xd83c, 0xdfe6, 0x26ea, 0xd83c, 0xdff0, 0x26fa, 0xd83c, 0xdfed, 0xd83d, 0xddfb, 0xd83d,\n  0xddfd, 0xd83c, 0xdfa0, 0xd83c, 0xdfa1, 0x26f2, 0xd83c, 0xdfa2, 0xd83d, 0xdea2, 0xd83d, 0xdea4,\n  0x2693, 0xd83d, 0xde80, 0x2708, 0xd83d, 0xde81, 0xd83d, 0xde82, 0xd83d, 0xde8b, 0xd83d, 0xde8e,\n  0xd83d, 0xde8c, 0xd83d, 0xde99, 0xd83d, 0xde97, 0xd83d, 0xde95, 0xd83d, 0xde9b, 0xd83d, 0xdea8,\n  0xd83d, 0xde94, 0xd83d, 0xde92, 0xd83d, 0xde91, 0xd83d, 0xdeb2, 0xd83d, 0xdea0, 0xd83d, 0xde9c,\n  0xd83d, 0xdea6, 0x26a0, 0xd83d, 0xdea7, 0x26fd, 0xd83c, 0xdfb0, 0xd83d, 0xddff, 0xd83c, 0xdfaa,\n  0xd83c, 0xdfad, 0xd83c, 0xddef, 0xd83c, 0xddf5, 0xd83c, 0xddf0, 0xd83c, 0xddf7, 0xd83c, 0xdde9,\n  0xd83c, 0xddea, 0xd83c, 0xdde8, 0xd83c, 0xddf3, 0xd83c, 0xddfa, 0xd83c, 0xddf8, 0xd83c, 0xddeb,\n  0xd83c, 0xddf7, 0xd83c, 0xddea, 0xd83c, 0xddf8, 0xd83c, 0xddee, 0xd83c, 0xddf9, 0xd83c, 0xddf7,\n  0xd83c, 0xddfa, 0xd83c, 0xddec, 0xd83c, 0xdde7, 0x0031, 0x20e3, 0x0032, 0x20e3, 0x0033, 0x20e3,\n  0x0034, 0x20e3, 0x0035, 0x20e3, 0x0036, 0x20e3, 0x0037, 0x20e3, 0x0038, 0x20e3, 0x0039, 0x20e3,\n  0x0030, 0x20e3, 0xd83d, 0xdd1f, 0x2757, 0x2753, 0x2665, 0x2666, 0xd83d, 0xdcaf, 0xd83d, 0xdd17,\n  0xd83d, 0xdd31, 0xd83d, 0xdd34, 0xd83d, 0xdd35, 0xd83d, 0xdd36, 0xd83d, 0xdd37,\n]);\n\nexport const EMOJI_OFFSETS = [\n  0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22,\n  24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46,\n  48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70,\n  72, 74, 76, 78, 80, 82, 84, 86, 87, 88, 90, 92,\n  94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116,\n  118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140,\n  142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164,\n  166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188,\n  190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212,\n  214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236,\n  238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 259,\n  260, 261, 262, 264, 266, 268, 270, 272, 274, 276, 278, 280,\n  282, 284, 286, 288, 290, 292, 294, 295, 297, 299, 301, 303,\n  305, 306, 307, 308, 310, 312, 314, 316, 318, 320, 322, 324,\n  326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348,\n  350, 351, 353, 355, 357, 359, 360, 362, 364, 365, 366, 368,\n  370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392,\n  394, 396, 398, 400, 402, 404, 406, 407, 408, 410, 412, 414,\n  416, 418, 420, 422, 424, 426, 427, 429, 431, 433, 435, 437,\n  439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 459, 461,\n  463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485,\n  487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 508,\n  510, 511, 513, 515, 517, 519, 521, 522, 524, 526, 528, 529,\n  531, 532, 534, 536, 538, 540, 542, 544, 546, 548, 550, 552,\n  554, 556, 558, 560, 562, 564, 566, 567, 569, 570, 572, 574,\n  576, 578, 582, 586, 590, 594, 598, 602, 606, 610, 614, 618,\n  620, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 641,\n  642, 643, 644, 646, 648, 650, 652, 654, 656, 658,\n];\n","import { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport { selectActiveGroupCall, selectGroupCallParticipant, selectPhoneCallUser } from '../../selectors/calls';\nimport { updateGroupCall, updateGroupCallParticipant } from '../../reducers/calls';\nimport { buildCollectionByKey, omit } from '../../../util/iteratees';\nimport type { ApiCallProtocol } from '../../../lib/secret-sauce';\nimport {\n  handleUpdateGroupCallConnection,\n  handleUpdateGroupCallParticipants,\n  joinPhoneCall, processSignalingMessage,\n} from '../../../lib/secret-sauce';\nimport type { ApiPhoneCall } from '../../../api/types';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/windowEnvironment';\nimport { callApi } from '../../../api/gramjs';\nimport * as langProvider from '../../../util/langProvider';\nimport { EMOJI_DATA, EMOJI_OFFSETS } from '../../../util/phoneCallEmojiConstants';\nimport type { ActionReturnType } from '../../types';\nimport { updateTabState } from '../../reducers/tabs';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { addUsers } from '../../reducers';\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  const { activeGroupCallId } = global.groupCalls;\n\n  switch (update['@type']) {\n    case 'updateGroupCallLeavePresentation': {\n      actions.toggleGroupCallPresentation({ value: false });\n      break;\n    }\n    case 'updateGroupCallStreams': {\n      if (!update.userId || !activeGroupCallId) break;\n      if (!selectGroupCallParticipant(global, activeGroupCallId, update.userId)) break;\n\n      return updateGroupCallParticipant(global, activeGroupCallId, update.userId, omit(update, ['@type', 'userId']));\n    }\n    case 'updateGroupCallConnectionState': {\n      if (!activeGroupCallId) break;\n\n      if (update.connectionState === 'disconnected') {\n        if ('leaveGroupCall' in actions) actions.leaveGroupCall({ isFromLibrary: true, tabId: getCurrentTabId() });\n        break;\n      }\n\n      return updateGroupCall(global, activeGroupCallId, {\n        connectionState: update.connectionState,\n        isSpeakerDisabled: update.isSpeakerDisabled,\n      });\n    }\n    case 'updateGroupCallParticipants': {\n      const { groupCallId, participants } = update;\n      if (activeGroupCallId === groupCallId) {\n        void handleUpdateGroupCallParticipants(participants);\n      }\n      break;\n    }\n    case 'updateGroupCallConnection': {\n      if (update.data.stream) {\n        actions.showNotification({ message: 'Big live streams are not yet supported', tabId: getCurrentTabId() });\n        if ('leaveGroupCall' in actions) actions.leaveGroupCall({ tabId: getCurrentTabId() });\n        break;\n      }\n      void handleUpdateGroupCallConnection(update.data, update.presentation);\n\n      const groupCall = selectActiveGroupCall(global);\n      if (groupCall?.participants && Object.keys(groupCall.participants).length > 0) {\n        void handleUpdateGroupCallParticipants(Object.values(groupCall.participants));\n      }\n      break;\n    }\n    case 'updatePhoneCallMediaState':\n      return {\n        ...global,\n        phoneCall: {\n          ...global.phoneCall,\n          ...omit(update, ['@type']),\n        } as ApiPhoneCall,\n      };\n    case 'updatePhoneCall': {\n      if (!ARE_CALLS_SUPPORTED) return undefined;\n      const { phoneCall, currentUserId } = global;\n\n      const call: ApiPhoneCall = {\n        ...phoneCall,\n        ...update.call,\n      };\n\n      const isOutgoing = phoneCall?.adminId === currentUserId;\n\n      global = {\n        ...global,\n        phoneCall: call,\n      };\n\n      if (phoneCall && phoneCall.id && call.id !== phoneCall.id) {\n        if (call.state !== 'discarded') {\n          callApi('discardCall', {\n            call,\n            isBusy: true,\n          });\n        }\n        return undefined;\n      }\n\n      const {\n        accessHash, state, connections, gB,\n      } = call;\n\n      if (state === 'active' || state === 'accepted') {\n        if (!verifyPhoneCallProtocol(call.protocol)) {\n          const user = selectPhoneCallUser(global);\n          if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n          actions.showNotification({\n            message: langProvider.translate('VoipPeerIncompatible', user?.firstName),\n            tabId: getCurrentTabId(),\n          });\n          return undefined;\n        }\n      }\n\n      if (state === 'discarded') {\n        // Discarded from other device\n        if (!phoneCall) return undefined;\n\n        return updateTabState(global, {\n          ...(call.needRating && { ratingPhoneCall: call }),\n          isCallPanelVisible: undefined,\n        }, getCurrentTabId());\n      } else if (state === 'accepted' && accessHash && gB) {\n        (async () => {\n          const { gA, keyFingerprint, emojis } = await callApi('confirmPhoneCall', [gB, EMOJI_DATA, EMOJI_OFFSETS])!;\n\n          global = getGlobal();\n          const newCall = {\n            ...global.phoneCall,\n            emojis,\n          } as ApiPhoneCall;\n\n          global = {\n            ...global,\n            phoneCall: newCall,\n          };\n          setGlobal(global);\n\n          const result = await callApi('confirmCall', {\n            call, gA, keyFingerprint,\n          });\n          if (result) {\n            global = getGlobal();\n            global = addUsers(global, buildCollectionByKey(result.users, 'id'));\n            setGlobal(global);\n          }\n        })();\n      } else if (state === 'active' && connections && phoneCall?.state !== 'active') {\n        if (!isOutgoing) {\n          callApi('receivedCall', { call });\n          (async () => {\n            const { emojis } = await callApi('confirmPhoneCall', [call!.gAOrB!, EMOJI_DATA, EMOJI_OFFSETS])!;\n\n            global = getGlobal();\n            const newCall = {\n              ...global.phoneCall,\n              emojis,\n            } as ApiPhoneCall;\n\n            global = {\n              ...global,\n              phoneCall: newCall,\n            };\n            setGlobal(global);\n          })();\n        }\n        void joinPhoneCall(\n          connections, actions.sendSignalingData, isOutgoing, Boolean(call?.isVideo), actions.apiUpdate,\n        );\n      }\n\n      return global;\n    }\n    case 'updatePhoneCallConnectionState': {\n      const { connectionState } = update;\n\n      if (!global.phoneCall) return global;\n\n      if (connectionState === 'closed' || connectionState === 'disconnected' || connectionState === 'failed') {\n        if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n        return undefined;\n      }\n\n      return {\n        ...global,\n        phoneCall: {\n          ...global.phoneCall,\n          isConnected: connectionState === 'connected',\n        },\n      };\n    }\n    case 'updatePhoneCallSignalingData': {\n      const { phoneCall } = global;\n\n      if (!phoneCall) {\n        break;\n      }\n\n      callApi('decodePhoneCallData', [update.data])?.then(processSignalingMessage);\n      break;\n    }\n  }\n\n  return undefined;\n});\n\nfunction verifyPhoneCallProtocol(protocol?: ApiCallProtocol) {\n  return protocol?.libraryVersions.some((version) => {\n    return version === '4.0.0' || version === '4.0.1';\n  });\n}\n","export const vibrateShort = () => {\n  navigator.vibrate?.(50);\n};\n","import type { GroupCallConnectionState } from '../../../lib/secret-sauce';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport buildClassName from '../../../util/buildClassName';\nimport { vibrateShort } from '../../../util/vibrate';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { selectActiveGroupCall, selectGroupCallParticipant } from '../../../global/selectors/calls';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\n\nimport './MicrophoneButton.scss';\n\nconst CONNECTION_STATE_DEFAULT = 'discarded';\n\ntype StateProps = {\n  connectionState?: GroupCallConnectionState;\n  hasRequestedToSpeak: boolean;\n  isMuted?: boolean;\n  canSelfUnmute?: boolean;\n  noAudioStream: boolean;\n};\n\nconst REQUEST_TO_SPEAK_THROTTLE = 3000;\nconst HOLD_TO_SPEAK_TIME = 200;\nconst ICON_SIZE = 48;\n\nconst MicrophoneButton: FC<StateProps> = ({\n  noAudioStream,\n  canSelfUnmute,\n  isMuted,\n  hasRequestedToSpeak,\n  connectionState,\n}) => {\n  const {\n    toggleGroupCallMute,\n    requestToSpeak,\n    playGroupCallSound,\n  } = getActions();\n\n  const lang = useLang();\n  const muteMouseDownState = useRef('up');\n\n  const [isRequestingToSpeak, setIsRequestingToSpeak] = useState(false);\n  const isConnecting = connectionState !== 'connected';\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n  const prevShouldRaiseHand = usePrevious(shouldRaiseHand);\n\n  useEffect(() => {\n    if (prevShouldRaiseHand && !shouldRaiseHand) {\n      playGroupCallSound({ sound: 'allowTalk' });\n    }\n  }, [playGroupCallSound, prevShouldRaiseHand, shouldRaiseHand]);\n\n  // Voice mini\n  // unmuted -> muted [69, 99]\n  // muted -> unmuted [36, 69]\n  // raise -> muted [0, 36]\n  // muted -> raise [99, 136]\n  // unmuted -> raise [136, 172]\n  // TODO should probably move to other component\n  const playSegment: [number, number] = useMemo(() => {\n    if (isRequestingToSpeak) {\n      const r = Math.floor(Math.random() * 100);\n      return (r < 32 ? [0, 120]\n        : (r < 64 ? [120, 240]\n          : (r < 97 ? [240, 420]\n            : [420, 540]\n          )\n        )\n      );\n    }\n    if (!prevShouldRaiseHand && shouldRaiseHand) {\n      return noAudioStream ? [99, 135] : [136, 172];\n    }\n    if (prevShouldRaiseHand && !shouldRaiseHand) {\n      return [0, 36];\n    }\n    if (!shouldRaiseHand) {\n      return noAudioStream ? [69, 99] : [36, 69];\n    }\n    return [0, 0];\n  }, [prevShouldRaiseHand, isRequestingToSpeak, noAudioStream, shouldRaiseHand]);\n\n  const animatedIconName = isRequestingToSpeak ? 'HandFilled' : 'VoiceMini';\n\n  const toggleMute = () => {\n    vibrateShort();\n    toggleGroupCallMute();\n  };\n\n  const handleMouseDownMute = () => {\n    if (shouldRaiseHand) {\n      if (isRequestingToSpeak) return;\n      vibrateShort();\n      requestToSpeak();\n      setIsRequestingToSpeak(true);\n      setTimeout(() => {\n        setIsRequestingToSpeak(false);\n      }, REQUEST_TO_SPEAK_THROTTLE);\n      return;\n    }\n    muteMouseDownState.current = 'down';\n    if (noAudioStream) {\n      setTimeout(() => {\n        if (muteMouseDownState.current === 'down') {\n          muteMouseDownState.current = 'hold';\n          toggleMute();\n        }\n      }, HOLD_TO_SPEAK_TIME);\n    }\n  };\n\n  const handleMouseUpMute = () => {\n    if (shouldRaiseHand) {\n      return;\n    }\n    toggleMute();\n    muteMouseDownState.current = 'up';\n  };\n\n  const buttonText = lang(\n    hasRequestedToSpeak ? 'VoipMutedTapedForSpeak' : (\n      shouldRaiseHand ? 'VoipMutedByAdmin' : (\n        noAudioStream ? 'VoipUnmute' : 'VoipTapToMute'\n      )\n    ),\n  );\n\n  return (\n    <div className=\"button-wrapper microphone-wrapper\">\n      <button\n        className={buildClassName(\n          'MicrophoneButton',\n          noAudioStream && 'crossed',\n          canSelfUnmute && 'can-self-unmute',\n          isConnecting && 'is-connecting',\n          shouldRaiseHand && 'muted-by-admin',\n        )}\n        onMouseDown={handleMouseDownMute}\n        onMouseUp={handleMouseUpMute}\n      >\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS[animatedIconName]}\n          size={ICON_SIZE}\n          playSegment={playSegment}\n        />\n      </button>\n      <div className=\"button-text\">\n        {buttonText}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const groupCall = selectActiveGroupCall(global);\n\n    const { connectionState } = groupCall || {};\n    const meParticipant = groupCall && selectGroupCallParticipant(global, groupCall.id, global.currentUserId!);\n\n    const {\n      raiseHandRating, hasAudioStream, canSelfUnmute, isMuted,\n    } = meParticipant || {};\n\n    return {\n      connectionState: connectionState || CONNECTION_STATE_DEFAULT,\n      hasRequestedToSpeak: Boolean(raiseHandRating),\n      noAudioStream: !hasAudioStream,\n      canSelfUnmute,\n      isMuted,\n    };\n  },\n)(MicrophoneButton));\n","import type { GroupCallParticipant } from '../../../lib/secret-sauce';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport { GROUP_CALL_DEFAULT_VOLUME, GROUP_CALL_VOLUME_MULTIPLIER } from '../../../config';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport useRunThrottled from '../../../hooks/useRunThrottled';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport { selectIsAdminInActiveGroupCall } from '../../../global/selectors/calls';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport DeleteMemberModal from '../../right/DeleteMemberModal';\n\nimport './GroupCallParticipantMenu.scss';\n\nconst SPEAKER_ICON_DISABLED_SEGMENT: [number, number] = [0, 17];\nconst SPEAKER_ICON_ENABLED_SEGMENT: [number, number] = [17, 34];\n\ntype OwnProps = {\n  participant?: GroupCallParticipant;\n  closeDropdown: VoidFunction;\n  isDropdownOpen: boolean;\n  anchor?: IAnchorPosition;\n};\n\ntype StateProps = {\n  isAdmin: boolean;\n};\n\nconst VOLUME_ZERO = 0;\nconst VOLUME_LOW = 50;\nconst VOLUME_MEDIUM = 100;\nconst VOLUME_NORMAL = 150;\n\nconst VOLUME_CHANGE_THROTTLE = 500;\n\nconst SPEAKER_ICON_SIZE = 24;\n\nconst GroupCallParticipantMenu: FC<OwnProps & StateProps> = ({\n  participant,\n  closeDropdown,\n  isDropdownOpen,\n  anchor,\n  isAdmin,\n}) => {\n  const {\n    toggleGroupCallMute,\n    setGroupCallParticipantVolume,\n    toggleGroupCallPanel,\n    openChat,\n    requestToSpeak,\n  } = getActions();\n\n  const lang = useLang();\n  const [isDeleteUserModalOpen, openDeleteUserModal, closeDeleteUserModal] = useFlag();\n\n  const id = participant?.id;\n  const {\n    isMutedByMe, isMuted, isSelf, canSelfUnmute,\n  } = participant || {};\n  const isRaiseHand = Boolean(participant?.raiseHandRating);\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n\n  const [localVolume, setLocalVolume] = useState(\n    isMutedByMe ? VOLUME_ZERO : ((participant?.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER),\n  );\n\n  useEffect(() => {\n    setLocalVolume(isMutedByMe\n      ? VOLUME_ZERO\n      : ((participant?.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER));\n    // We only want to initialize local volume when switching participants and ignore following updates from server\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [id]);\n\n  const runThrottled = useRunThrottled(VOLUME_CHANGE_THROTTLE);\n\n  const handleRemove = useCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    openDeleteUserModal();\n    closeDropdown();\n  }, [openDeleteUserModal, closeDropdown]);\n\n  const handleCancelRequestToSpeak = useCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    requestToSpeak({\n      value: false,\n    });\n    closeDropdown();\n  }, [requestToSpeak, closeDropdown]);\n\n  const handleMute = useCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    closeDropdown();\n\n    if (!isAdmin) {\n      setLocalVolume(isMutedByMe ? GROUP_CALL_DEFAULT_VOLUME / GROUP_CALL_VOLUME_MULTIPLIER : VOLUME_ZERO);\n    }\n\n    toggleGroupCallMute({\n      participantId: id!,\n      value: isAdmin ? !shouldRaiseHand : !isMutedByMe,\n    });\n  }, [closeDropdown, toggleGroupCallMute, id, isAdmin, shouldRaiseHand, isMutedByMe]);\n\n  const handleOpenProfile = useCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    toggleGroupCallPanel();\n    openChat({\n      id,\n    });\n    closeDropdown();\n  }, [toggleGroupCallPanel, closeDropdown, openChat, id]);\n\n  const isLocalVolumeZero = localVolume === VOLUME_ZERO;\n  const speakerIconPlaySegment = isLocalVolumeZero ? SPEAKER_ICON_DISABLED_SEGMENT : SPEAKER_ICON_ENABLED_SEGMENT;\n\n  const handleChangeVolume = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = Number(e.target.value);\n    setLocalVolume(value);\n    runThrottled(() => {\n      if (value === VOLUME_ZERO) {\n        toggleGroupCallMute({\n          participantId: id!,\n          value: true,\n        });\n      } else {\n        setGroupCallParticipantVolume({\n          participantId: id!,\n          volume: Math.floor(value * GROUP_CALL_VOLUME_MULTIPLIER),\n        });\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Menu\n        isOpen={isDropdownOpen}\n        positionX=\"right\"\n        autoClose\n        style={buildStyle(anchor && `right: 1rem; top: ${anchor.y}px`)}\n        onClose={closeDropdown}\n        className=\"participant-menu\"\n      >\n        {!isSelf && !shouldRaiseHand && (\n          <div className=\"group\">\n            <div className={buildClassName(\n              'volume-control',\n              localVolume < VOLUME_LOW && 'low',\n              localVolume >= VOLUME_LOW && localVolume < VOLUME_MEDIUM && 'medium',\n              localVolume >= VOLUME_MEDIUM && localVolume < VOLUME_NORMAL && 'normal',\n              localVolume >= VOLUME_NORMAL && 'high',\n            )}\n            >\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"200\"\n                value={localVolume}\n                onChange={handleChangeVolume}\n              />\n              <div className=\"info\">\n                <AnimatedIcon\n                  tgsUrl={LOCAL_TGS_URLS.Speaker}\n                  playSegment={speakerIconPlaySegment}\n                  size={SPEAKER_ICON_SIZE}\n                />\n                <span>{localVolume}%</span>\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"group\">\n          {(isRaiseHand && isSelf) && (\n            <MenuItem\n              icon=\"stop-raising-hand\"\n              onClick={handleCancelRequestToSpeak}\n            >\n              {lang('VoipGroupCancelRaiseHand')}\n            </MenuItem>\n          )}\n          {!isSelf && <MenuItem icon=\"user\" onClick={handleOpenProfile}>{lang('VoipGroupOpenProfile')}</MenuItem>}\n          {!isSelf && (\n            // TODO cross mic\n            <MenuItem\n              icon={isMuted ? (isAdmin ? 'allow-speak' : 'microphone-alt') : 'microphone-alt'}\n              onClick={handleMute}\n            >\n              {isAdmin\n                ? lang(shouldRaiseHand ? 'VoipGroupAllowToSpeak' : 'VoipMute')\n                : lang(isMutedByMe ? 'VoipGroupUnmuteForMe' : 'VoipGroupMuteForMe')}\n            </MenuItem>\n          )}\n          {!isSelf && isAdmin && (\n            // TODO replace with hand\n            <MenuItem icon=\"delete-user\" destructive onClick={handleRemove}>\n              {lang('VoipGroupUserRemove')}\n            </MenuItem>\n          )}\n        </div>\n      </Menu>\n\n      {!isSelf && isAdmin && (\n        <DeleteMemberModal\n          isOpen={isDeleteUserModalOpen}\n          userId={id}\n          onClose={closeDeleteUserModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isAdmin: selectIsAdminInActiveGroupCall(global),\n    };\n  },\n)(GroupCallParticipantMenu));\n","import useThrottledCallback from './useThrottledCallback';\n\nexport default function useRunThrottled(ms: number, noFirst?: boolean, deps: any = []) {\n  return useThrottledCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst);\n}\n","import type { GroupCallParticipant } from '../../../lib/secret-sauce';\nimport { THRESHOLD } from '../../../lib/secret-sauce';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\n\ntype OwnProps = {\n  participant: GroupCallParticipant;\n  noColor?: boolean;\n};\n\nconst OutlinedMicrophoneIcon: FC<OwnProps> = ({\n  participant,\n  noColor,\n}) => {\n  const { isMuted, isMutedByMe } = participant;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n  const prevIsRaiseHand = usePrevious(isRaiseHand);\n  const canSelfUnmute = Boolean(participant?.canSelfUnmute);\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n  const prevIsMuted = usePrevious(isMuted);\n\n  const playSegment: [number, number] = useMemo(() => {\n    if (isMuted && !prevIsMuted) {\n      return [43, 64];\n    }\n\n    if (!isMuted && prevIsMuted) {\n      return [22, 42];\n    }\n\n    if (isRaiseHand && !prevIsRaiseHand) {\n      return [65, 84];\n    }\n\n    if (!shouldRaiseHand && prevIsRaiseHand) {\n      return [0, 21];\n    }\n\n    // TODO cancel request to speak should play in reverse\n    // if (!isRaiseHand && prevIsRaiseHand) {\n    //   return [84, 65];\n    // }\n\n    return isMuted ? [22, 23] : [43, 44];\n    // eslint-disable-next-line\n  }, [isMuted, shouldRaiseHand, isRaiseHand]);\n\n  const microphoneColor: [number, number, number] | undefined = useMemo(() => {\n    return noColor ? [0xff, 0xff, 0xff] : (\n      isRaiseHand ? [0x4d, 0xa6, 0xe0]\n        : (shouldRaiseHand || isMutedByMe ? [0xFF, 0x70, 0x6F] : (\n          isSpeaking ? [0x57, 0xBC, 0x6C] : [0x84, 0x8D, 0x94]\n        ))\n    );\n  }, [noColor, isRaiseHand, shouldRaiseHand, isMutedByMe, isSpeaking]);\n\n  return (\n    <AnimatedIcon\n      tgsUrl={LOCAL_TGS_URLS.VoiceOutlined}\n      playSegment={playSegment}\n      size={28}\n      color={microphoneColor}\n    />\n  );\n};\n\nexport default memo(OutlinedMicrophoneIcon);\n","import type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\nimport { THRESHOLD } from '../../../lib/secret-sauce';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport { GROUP_CALL_DEFAULT_VOLUME, GROUP_CALL_VOLUME_MULTIPLIER } from '../../../config';\n\nimport Avatar from '../../common/Avatar';\nimport OutlinedMicrophoneIcon from './OutlinedMicrophoneIcon';\n\nimport './GroupCallParticipant.scss';\n\ntype OwnProps = {\n  participant: TypeGroupCallParticipant;\n  openParticipantMenu: (anchor: HTMLDivElement, participant: TypeGroupCallParticipant) => void;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n};\n\nconst GroupCallParticipant: FC<OwnProps & StateProps> = ({\n  openParticipantMenu,\n  participant,\n  user,\n  chat,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const { isSelf, isMutedByMe, isMuted } = participant;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n\n  const handleOnClick = () => {\n    if (isSelf) return;\n    openParticipantMenu(anchorRef.current!, participant);\n  };\n\n  const [aboutText, aboutColor] = useMemo(() => {\n    if (isSelf) {\n      return [lang('ThisIsYou'), 'blue'];\n    }\n    if (isMutedByMe) {\n      return [lang('VoipGroupMutedForMe'), 'red'];\n    }\n    return isRaiseHand\n      ? [lang('WantsToSpeak'), 'blue']\n      : (!isMuted && isSpeaking ? [\n        participant.volume && participant.volume !== GROUP_CALL_DEFAULT_VOLUME\n          ? lang('SpeakingWithVolume',\n            (participant.volume / GROUP_CALL_VOLUME_MULTIPLIER).toString())\n            .replace('%%', '%') : lang('Speaking'),\n        'green',\n      ]\n        : (participant.about ? [participant.about, ''] : [lang('Listening'), 'blue']));\n  }, [isSpeaking, participant.volume, lang, isSelf, isMutedByMe, isRaiseHand, isMuted, participant.about]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  const name = user ? `${user.firstName || ''} ${user.lastName || ''}` : chat?.title;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallParticipant',\n        participant.canSelfUnmute && 'can-self-unmute',\n      )}\n      onClick={handleOnClick}\n      ref={anchorRef}\n    >\n      <Avatar user={user} chat={chat} size=\"medium\" />\n      <div className=\"info\">\n        <span className=\"name\">{name}</span>\n        <span className={buildClassName('about', aboutColor)}>{aboutText}</span>\n      </div>\n      <div className=\"microphone\">\n        <OutlinedMicrophoneIcon participant={participant} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { participant }): StateProps => {\n    return {\n      user: participant.isUser ? selectUser(global, participant.id) : undefined,\n      chat: !participant.isUser ? selectChat(global, participant.id) : undefined,\n    };\n  },\n)(GroupCallParticipant));\n","import type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport useLang from '../../../hooks/useLang';\nimport { selectActiveGroupCall } from '../../../global/selectors/calls';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\n\nimport GroupCallParticipant from './GroupCallParticipant';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\n\ntype OwnProps = {\n  openParticipantMenu: (anchor: HTMLDivElement, participant: TypeGroupCallParticipant) => void;\n};\n\ntype StateProps = {\n  participantsCount: number;\n  participants?: Record<string, TypeGroupCallParticipant>;\n  canInvite?: boolean;\n};\n\nconst GroupCallParticipantList: FC<OwnProps & StateProps> = ({\n  participants,\n  participantsCount,\n  openParticipantMenu,\n}) => {\n  const {\n    createGroupCallInviteLink,\n    loadMoreGroupCallParticipants,\n  } = getActions();\n\n  const lang = useLang();\n\n  const participantsIds = useMemo(() => {\n    return Object.keys(participants || {});\n  }, [participants]);\n\n  const handleLoadMoreGroupCallParticipants = useCallback(() => {\n    loadMoreGroupCallParticipants();\n  }, [loadMoreGroupCallParticipants]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMoreGroupCallParticipants,\n    participantsIds,\n    participantsIds.length >= participantsCount,\n  );\n\n  function handleCreateGroupCallInviteLink() {\n    createGroupCallInviteLink();\n  }\n\n  return (\n    <div className=\"participants\">\n      <div className=\"invite-btn\" onClick={handleCreateGroupCallInviteLink}>\n        <div className=\"icon\">\n          <i className=\"icon-add-user\" />\n        </div>\n        <div className=\"text\">{lang('VoipGroupInviteMember')}</div>\n      </div>\n\n      <InfiniteScroll\n        items={viewportIds}\n        onLoadMore={getMore}\n      >\n        {viewportIds?.map(\n          (participantId) => (\n            participants![participantId] && (\n              <GroupCallParticipant\n                key={participantId}\n                openParticipantMenu={openParticipantMenu}\n                participant={participants![participantId]}\n              />\n            )\n          ),\n        )}\n      </InfiniteScroll>\n\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { participantsCount, participants } = selectActiveGroupCall(global) || {};\n\n    return {\n      participants,\n      participantsCount: participantsCount || 0,\n    };\n  },\n)(GroupCallParticipantList));\n","import type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\nimport { getUserStreams, THRESHOLD } from '../../../lib/secret-sauce';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\n\nimport { GROUP_CALL_THUMB_VIDEO_DISABLED } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallParticipantVideo.scss';\n\ntype OwnProps = {\n  participant: TypeGroupCallParticipant;\n  type: 'video' | 'presentation';\n  onClick?: (id: string, type: 'video' | 'presentation') => void;\n  isFullscreen?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  currentUserId?: string;\n  isActive?: boolean;\n};\n\nconst GroupCallParticipantVideo: FC<OwnProps & StateProps> = ({\n  type,\n  onClick,\n  user,\n  chat,\n  isActive,\n  isFullscreen,\n}) => {\n  const lang = useLang();\n\n  const handleClick = useCallback(() => {\n    if (onClick) {\n      onClick(user?.id || chat!.id, type);\n    }\n  }, [chat, onClick, type, user?.id]);\n\n  if (!user && !chat) return undefined;\n\n  const streams = getUserStreams(user?.id || chat!.id);\n\n  return (\n    <div\n      className={buildClassName('GroupCallParticipantVideo', isActive && 'active')}\n      onClick={handleClick}\n    >\n      {isFullscreen && (\n        <button className=\"back-button\">\n          <i className=\"icon-arrow-left\" />\n          {lang('Back')}\n        </button>\n      )}\n      <Avatar user={user} chat={chat} className=\"thumbnail-avatar\" />\n      {!GROUP_CALL_THUMB_VIDEO_DISABLED && (\n        <div className=\"thumbnail-wrapper\">\n          <video className=\"thumbnail\" muted autoPlay playsInline srcObject={streams?.[type]} />\n        </div>\n      )}\n      <video className=\"video\" muted autoPlay playsInline srcObject={streams?.[type]} />\n      <div className=\"info\">\n        <i className=\"icon-microphone-alt\" />\n        <span className=\"name\">{user?.firstName || chat?.title}</span>\n        {type === 'presentation' && <i className=\"last-icon icon-active-sessions\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { participant }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      user: participant.isUser ? selectUser(global, participant.id) : undefined,\n      chat: !participant.isUser ? selectChat(global, participant.id) : undefined,\n      isActive: (participant.amplitude || 0) > THRESHOLD,\n    };\n  },\n)(GroupCallParticipantVideo));\n","import type { GroupCallParticipant } from '../../../lib/secret-sauce';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\nimport GroupCallParticipantVideo from './GroupCallParticipantVideo';\nimport { selectActiveGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\ntype OwnProps = {\n  onDoubleClick?: VoidFunction;\n};\n\ntype StateProps = {\n  participants?: Record<string, GroupCallParticipant>;\n};\n\ntype SelectedVideo = {\n  type: 'video' | 'presentation';\n  id: string;\n};\n\nconst GroupCallParticipantStreams: FC<OwnProps & StateProps> = ({\n  participants,\n  onDoubleClick,\n}) => {\n  const [selectedVideo, setSelectedVideo] = useState<SelectedVideo | undefined>(undefined);\n  const presentationParticipants = useMemo(() => {\n    return Object.values(participants || {}).filter((participant) => participant.hasPresentationStream);\n  }, [participants]);\n  const videoParticipants = useMemo(() => {\n    return Object.values(participants || {}).filter((participant) => participant.hasVideoStream);\n  }, [participants]);\n\n  const totalVideoCount = videoParticipants.length + presentationParticipants.length;\n  // TODO replace with more adequate solution.\n  // There's a max of 30 videos or so right now\n  const columnCount = totalVideoCount <= 2 ? 1 : (\n    totalVideoCount <= 6 ? 2 : (\n      totalVideoCount <= 9 ? 3 : 4\n    )\n  );\n\n  const shouldSpanLastVideo = totalVideoCount === 3 || (columnCount === 2 && totalVideoCount % 2 !== 0);\n\n  const handleClickVideo = useCallback((id: string, type: 'video' | 'presentation') => {\n    if (!selectedVideo || (id !== selectedVideo.id || type !== selectedVideo.type)) {\n      setSelectedVideo({\n        id,\n        type,\n      });\n    } else {\n      setSelectedVideo(undefined);\n    }\n  }, [selectedVideo]);\n\n  return (\n    <div className=\"streams\" onDoubleClick={onDoubleClick}>\n      <div\n        className={buildClassName(\n          'videos',\n          shouldSpanLastVideo && 'span-last-video',\n        )}\n        style={`--column-count: ${selectedVideo ? 1 : columnCount}`}\n      >\n        {selectedVideo && (\n          <GroupCallParticipantVideo\n            key={selectedVideo.id}\n            isFullscreen\n            onClick={handleClickVideo}\n            participant={participants![selectedVideo.id]}\n            type={selectedVideo.type}\n          />\n        )}\n\n        {!selectedVideo ? presentationParticipants.map((participant) => (\n          <GroupCallParticipantVideo\n            key={participant.id}\n            onClick={handleClickVideo}\n            participant={participant}\n            type=\"presentation\"\n          />\n        )) : undefined}\n        {!selectedVideo ? videoParticipants.map((participant) => (\n          <GroupCallParticipantVideo\n            key={participant.id}\n            onClick={handleClickVideo}\n            participant={participant}\n            type=\"video\"\n          />\n        )) : undefined}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { participants } = selectActiveGroupCall(global) || {};\n    return {\n      participants,\n    };\n  },\n)(GroupCallParticipantStreams));\n","import type {\n  GroupCallConnectionState, GroupCallParticipant as TypeGroupCallParticipant,\n} from '../../../lib/secret-sauce';\nimport {\n  IS_SCREENSHARE_SUPPORTED, switchCameraInput, toggleSpeaker,\n} from '../../../lib/secret-sauce';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\nimport '../../../global/actions/calls';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  IS_ANDROID,\n  IS_IOS,\n  IS_REQUEST_FULLSCREEN_SUPPORTED,\n} from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport buildClassName from '../../../util/buildClassName';\nimport {\n  selectGroupCall,\n  selectGroupCallParticipant,\n  selectIsAdminInActiveGroupCall,\n} from '../../../global/selectors/calls';\nimport { selectTabState } from '../../../global/selectors';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Loading from '../../ui/Loading';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MicrophoneButton from './MicrophoneButton';\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport GroupCallParticipantMenu from './GroupCallParticipantMenu';\nimport GroupCallParticipantList from './GroupCallParticipantList';\nimport GroupCallParticipantStreams from './GroupCallParticipantStreams';\n\nimport './GroupCall.scss';\n\nconst CAMERA_FLIP_PLAY_SEGMENT: [number, number] = [0, 10];\nconst PARTICIPANT_HEIGHT = 60;\n\nexport type OwnProps = {\n  groupCallId: string;\n};\n\ntype StateProps = {\n  isCallPanelVisible: boolean;\n  connectionState: GroupCallConnectionState;\n  title?: string;\n  meParticipant?: TypeGroupCallParticipant;\n  participantsCount?: number;\n  isSpeakerEnabled?: boolean;\n  isAdmin: boolean;\n  participants: Record<string, TypeGroupCallParticipant>;\n};\n\nconst GroupCall: FC<OwnProps & StateProps> = ({\n  groupCallId,\n  isCallPanelVisible,\n  connectionState,\n  isSpeakerEnabled,\n  title,\n  meParticipant,\n  isAdmin,\n  participants,\n\n}) => {\n  const {\n    toggleGroupCallVideo,\n    toggleGroupCallPresentation,\n    leaveGroupCall,\n    toggleGroupCallPanel,\n    connectToActiveGroupCall,\n    playGroupCallSound,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { isMobile, isLandscape } = useAppLayout();\n\n  const [isLeaving, setIsLeaving] = useState(false);\n  const [isFullscreen, openFullscreen, closeFullscreen] = useFlag();\n  const [isSidebarOpen, openSidebar, closeSidebar] = useFlag(true);\n  const hasVideoParticipants = Object.values(participants).some(({ video, presentation }) => video || presentation);\n  const isLandscapeLayout = isFullscreen && (!isMobile || isLandscape) && hasVideoParticipants;\n\n  const [participantMenu, setParticipantMenu] = useState<{\n    participant: TypeGroupCallParticipant;\n    anchor: IAnchorPosition;\n  } | undefined>();\n  const [isParticipantMenuOpen, openParticipantMenu, closeParticipantMenu] = useFlag();\n\n  const [isConfirmLeaveModalOpen, openConfirmLeaveModal, closeConfirmLeaveModal] = useFlag();\n  const [isEndGroupCallModal, setIsEndGroupCallModal] = useState(false);\n  const [shouldEndGroupCall, setShouldEndGroupCall] = useState(false);\n\n  const hasVideo = meParticipant?.hasVideoStream;\n  const hasPresentation = meParticipant?.hasPresentationStream;\n  const isConnecting = connectionState !== 'connected';\n  const canSelfUnmute = meParticipant?.canSelfUnmute;\n  const shouldRaiseHand = !canSelfUnmute && meParticipant?.isMuted;\n  const handleOpenParticipantMenu = useCallback((anchor: HTMLDivElement, participant: TypeGroupCallParticipant) => {\n    const rect = anchor.getBoundingClientRect();\n    const container = containerRef.current!;\n\n    setParticipantMenu({\n      anchor: { x: rect.left, y: rect.top - container.offsetTop + PARTICIPANT_HEIGHT },\n      participant,\n    });\n\n    openParticipantMenu();\n  }, [openParticipantMenu]);\n\n  useEffect(() => {\n    if (connectionState === 'connected') {\n      playGroupCallSound({ sound: 'join' });\n    } else if (connectionState === 'reconnecting') {\n      playGroupCallSound({ sound: 'connecting' });\n    }\n  }, [connectionState, playGroupCallSound]);\n\n  const handleCloseConfirmLeaveModal = useCallback(() => {\n    closeConfirmLeaveModal();\n    setIsEndGroupCallModal(false);\n  }, [closeConfirmLeaveModal]);\n\n  const MainButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrMoreOptions')}\n      >\n        <i className=\"icon-more\" />\n      </Button>\n    );\n  }, [lang]);\n\n  const handleToggleFullscreen = useCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isFullscreen) {\n      document.exitFullscreen().then(closeFullscreen);\n    } else {\n      containerRef.current.requestFullscreen().then(openFullscreen);\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  const handleToggleSidebar = useCallback(() => {\n    if (isSidebarOpen) {\n      closeSidebar();\n    } else {\n      openSidebar();\n    }\n  }, [closeSidebar, isSidebarOpen, openSidebar]);\n\n  const handleStreamsDoubleClick = useCallback(() => {\n    if (!IS_REQUEST_FULLSCREEN_SUPPORTED) return;\n\n    if (!isFullscreen) {\n      closeSidebar();\n      handleToggleFullscreen();\n    } else {\n      handleToggleFullscreen();\n    }\n  }, [closeSidebar, handleToggleFullscreen, isFullscreen]);\n\n  const toggleFullscreen = useCallback(() => {\n    if (isFullscreen) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  const handleClose = useCallback(() => {\n    toggleGroupCallPanel();\n    if (isFullscreen) {\n      closeFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, toggleGroupCallPanel]);\n\n  useEffect(() => {\n    if (!IS_REQUEST_FULLSCREEN_SUPPORTED) return undefined;\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    container.addEventListener('fullscreenchange', toggleFullscreen);\n\n    return () => {\n      container.removeEventListener('fullscreenchange', toggleFullscreen);\n    };\n  }, [toggleFullscreen]);\n\n  const handleClickVideoOrSpeaker = () => {\n    if (shouldRaiseHand) {\n      toggleSpeaker();\n    } else {\n      toggleGroupCallVideo();\n    }\n  };\n\n  useEffect(() => {\n    connectToActiveGroupCall();\n  }, [connectToActiveGroupCall, groupCallId]);\n\n  const endGroupCall = useCallback(() => {\n    setIsEndGroupCallModal(true);\n    setShouldEndGroupCall(true);\n    openConfirmLeaveModal();\n    if (isFullscreen) {\n      handleToggleFullscreen();\n    }\n  }, [handleToggleFullscreen, isFullscreen, openConfirmLeaveModal]);\n\n  const handleLeaveGroupCall = useCallback(() => {\n    if (isAdmin && !isConfirmLeaveModalOpen) {\n      openConfirmLeaveModal();\n      if (isFullscreen) {\n        handleToggleFullscreen();\n      }\n      return;\n    }\n    playGroupCallSound({ sound: 'leave' });\n    setIsLeaving(true);\n    closeConfirmLeaveModal();\n  }, [\n    closeConfirmLeaveModal, handleToggleFullscreen, isAdmin, isConfirmLeaveModalOpen, isFullscreen,\n    openConfirmLeaveModal, playGroupCallSound,\n  ]);\n\n  const handleCloseAnimationEnd = useCallback(() => {\n    if (isLeaving) {\n      leaveGroupCall({\n        shouldDiscard: shouldEndGroupCall,\n      });\n    }\n  }, [isLeaving, leaveGroupCall, shouldEndGroupCall]);\n\n  const handleToggleGroupCallPresentation = useCallback(() => {\n    toggleGroupCallPresentation();\n  }, [toggleGroupCallPresentation]);\n\n  return (\n    <Modal\n      isOpen={!isCallPanelVisible && !isLeaving}\n      onClose={toggleGroupCallPanel}\n      className={buildClassName(\n        'GroupCall',\n        (isMobile && !isLandscape) && 'single-column',\n        isLandscapeLayout && 'landscape',\n        !isSidebarOpen && 'no-sidebar',\n      )}\n      dialogRef={containerRef}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      <div className=\"header\">\n        <h3>{title || lang('VoipGroupVoiceChat')}</h3>\n        {IS_REQUEST_FULLSCREEN_SUPPORTED && (\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={handleToggleFullscreen}\n            ariaLabel={lang(isFullscreen ? 'AccExitFullscreen' : 'AccSwitchToFullscreen')}\n          >\n            <i className={isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen'} />\n          </Button>\n        )}\n        {isLandscapeLayout && (\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={handleToggleSidebar}\n          >\n            <i className=\"icon-sidebar\" />\n          </Button>\n        )}\n        {((IS_SCREENSHARE_SUPPORTED && !shouldRaiseHand) || isAdmin) && (\n          <DropdownMenu\n            positionX=\"right\"\n            trigger={MainButton}\n          >\n            {IS_SCREENSHARE_SUPPORTED && !shouldRaiseHand && (\n              <MenuItem\n                icon=\"share-screen-outlined\"\n                onClick={handleToggleGroupCallPresentation}\n              >\n                {lang(hasPresentation ? 'VoipChatStopScreenCapture' : 'VoipChatStartScreenCapture')}\n              </MenuItem>\n            )}\n            {isAdmin && (\n              <MenuItem\n                icon=\"phone-discard-outline\"\n                onClick={endGroupCall}\n                destructive\n              >\n                {lang('VoipGroupLeaveAlertEndChat')}\n              </MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      </div>\n\n      <div className=\"scrollable custom-scroll\">\n        <GroupCallParticipantStreams onDoubleClick={handleStreamsDoubleClick} />\n\n        {(!isLandscapeLayout || isSidebarOpen)\n        && <GroupCallParticipantList openParticipantMenu={handleOpenParticipantMenu} />}\n      </div>\n\n      <GroupCallParticipantMenu\n        participant={participantMenu?.participant}\n        anchor={participantMenu?.anchor}\n        isDropdownOpen={isParticipantMenuOpen}\n        closeDropdown={closeParticipantMenu}\n      />\n\n      <div className=\"buttons\">\n        {isConnecting && <Loading />}\n\n        <div className=\"button-wrapper\">\n          <div className=\"video-buttons\">\n            {hasVideo && (IS_ANDROID || IS_IOS) && (\n              <button className=\"smaller-button\" onClick={switchCameraInput}>\n                <AnimatedIcon\n                  tgsUrl={LOCAL_TGS_URLS.CameraFlip}\n                  playSegment={CAMERA_FLIP_PLAY_SEGMENT}\n                  size={24}\n                />\n              </button>\n            )}\n            <button\n              className={buildClassName(\n                'small-button',\n                shouldRaiseHand ? 'speaker' : 'camera',\n                (hasVideo || (shouldRaiseHand && isSpeakerEnabled)) && 'active',\n              )}\n              onClick={handleClickVideoOrSpeaker}\n            >\n              <i className={shouldRaiseHand ? 'icon-speaker' : (hasVideo ? 'icon-video-stop' : 'icon-video')} />\n            </button>\n          </div>\n\n          <div className=\"button-text\">\n            {lang(shouldRaiseHand ? 'VoipSpeaker' : 'VoipCamera')}\n          </div>\n        </div>\n\n        <MicrophoneButton />\n\n        <div className=\"button-wrapper\">\n          <button className=\"small-button leave\" onClick={handleLeaveGroupCall}>\n            <i className=\"icon-phone-discard\" />\n          </button>\n\n          <div className=\"button-text\">\n            {lang('VoipGroupLeave')}\n          </div>\n        </div>\n      </div>\n\n      <Modal\n        isOpen={isConfirmLeaveModalOpen}\n        onClose={handleCloseConfirmLeaveModal}\n        className=\"error\"\n        title={lang(isEndGroupCallModal ? 'VoipGroupEndAlertTitle' : 'VoipGroupLeaveAlertTitle')}\n      >\n        <p>{lang(isEndGroupCallModal ? 'VoipGroupEndAlertText' : 'VoipGroupLeaveAlertText')}</p>\n        {!isEndGroupCallModal && (\n          <Checkbox\n            label={lang('VoipGroupEndChat')}\n            checked={shouldEndGroupCall}\n            onCheck={setShouldEndGroupCall}\n          />\n        )}\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" onClick={handleLeaveGroupCall}>\n            {lang(isEndGroupCallModal ? 'VoipGroupEnd' : 'VoipGroupLeave')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseConfirmLeaveModal}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </Modal>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { groupCallId }): StateProps => {\n    const {\n      connectionState, title, isSpeakerDisabled, participants, participantsCount,\n    } = selectGroupCall(global, groupCallId)! || {};\n\n    return {\n      connectionState,\n      title,\n      isSpeakerEnabled: !isSpeakerDisabled,\n      participantsCount,\n      meParticipant: selectGroupCallParticipant(global, groupCallId, global.currentUserId!),\n      isCallPanelVisible: Boolean(selectTabState(global).isCallPanelVisible),\n      isAdmin: selectIsAdminInActiveGroupCall(global),\n      participants,\n    };\n  },\n)(GroupCall));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiGroupCall, ApiUser } from '../../api/types';\n\nimport { selectActiveGroupCall, selectPhoneCallUser } from '../../global/selectors/calls';\nimport { selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './ActiveCallHeader.scss';\n\ntype StateProps = {\n  isCallPanelVisible?: boolean;\n  groupCall?: ApiGroupCall;\n  phoneCallUser?: ApiUser;\n};\n\nconst ActiveCallHeader: FC<StateProps> = ({\n  groupCall,\n  phoneCallUser,\n  isCallPanelVisible,\n}) => {\n  const { toggleGroupCallPanel } = getActions();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    document.body.classList.toggle('has-call-header', Boolean(isCallPanelVisible));\n\n    return () => {\n      document.body.classList.toggle('has-call-header', false);\n    };\n  }, [isCallPanelVisible]);\n\n  function handleToggleGroupCallPanel() {\n    toggleGroupCallPanel();\n  }\n\n  if (!groupCall && !phoneCallUser) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'ActiveCallHeader',\n        isCallPanelVisible && 'open',\n      )}\n      onClick={handleToggleGroupCallPanel}\n    >\n      <span className=\"title\">{phoneCallUser?.firstName || groupCall?.title || lang('VoipGroupVoiceChat')}</span>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    return {\n      groupCall: tabState.isMasterTab ? selectActiveGroupCall(global) : undefined,\n      isCallPanelVisible: tabState.isCallPanelVisible,\n      phoneCallUser: tabState.isMasterTab ? selectPhoneCallUser(global) : undefined,\n    };\n  },\n)(ActiveCallHeader));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eWbOLx__FZXR1sqKEJek\",\"button\":\"XKOJvKiD4DsRfJLLhnw2\",\"active\":\"qvAVe7qcyaEvRQQ1StFI\",\"button-text\":\"wnAniFJmQ7ocVtjRHNey\",\"buttonText\":\"wnAniFJmQ7ocVtjRHNey\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\nimport styles from './PhoneCallButton.module.scss';\n\ntype OwnProps = {\n  onClick: VoidFunction;\n  label: string;\n  icon?: string;\n  iconClassName?: string;\n  customIcon?: React.ReactNode;\n  className?: string;\n  isDisabled?: boolean;\n  isActive?: boolean;\n};\n\nconst PhoneCallButton: FC<OwnProps> = ({\n  onClick,\n  label,\n  customIcon,\n  icon,\n  iconClassName,\n  className,\n  isDisabled,\n  isActive,\n}) => {\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        className={buildClassName(className, styles.button, isActive && styles.active)}\n        onClick={onClick}\n        disabled={isDisabled}\n      >\n        {customIcon || <i className={buildClassName(iconClassName, `icon-${icon}`)} />}\n      </Button>\n      <div className={styles.buttonText}>{label}</div>\n    </div>\n  );\n};\n\nexport default memo(PhoneCallButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AddQYAOZJv2f7U7qIfC3\",\"blurred\":\"anFtHj7Wvsv4M_2I2EFF\",\"single-column\":\"Oi7aFYBAbl4bYichdt52\",\"singleColumn\":\"Oi7aFYBAbl4bYichdt52\",\"header\":\"_iK8HccGNSmmo2wL7tMs\",\"close-button\":\"U66J7V5JKTCiktgwYpcC\",\"closeButton\":\"U66J7V5JKTCiktgwYpcC\",\"emojis-backdrop\":\"IekzemHkkO4bfrWHmxlv\",\"emojisBackdrop\":\"IekzemHkkO4bfrWHmxlv\",\"open\":\"hiNHKiq2owo1FvdT9a5g\",\"emojis\":\"BjOb1fDymE5GCiJ4g6YN\",\"emoji-tooltip\":\"Ci9ie86NFinrXvowDx23\",\"emojiTooltip\":\"Ci9ie86NFinrXvowDx23\",\"user-info\":\"eiM2IbZjKKAwrfNtXtAy\",\"userInfo\":\"eiM2IbZjKKAwrfNtXtAy\",\"buttons\":\"AtK8DjRToL8Uk7ZAY25p\",\"leave\":\"uI2mkCTKDcqYPu64xKOk\",\"accept\":\"PC2FeM0OEDDW0TVFGMkk\",\"accept-icon\":\"hBxp1Loj3vj4DtnculDA\",\"acceptIcon\":\"hBxp1Loj3vj4DtnculDA\",\"main-video\":\"lXMZESnc4CBKQbvV7qkL\",\"mainVideo\":\"lXMZESnc4CBKQbvV7qkL\",\"second-video\":\"cnQvI_xwAbO0EEwRcLsg\",\"secondVideo\":\"cnQvI_xwAbO0EEwRcLsg\",\"visible\":\"XaD79h6hSiEi0ypkn5OK\",\"fullscreen\":\"NlF9_Kb2le_3B712PZnO\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\nimport '../../../global/actions/calls';\n\nimport type { ApiPhoneCall, ApiUser } from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\n\nimport {\n  IS_ANDROID,\n  IS_IOS,\n  IS_REQUEST_FULLSCREEN_SUPPORTED,\n} from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectPhoneCallUser } from '../../../global/selectors/calls';\nimport useLang from '../../../hooks/useLang';\nimport renderText from '../../common/helpers/renderText';\nimport useFlag from '../../../hooks/useFlag';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport {\n  getStreams, IS_SCREENSHARE_SUPPORTED, switchCameraInputP2p, toggleStreamP2p,\n} from '../../../lib/secret-sauce';\nimport useInterval from '../../../hooks/useInterval';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Modal from '../../ui/Modal';\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport PhoneCallButton from './PhoneCallButton';\nimport AnimatedIcon from '../../common/AnimatedIcon';\n\nimport styles from './PhoneCall.module.scss';\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCall?: ApiPhoneCall;\n  isOutgoing: boolean;\n  isCallPanelVisible?: boolean;\n  animationLevel: AnimationLevel;\n};\n\nconst PhoneCall: FC<StateProps> = ({\n  user,\n  isOutgoing,\n  phoneCall,\n  isCallPanelVisible,\n  animationLevel,\n}) => {\n  const lang = useLang();\n  const {\n    hangUp, requestMasterAndAcceptCall, playGroupCallSound, toggleGroupCallPanel, connectToActivePhoneCall,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [isFullscreen, openFullscreen, closeFullscreen] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const toggleFullscreen = useCallback(() => {\n    if (isFullscreen) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  const handleToggleFullscreen = useCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isFullscreen) {\n      document.exitFullscreen().then(closeFullscreen);\n    } else {\n      containerRef.current.requestFullscreen().then(openFullscreen);\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  useEffect(() => {\n    if (!IS_REQUEST_FULLSCREEN_SUPPORTED) return undefined;\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    container.addEventListener('fullscreenchange', toggleFullscreen);\n\n    return () => {\n      container.removeEventListener('fullscreenchange', toggleFullscreen);\n    };\n  }, [toggleFullscreen]);\n\n  const handleClose = useCallback(() => {\n    toggleGroupCallPanel();\n    if (isFullscreen) {\n      closeFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, toggleGroupCallPanel]);\n\n  const isDiscarded = phoneCall?.state === 'discarded';\n  const isBusy = phoneCall?.reason === 'busy';\n\n  const isIncomingRequested = phoneCall?.state === 'requested' && !isOutgoing;\n  const isOutgoingRequested = (phoneCall?.state === 'requested' || phoneCall?.state === 'waiting') && isOutgoing;\n  const isActive = phoneCall?.state === 'active';\n  const isConnected = phoneCall?.isConnected;\n\n  const [isHangingUp, startHangingUp, stopHangingUp] = useFlag();\n  const handleHangUp = useCallback(() => {\n    startHangingUp();\n    hangUp();\n  }, [hangUp, startHangingUp]);\n\n  useEffect(() => {\n    if (isHangingUp) {\n      playGroupCallSound({ sound: 'end' });\n    } else if (isIncomingRequested) {\n      playGroupCallSound({ sound: 'incoming' });\n    } else if (isBusy) {\n      playGroupCallSound({ sound: 'busy' });\n    } else if (isDiscarded) {\n      playGroupCallSound({ sound: 'end' });\n    } else if (isOutgoingRequested) {\n      playGroupCallSound({ sound: 'ringing' });\n    } else if (isConnected) {\n      playGroupCallSound({ sound: 'connect' });\n    }\n  }, [isBusy, isDiscarded, isIncomingRequested, isOutgoingRequested, isConnected, playGroupCallSound, isHangingUp]);\n\n  useEffect(() => {\n    if (phoneCall?.id) {\n      stopHangingUp();\n    } else {\n      connectToActivePhoneCall();\n    }\n  }, [connectToActivePhoneCall, phoneCall?.id, stopHangingUp]);\n\n  const forceUpdate = useForceUpdate();\n\n  useInterval(() => {\n    forceUpdate();\n  }, isConnected ? 1000 : undefined);\n\n  const callStatus = useMemo(() => {\n    const state = phoneCall?.state;\n    if (isHangingUp) {\n      return lang('lng_call_status_hanging');\n    }\n    if (isBusy) return 'busy';\n    if (state === 'requesting') {\n      return lang('lng_call_status_requesting');\n    } else if (state === 'requested') {\n      return isOutgoing ? lang('lng_call_status_ringing') : lang('lng_call_status_incoming');\n    } else if (state === 'waiting') {\n      return lang('lng_call_status_waiting');\n    } else if (state === 'active' && isConnected) {\n      return undefined;\n    } else {\n      return lang('lng_call_status_exchanging');\n    }\n  }, [isBusy, isConnected, isHangingUp, isOutgoing, lang, phoneCall?.state]);\n\n  const hasVideo = phoneCall?.videoState === 'active';\n  const hasPresentation = phoneCall?.screencastState === 'active';\n\n  const streams = getStreams();\n  const hasOwnAudio = streams?.ownAudio?.getTracks()[0].enabled;\n  const hasOwnPresentation = streams?.ownPresentation?.getTracks()[0].enabled;\n  const hasOwnVideo = streams?.ownVideo?.getTracks()[0].enabled;\n\n  const [isHidingPresentation, startHidingPresentation, stopHidingPresentation] = useFlag();\n  const [isHidingVideo, startHidingVideo, stopHidingVideo] = useFlag();\n\n  const handleTogglePresentation = useCallback(() => {\n    if (hasOwnPresentation) {\n      startHidingPresentation();\n    }\n    if (hasOwnVideo) {\n      startHidingVideo();\n    }\n    setTimeout(async () => {\n      await toggleStreamP2p('presentation');\n      stopHidingPresentation();\n      stopHidingVideo();\n    }, 250);\n  }, [\n    hasOwnPresentation, hasOwnVideo, startHidingPresentation, startHidingVideo, stopHidingPresentation, stopHidingVideo,\n  ]);\n\n  const handleToggleVideo = useCallback(() => {\n    if (hasOwnVideo) {\n      startHidingVideo();\n    }\n    if (hasOwnPresentation) {\n      startHidingPresentation();\n    }\n    setTimeout(async () => {\n      await toggleStreamP2p('video');\n      stopHidingPresentation();\n      stopHidingVideo();\n    }, 250);\n  }, [\n    hasOwnPresentation, hasOwnVideo, startHidingPresentation, startHidingVideo, stopHidingPresentation, stopHidingVideo,\n  ]);\n\n  const handleToggleAudio = useCallback(() => {\n    void toggleStreamP2p('audio');\n  }, []);\n\n  const [isEmojiOpen, openEmoji, closeEmoji] = useFlag();\n\n  const [isFlipping, startFlipping, stopFlipping] = useFlag();\n\n  const handleFlipCamera = useCallback(() => {\n    startFlipping();\n    switchCameraInputP2p();\n    setTimeout(stopFlipping, 250);\n  }, [startFlipping, stopFlipping]);\n\n  const timeElapsed = phoneCall?.startDate && (Number(new Date()) / 1000 - phoneCall.startDate);\n\n  useEffect(() => {\n    if (phoneCall?.state === 'discarded') {\n      setTimeout(hangUp, 250);\n    }\n  }, [hangUp, phoneCall?.reason, phoneCall?.state]);\n\n  return (\n    <Modal\n      isOpen={phoneCall && phoneCall?.state !== 'discarded' && !isCallPanelVisible}\n      onClose={handleClose}\n      className={buildClassName(\n        styles.root,\n        isMobile && styles.singleColumn,\n      )}\n      dialogRef={containerRef}\n    >\n      <Avatar\n        user={user}\n        size=\"jumbo\"\n        className={hasVideo || hasPresentation ? styles.blurred : ''}\n        withVideo\n        noLoop={phoneCall?.state !== 'requesting'}\n        animationLevel={animationLevel}\n      />\n      {phoneCall?.screencastState === 'active' && streams?.presentation\n        && <video className={styles.mainVideo} muted autoPlay playsInline srcObject={streams.presentation} />}\n      {phoneCall?.videoState === 'active' && streams?.video\n        && <video className={styles.mainVideo} muted autoPlay playsInline srcObject={streams.video} />}\n      <video\n        className={buildClassName(\n          styles.secondVideo,\n          !isHidingPresentation && hasOwnPresentation && styles.visible,\n          isFullscreen && styles.fullscreen,\n        )}\n        muted\n        autoPlay\n        playsInline\n        srcObject={streams?.ownPresentation}\n      />\n      <video\n        className={buildClassName(\n          styles.secondVideo,\n          !isHidingVideo && hasOwnVideo && styles.visible,\n          isFullscreen && styles.fullscreen,\n        )}\n        muted\n        autoPlay\n        playsInline\n        srcObject={streams?.ownVideo}\n      />\n      <div className={styles.header}>\n        {IS_REQUEST_FULLSCREEN_SUPPORTED && (\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={handleToggleFullscreen}\n            ariaLabel={lang(isFullscreen ? 'AccExitFullscreen' : 'AccSwitchToFullscreen')}\n          >\n            <i className={isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen'} />\n          </Button>\n        )}\n\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          className={styles.closeButton}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      </div>\n      <div\n        className={buildClassName(styles.emojisBackdrop, isEmojiOpen && styles.open)}\n        onClick={!isEmojiOpen ? openEmoji : closeEmoji}\n      >\n        <div className={buildClassName(styles.emojis, isEmojiOpen && styles.open)}>\n          {phoneCall?.isConnected && phoneCall?.emojis && renderText(phoneCall.emojis, ['emoji'])}\n        </div>\n        <div className={buildClassName(styles.emojiTooltip, isEmojiOpen && styles.open)}>\n          {lang('CallEmojiKeyTooltip', user?.firstName).replace('%%', '%')}\n        </div>\n      </div>\n      <div className={styles.userInfo}>\n        <h1>{user?.firstName}</h1>\n        <span className={styles.status}>{callStatus || formatMediaDuration(timeElapsed || 0)}</span>\n      </div>\n      <div className={styles.buttons}>\n        <PhoneCallButton\n          onClick={handleToggleAudio}\n          icon=\"microphone\"\n          isDisabled={!isActive}\n          isActive={hasOwnAudio}\n          label={lang(hasOwnAudio ? 'lng_call_mute_audio' : 'lng_call_unmute_audio')}\n        />\n        <PhoneCallButton\n          onClick={handleToggleVideo}\n          icon=\"video\"\n          isDisabled={!isActive}\n          isActive={hasOwnVideo}\n          label={lang(hasOwnVideo ? 'lng_call_stop_video' : 'lng_call_start_video')}\n        />\n        {hasOwnVideo && (IS_ANDROID || IS_IOS) && (\n          <PhoneCallButton\n            onClick={handleFlipCamera}\n            customIcon={(\n              <AnimatedIcon\n                tgsUrl={LOCAL_TGS_URLS.CameraFlip}\n                playSegment={!isFlipping ? [0, 1] : [0, 10]}\n                size={32}\n              />\n            )}\n            isDisabled={!isActive}\n            label={lang('VoipFlip')}\n          />\n        )}\n        {IS_SCREENSHARE_SUPPORTED && (\n          <PhoneCallButton\n            onClick={handleTogglePresentation}\n            icon=\"share-screen\"\n            isDisabled={!isActive}\n            isActive={hasOwnPresentation}\n            label={lang('lng_call_screencast')}\n          />\n        )}\n        {isIncomingRequested && (\n          <PhoneCallButton\n            onClick={requestMasterAndAcceptCall}\n            icon=\"phone-discard\"\n            isDisabled={isDiscarded}\n            label={lang('lng_call_accept')}\n            className={styles.accept}\n            iconClassName={styles.acceptIcon}\n          />\n        )}\n        <PhoneCallButton\n          onClick={handleHangUp}\n          icon=\"phone-discard\"\n          isDisabled={isDiscarded}\n          label={lang(isIncomingRequested ? 'lng_call_decline' : 'lng_call_end_call')}\n          className={styles.leave}\n        />\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { phoneCall, currentUserId } = global;\n    const { isCallPanelVisible, isMasterTab } = selectTabState(global);\n\n    return {\n      isCallPanelVisible: Boolean(isCallPanelVisible),\n      user: selectPhoneCallUser(global),\n      isOutgoing: phoneCall?.adminId === currentUserId,\n      phoneCall: isMasterTab ? phoneCall : undefined,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(PhoneCall));\n","// extracted by mini-css-extract-plugin\nexport default {\"stars\":\"wLqZtZzJMOmPkr1Z7kT5\",\"star\":\"OLQPS_OeztNYIaL15tdz\",\"isFilled\":\"o_nOyYqj5URif5S86StK\",\"comment\":\"ZToDNX6q1Yhf4aDPyuJF\",\"visible\":\"HdCq8jVctaJoit7bdgZd\"};","import React, {\n  memo, useRef, useState, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\nimport buildClassName from '../../../util/buildClassName';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\n\nimport styles from './RatePhoneCallModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\nconst RatePhoneCallModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const { closeCallRatingModal, setCallRating } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const lang = useLang();\n  const [rating, setRating] = useState<number | undefined>();\n\n  const handleSend = useCallback(() => {\n    if (!rating) {\n      closeCallRatingModal();\n      return;\n    }\n    setCallRating({\n      rating: rating + 1,\n      comment: inputRef.current?.value || '',\n    });\n  }, [closeCallRatingModal, rating, setCallRating]);\n\n  function handleClickStar(index: number) {\n    return () => setRating(rating === index ? undefined : index);\n  }\n\n  const handleCancelClick = useCallback(() => {\n    closeCallRatingModal();\n  }, [closeCallRatingModal]);\n\n  return (\n    <Modal title={lang('lng_call_rate_label')} className=\"narrow\" onClose={closeCallRatingModal} isOpen={isOpen}>\n      <div className={styles.stars}>\n        {new Array(5).fill(undefined).map((_, i) => {\n          const isFilled = rating !== undefined && rating >= i;\n          return (\n            <i\n              className={buildClassName(\n                isFilled ? 'icon-favorite-filled' : 'icon-favorite',\n                isFilled && styles.isFilled,\n                styles.star,\n              )}\n              onClick={handleClickStar(i)}\n            />\n          );\n        })}\n      </div>\n      <InputText\n        ref={inputRef}\n        placeholder={lang('lng_call_rate_comment')}\n        className={buildClassName(styles.comment, rating !== 4 && rating !== undefined && styles.visible)}\n      />\n\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleSend}>\n          {lang('Send')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={handleCancelClick}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(RatePhoneCallModal);\n","import { IS_IOS, IS_SAFARI } from '../util/windowEnvironment';\nimport { initializeSoundsForSafari } from '../global/actions/ui/calls';\n\nexport { default as GroupCall } from '../components/calls/group/GroupCall';\nexport { default as ActiveCallHeader } from '../components/calls/ActiveCallHeader';\nexport { default as PhoneCall } from '../components/calls/phone/PhoneCall';\nexport { default as RatePhoneCallModal } from '../components/calls/phone/RatePhoneCallModal';\n\nif (IS_SAFARI || IS_IOS) {\n  document.addEventListener('click', initializeSoundsForSafari, { once: true });\n}\n"],"names":["toTelegramSource","source","fromTelegramSource","getAmplitude","array","scale","length","total","i","rms","Math","sqrt","min","p2pPayloadTypeToConference","p","id","name","feedbackTypes","clockrate","parameters","channels","THRESHOLD","IS_SCREENSHARE_SUPPORTED","navigator","mediaDevices","IS_ECHO_CANCELLATION_SUPPORTED","getSupportedConstraints","echoCancellation","IS_NOISE_SUPPRESSION_SUPPORTED","noiseSuppression","sessionDescription","isP2p","sdp","Error","sections","split","map","s","reduce","acc","el","match","hasOwnProperty","filter","Boolean","lookup","prefix","sectionName","find","line","startsWith","substr","Object","values","section","parseExtmaps","l","uri","Number","parsePayloadTypes","payloads","data","fbParams","type","subtype","d","q","value","some","z","payload","assign","f","keys","rawSource","sourceAudio","rawSourceVideo","undefined","rawSourceScreencast","hash","fingerprint","setup","console","log","ufrag","pwd","fingerprints","ssrc","semantics","sources","slice","audioExtmap","videoExtmap","screencastExtmap","audioPayloadTypes","videoPayloadTypes","screencastPayloadTypes","conference","isAnswer","isPresentation","lines","add","push","sessionId","ssrcs","audioExtensions","videoExtensions","transport","candidates","endpoint","join","addCandidate","c","sdpString","str","foundation","component","protocol","priority","ip","port","generation","addTransport","forEach","addPayloadType","payloadType","parametersString","key","fbParam","addSsrcEntry","entry","payloadTypes","isVideo","isMain","isRemoved","sourceGroups","sourceGroup","ssrcTelegram","silence","ctx","oscillator","createOscillator","dst","connect","createMediaStreamDestination","start","MediaStream","stream","getAudioTracks","enabled","black","width","height","canvas","document","createElement","getContext","fillRect","captureStream","getVideoTracks","state","leavePresentation","isFromToggle","screenshareDataChannel","close","screenshareConnection","onUpdate","getUserStreams","userId","streams","setVolume","volume","participantFunctions","isStreamEnabled","streamType","myId","getTracks","updateGroupCallStreams","hasAudioStream","hasVideoStream","hasPresentationStream","amplitude","speaking","getUserStream","facing","getDisplayMedia","audio","video","getUserMedia","facingMode","async","switchCameraInput","connection","track","sender","getSenders","newStream","replaceTrack","e","toggleStream","audioContext","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","getCurrentAmplitude","Uint8Array","frequencyBinCount","getByteFrequencyData","stop","updateConnectionState","connectionState","leaveGroupCall","dataChannel","analyserInterval","clearInterval","analyzeAmplitudes","prevAmplitude","createDataChannel","onopen","onmessage","JSON","parse","colibriClass","onerror","error","handleUpdateGroupCallParticipants","updatedParticipants","participants","participant","isSelf","newEndpoints","isMuted","canSelfUnmute","isLeft","isAudioLeft","isMutedByMe","isVideoLeft","isVideoJoined","isPresentationLeft","presentation","hasVideo","hasAudio","hasPresentation","updatingParticipantsQueue","buildSdp","setRemoteDescription","answer","createAnswer","setLocalDescription","newConference","answerNew","handleTrack","audioElement","mediaStream","kind","onended","window","AudioContext","gainNode","createGain","gain","muteNode","destination","addTrack","test","Audio","srcObject","muted","remove","toggleMute","initializeConnection","resolve","RTCPeerConnection","oniceconnectionstatechange","iceConnectionState","ontrack","onnegotiationneeded","offer","createOffer","offerToReceiveVideo","offerToReceiveAudio","parseSdp","audioSsrc","videoSsrc","screenshareConference","audioStream","videoStream","updateStreams","mediaState","toggleStreamP2p","ownAudio","ownVideo","ownPresentation","blackVideo","blackPresentation","sendMediaState","stopPhoneCall","emitSignalingData","videoRotation","isBatteryLow","videoState","screencastState","filterVP8","mediaContent","isOutgoing","idx","findIndex","vp8PayloadType","rtxIdx","apt","sendInitialSetup","toString","ssrcGroups","rtpExtensions","screencast","processSignalingMessage","message","gotInitialSetup","candidate","Promise","all","addIceCandidate","sdpMLineIndex","xmlns","Date","now","addActionHandler","global","actions","isFromLibrary","shouldDiscard","shouldRemove","rejoin","tabId","getCurrentTabId","groupCall","selectActiveGroupCall","updateActiveGroupCall","participantsCount","setGlobal","callApi","call","getGlobal","removeGroupCall","removeGroupCallAudioElement","groupCalls","activeGroupCallId","toggleGroupCallPanel","force","afterHangUp","requestMasterAndJoinGroupCall","user","selectUser","currentUserId","videoStopped","raiseHand","participantId","floor","GROUP_CALL_VOLUME_MULTIPLIER","params","startSharingScreen","presentationPaused","showNotification","getGroupCallAudioElement","getGroupCallAudioContext","play","catch","warn","setInterval","joinGroupCall","apiUpdate","result","inviteHash","loadMoreGroupCallParticipants","chatId","chat","selectChat","loadFullChat","phoneCall","selectPhoneCallUser","dhConfig","gAHash","addUsers","buildCollectionByKey","users","hangUp","gB","stringify","encodedData","updateTabState","ratingPhoneCall","rating","comment","selectTabState","setTimeout","EMOJI_DATA","Uint16Array","EMOJI_OFFSETS","update","toggleGroupCallPresentation","selectGroupCallParticipant","updateGroupCallParticipant","omit","updateGroupCall","isSpeakerDisabled","groupCallId","handleUpdateGroupCallConnection","ARE_CALLS_SUPPORTED","adminId","isBusy","accessHash","connections","libraryVersions","version","langProvider","firstName","needRating","isCallPanelVisible","gA","keyFingerprint","emojis","newCall","gAOrB","shouldStartVideo","conn","iceServers","urls","isTurn","isStun","username","credentialType","credential","password","iceCandidatePoolSize","slnc","screenshare","onicecandidate","onconnectionstatechange","transceiver","mid","dc","negotiated","joinPhoneCall","sendSignalingData","isConnected","then","vibrateShort","vibrate","memo","withGlobal","meParticipant","raiseHandRating","hasRequestedToSpeak","noAudioStream","toggleGroupCallMute","requestToSpeak","playGroupCallSound","getActions","lang","useLang","muteMouseDownState","useRef","isRequestingToSpeak","setIsRequestingToSpeak","useState","isConnecting","shouldRaiseHand","prevShouldRaiseHand","usePrevious","useEffect","sound","playSegment","useMemo","r","random","animatedIconName","buttonText","className","buildClassName","onMouseDown","current","onMouseUp","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","size","SPEAKER_ICON_DISABLED_SEGMENT","SPEAKER_ICON_ENABLED_SEGMENT","isAdmin","selectIsAdminInActiveGroupCall","closeDropdown","isDropdownOpen","anchor","setGroupCallParticipantVolume","openChat","isDeleteUserModalOpen","openDeleteUserModal","closeDeleteUserModal","useFlag","isRaiseHand","localVolume","setLocalVolume","GROUP_CALL_DEFAULT_VOLUME","runThrottled","ms","noFirst","deps","useThrottledCallback","cb","useRunThrottled","handleRemove","useCallback","stopPropagation","handleCancelRequestToSpeak","handleMute","handleOpenProfile","speakerIconPlaySegment","Menu","isOpen","positionX","autoClose","style","buildStyle","y","onClose","max","onChange","target","MenuItem","icon","onClick","destructive","DeleteMemberModal","noColor","isSpeaking","prevIsRaiseHand","prevIsMuted","microphoneColor","color","isUser","openParticipantMenu","anchorRef","aboutText","aboutColor","replace","about","lastName","title","ref","Avatar","createGroupCallInviteLink","participantsIds","handleLoadMoreGroupCallParticipants","viewportIds","getMore","useInfiniteScroll","InfiniteScroll","items","onLoadMore","isActive","isFullscreen","handleClick","GROUP_CALL_THUMB_VIDEO_DISABLED","autoPlay","playsInline","onDoubleClick","selectedVideo","setSelectedVideo","presentationParticipants","videoParticipants","totalVideoCount","columnCount","shouldSpanLastVideo","handleClickVideo","CAMERA_FLIP_PLAY_SEGMENT","selectGroupCall","isSpeakerEnabled","toggleGroupCallVideo","connectToActiveGroupCall","containerRef","isMobile","isLandscape","useAppLayout","isLeaving","setIsLeaving","openFullscreen","closeFullscreen","isSidebarOpen","openSidebar","closeSidebar","hasVideoParticipants","isLandscapeLayout","participantMenu","setParticipantMenu","isParticipantMenuOpen","closeParticipantMenu","isConfirmLeaveModalOpen","openConfirmLeaveModal","closeConfirmLeaveModal","isEndGroupCallModal","setIsEndGroupCallModal","shouldEndGroupCall","setShouldEndGroupCall","handleOpenParticipantMenu","rect","getBoundingClientRect","container","x","left","top","offsetTop","handleCloseConfirmLeaveModal","MainButton","onTrigger","Button","round","ariaLabel","handleToggleFullscreen","exitFullscreen","requestFullscreen","handleToggleSidebar","handleStreamsDoubleClick","IS_REQUEST_FULLSCREEN_SUPPORTED","toggleFullscreen","handleClose","addEventListener","removeEventListener","endGroupCall","handleLeaveGroupCall","handleCloseAnimationEnd","handleToggleGroupCallPresentation","Modal","dialogRef","onCloseAnimationEnd","DropdownMenu","trigger","Loading","IS_ANDROID","IS_IOS","Checkbox","label","checked","onCheck","isText","tabState","isMasterTab","phoneCallUser","body","classList","toggle","customIcon","iconClassName","isDisabled","disabled","animationLevel","settings","byKey","requestMasterAndAcceptCall","connectToActivePhoneCall","isDiscarded","reason","isIncomingRequested","isOutgoingRequested","isHangingUp","startHangingUp","stopHangingUp","handleHangUp","forceUpdate","useForceUpdate","useInterval","callStatus","hasOwnAudio","hasOwnPresentation","hasOwnVideo","isHidingPresentation","startHidingPresentation","stopHidingPresentation","isHidingVideo","startHidingVideo","stopHidingVideo","handleTogglePresentation","handleToggleVideo","handleToggleAudio","isEmojiOpen","openEmoji","closeEmoji","isFlipping","startFlipping","stopFlipping","handleFlipCamera","switchCameraInputP2p","timeElapsed","startDate","styles","withVideo","noLoop","renderText","formatMediaDuration","closeCallRatingModal","setCallRating","inputRef","setRating","handleSend","handleCancelClick","Array","fill","_","isFilled","index","InputText","placeholder","IS_SAFARI","initializeSoundsForSafari","once"],"sourceRoot":""}