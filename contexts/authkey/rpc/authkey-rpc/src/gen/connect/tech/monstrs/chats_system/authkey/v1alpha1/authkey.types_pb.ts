// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file tech/monstrs/chats_system/authkey/v1alpha1/authkey.types.proto (package tech.monstrs.chats_system.authkey.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions } from '@bufbuild/protobuf'
import type { FieldList }         from '@bufbuild/protobuf'
import type { JsonReadOptions }   from '@bufbuild/protobuf'
import type { JsonValue }         from '@bufbuild/protobuf'
import type { PartialMessage }    from '@bufbuild/protobuf'
import type { PlainMessage }      from '@bufbuild/protobuf'

import { Message }                from '@bufbuild/protobuf'
import { proto3 }                 from '@bufbuild/protobuf'
import { protoInt64 }             from '@bufbuild/protobuf'

/**
 * @generated from enum tech.monstrs.chats_system.authkey.v1alpha1.AuthKeyType
 */
export enum AuthKeyType {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: PERM = 1;
   */
  PERM = 1,

  /**
   * @generated from enum value: TEMP = 2;
   */
  TEMP = 2,

  /**
   * @generated from enum value: MEDIA_TEMP = 3;
   */
  MEDIA_TEMP = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AuthKeyType)
proto3.util.setEnumType(AuthKeyType, 'tech.monstrs.chats_system.authkey.v1alpha1.AuthKeyType', [
  { no: 0, name: 'UNKNOWN' },
  { no: 1, name: 'PERM' },
  { no: 2, name: 'TEMP' },
  { no: 3, name: 'MEDIA_TEMP' },
])

/**
 * @generated from message tech.monstrs.chats_system.authkey.v1alpha1.AuthKey
 */
export class AuthKey extends Message<AuthKey> {
  /**
   * @generated from field: int64 auth_key_id = 1;
   */
  authKeyId = protoInt64.zero

  /**
   * @generated from field: bytes auth_key = 2;
   */
  authKey = new Uint8Array(0)

  /**
   * @generated from field: tech.monstrs.chats_system.authkey.v1alpha1.AuthKeyType auth_key_type = 3;
   */
  authKeyType = AuthKeyType.UNKNOWN

  /**
   * @generated from field: int64 perm_auth_key_id = 4;
   */
  permAuthKeyId = protoInt64.zero

  /**
   * @generated from field: int64 temp_auth_key_id = 5;
   */
  tempAuthKeyId = protoInt64.zero

  /**
   * @generated from field: int64 media_temp_auth_key_id = 6;
   */
  mediaTempAuthKeyId = protoInt64.zero

  constructor(data?: PartialMessage<AuthKey>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.chats_system.authkey.v1alpha1.AuthKey'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'auth_key_id', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: 'auth_key', kind: 'scalar', T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: 'auth_key_type', kind: 'enum', T: proto3.getEnumType(AuthKeyType) },
    { no: 4, name: 'perm_auth_key_id', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: 'temp_auth_key_id', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: 'media_temp_auth_key_id', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthKey {
    return new AuthKey().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthKey {
    return new AuthKey().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthKey {
    return new AuthKey().fromJsonString(jsonString, options)
  }

  static equals(
    a: AuthKey | PlainMessage<AuthKey> | undefined,
    b: AuthKey | PlainMessage<AuthKey> | undefined
  ): boolean {
    return proto3.util.equals(AuthKey, a, b)
  }
}

/**
 * @generated from message tech.monstrs.chats_system.authkey.v1alpha1.AuthKeyUser
 */
export class AuthKeyUser extends Message<AuthKeyUser> {
  /**
   * @generated from field: int64 auth_key_id = 1;
   */
  authKeyId = protoInt64.zero

  /**
   * @generated from field: int64 user_id = 2;
   */
  userId = protoInt64.zero

  constructor(data?: PartialMessage<AuthKeyUser>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.chats_system.authkey.v1alpha1.AuthKeyUser'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'auth_key_id', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: 'user_id', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthKeyUser {
    return new AuthKeyUser().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthKeyUser {
    return new AuthKeyUser().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthKeyUser {
    return new AuthKeyUser().fromJsonString(jsonString, options)
  }

  static equals(
    a: AuthKeyUser | PlainMessage<AuthKeyUser> | undefined,
    b: AuthKeyUser | PlainMessage<AuthKeyUser> | undefined
  ): boolean {
    return proto3.util.equals(AuthKeyUser, a, b)
  }
}

/**
 * @generated from message tech.monstrs.chats_system.authkey.v1alpha1.AuthKeyConnection
 */
export class AuthKeyConnection extends Message<AuthKeyConnection> {
  /**
   * @generated from field: int64 auth_key_id = 1;
   */
  authKeyId = protoInt64.zero

  /**
   * @generated from field: int32 layer = 2;
   */
  layer = 0

  /**
   * @generated from field: int32 api_id = 3;
   */
  apiId = 0

  /**
   * @generated from field: string client_ip = 4;
   */
  clientIp = ''

  /**
   * @generated from field: string device_model = 5;
   */
  deviceModel = ''

  /**
   * @generated from field: string system_version = 6;
   */
  systemVersion = ''

  /**
   * @generated from field: string app_version = 7;
   */
  appVersion = ''

  /**
   * @generated from field: string system_lang_code = 8;
   */
  systemLangCode = ''

  /**
   * @generated from field: string lang_pack = 9;
   */
  langPack = ''

  /**
   * @generated from field: string lang_code = 10;
   */
  langCode = ''

  /**
   * @generated from field: optional string params = 11;
   */
  params?: string

  constructor(data?: PartialMessage<AuthKeyConnection>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.chats_system.authkey.v1alpha1.AuthKeyConnection'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'auth_key_id', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: 'layer', kind: 'scalar', T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: 'api_id', kind: 'scalar', T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: 'client_ip', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 5, name: 'device_model', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 6, name: 'system_version', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 7, name: 'app_version', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 8, name: 'system_lang_code', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 9, name: 'lang_pack', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 10, name: 'lang_code', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 11, name: 'params', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthKeyConnection {
    return new AuthKeyConnection().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthKeyConnection {
    return new AuthKeyConnection().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthKeyConnection {
    return new AuthKeyConnection().fromJsonString(jsonString, options)
  }

  static equals(
    a: AuthKeyConnection | PlainMessage<AuthKeyConnection> | undefined,
    b: AuthKeyConnection | PlainMessage<AuthKeyConnection> | undefined
  ): boolean {
    return proto3.util.equals(AuthKeyConnection, a, b)
  }
}
