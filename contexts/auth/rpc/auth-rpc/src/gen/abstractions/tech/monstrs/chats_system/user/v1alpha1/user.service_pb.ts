// @generated by protoc-gen-abstractions 0.0.1 with parameter "target=ts"
// @generated from file tech/monstrs/chats_system/user/v1alpha1/user.service.proto (package tech.monstrs.chats_system.user.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { EmojiStatus, RestrictionReason } from "./user.types_pb.js";

/**
 * @generated from enum tech.monstrs.chats_system.user.v1alpha1.UserType
 */
export enum UserType {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: DELETED = 1;
   */
  DELETED = 1,

  /**
   * @generated from enum value: REGULAR = 2;
   */
  REGULAR = 2,

  /**
   * @generated from enum value: BOT = 3;
   */
  BOT = 3,

  /**
   * @generated from enum value: SERVICE = 4;
   */
  SERVICE = 4,

  /**
   * @generated from enum value: TEST = 5;
   */
  TEST = 5,
}

/**
 * @generated from enum tech.monstrs.chats_system.user.v1alpha1.PrivacyKeyType
 */
export enum PrivacyKeyType {
  /**
   * @generated from enum value: KEY_TYPE_INVALID = 0;
   */
  KEY_TYPE_INVALID = 0,

  /**
   * @generated from enum value: STATUS_TIMESTAMP = 1;
   */
  STATUS_TIMESTAMP = 1,

  /**
   * @generated from enum value: CHAT_INVITE = 2;
   */
  CHAT_INVITE = 2,

  /**
   * @generated from enum value: PHONE_CALL = 3;
   */
  PHONE_CALL = 3,

  /**
   * @generated from enum value: PHONE_P2P = 4;
   */
  PHONE_P2P = 4,

  /**
   * @generated from enum value: FORWARDS = 5;
   */
  FORWARDS = 5,

  /**
   * @generated from enum value: PROFILE_PHOTO = 6;
   */
  PROFILE_PHOTO = 6,

  /**
   * @generated from enum value: PHONE_NUMBER = 7;
   */
  PHONE_NUMBER = 7,

  /**
   * @generated from enum value: ADDED_BY_PHONE = 8;
   */
  ADDED_BY_PHONE = 8,

  /**
   * @generated from enum value: VOICE_MESSAGES = 9;
   */
  VOICE_MESSAGES = 9,

  /**
   * @generated from enum value: ABOUT = 10;
   */
  ABOUT = 10,
}

/**
 * @generated from enum tech.monstrs.chats_system.user.v1alpha1.PrivacyRuleType
 */
export enum PrivacyRuleType {
  /**
   * @generated from enum value: ALLOW_CONTACTS = 0;
   */
  ALLOW_CONTACTS = 0,

  /**
   * @generated from enum value: ALLOW_ALL = 1;
   */
  ALLOW_ALL = 1,

  /**
   * @generated from enum value: ALLOW_USERS = 2;
   */
  ALLOW_USERS = 2,

  /**
   * @generated from enum value: DISALLOW_CONTACTS = 3;
   */
  DISALLOW_CONTACTS = 3,

  /**
   * @generated from enum value: DISALLOW_ALL = 4;
   */
  DISALLOW_ALL = 4,

  /**
   * @generated from enum value: DISALLOW_USERS = 5;
   */
  DISALLOW_USERS = 5,

  /**
   * @generated from enum value: ALLOW_CHAT_PARTICIPANTS = 6;
   */
  ALLOW_CHAT_PARTICIPANTS = 6,

  /**
   * @generated from enum value: DISALLOW_CHAT_PARTICIPANTS = 7;
   */
  DISALLOW_CHAT_PARTICIPANTS = 7,
}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.InputStickerSet
 */
export abstract class InputStickerSet {
  /**
   * @generated from field: int64 id = 1;
   */
  abstract readonly id: bigint;

  /**
   * @generated from field: int64 access_hash = 2;
   */
  abstract readonly accessHash: bigint;

  /**
   * @generated from field: string short_name = 3;
   */
  abstract readonly shortName: string;

  /**
   * @generated from field: string emoticon = 4;
   */
  abstract readonly emoticon: string;

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.VideoSize
 */
export abstract class VideoSize {
  /**
   * @generated from field: string type = 1;
   */
  abstract readonly type: string;

  /**
   * @generated from field: int32 w = 2;
   */
  abstract readonly w: number;

  /**
   * @generated from field: int32 h = 3;
   */
  abstract readonly h: number;

  /**
   * @generated from field: int32 size2 = 4;
   */
  abstract readonly size2: number;

  /**
   * @generated from field: bool video_start_ts = 5;
   */
  abstract readonly videoStartTs: boolean;

  /**
   * @generated from field: int64 emoji_id = 6;
   */
  abstract readonly emojiId: bigint;

  /**
   * @generated from field: repeated int32 background_colors = 7;
   */
  abstract readonly backgroundColors: number[];

  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.InputStickerSet stickerset = 8;
   */
  abstract readonly stickerset?: InputStickerSet;

  /**
   * @generated from field: int64 sticker_id = 9;
   */
  abstract readonly stickerId: bigint;

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.PhotoSize
 */
export abstract class PhotoSize {
  /**
   * @generated from field: string type = 1;
   */
  abstract readonly type: string;

  /**
   * @generated from field: int32 w = 2;
   */
  abstract readonly w: number;

  /**
   * @generated from field: int32 h = 3;
   */
  abstract readonly h: number;

  /**
   * @generated from field: int32 size2 = 4;
   */
  abstract readonly size2: number;

  /**
   * @generated from field: bytes bytes = 5;
   */
  abstract readonly bytes: Uint8Array;

  /**
   * @generated from field: repeated int32 sizes = 6;
   */
  abstract readonly sizes: number[];

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.Photo
 */
export abstract class Photo {
  /**
   * @generated from field: int64 id = 1;
   */
  abstract readonly id: bigint;

  /**
   * @generated from field: bool has_stickers = 2;
   */
  abstract readonly hasStickers: boolean;

  /**
   * @generated from field: int64 access_hash = 3;
   */
  abstract readonly accessHash: bigint;

  /**
   * @generated from field: bytes file_reference = 4;
   */
  abstract readonly fileReference: Uint8Array;

  /**
   * @generated from field: int32 date = 5;
   */
  abstract readonly date: number;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.user.v1alpha1.PhotoSize sizes = 6;
   */
  abstract readonly sizes: PhotoSize[];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.user.v1alpha1.VideoSize video_sizes = 7;
   */
  abstract readonly videoSizes: VideoSize[];

  /**
   * @generated from field: int32 dc_id = 8;
   */
  abstract readonly dcId: number;

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.BotData
 */
export abstract class BotData {
  /**
   * @generated from field: int64 id = 1;
   */
  abstract readonly id: bigint;

  /**
   * @generated from field: int32 bot_type = 2;
   */
  abstract readonly botType: number;

  /**
   * @generated from field: int64 creator = 3;
   */
  abstract readonly creator: bigint;

  /**
   * @generated from field: string token = 4;
   */
  abstract readonly token: string;

  /**
   * @generated from field: string description = 5;
   */
  abstract readonly description: string;

  /**
   * @generated from field: bool bot_chat_history = 6;
   */
  abstract readonly botChatHistory: boolean;

  /**
   * @generated from field: bool bot_nochats = 7;
   */
  abstract readonly botNochats: boolean;

  /**
   * @generated from field: bool bot_inline_geo = 8;
   */
  abstract readonly botInlineGeo: boolean;

  /**
   * @generated from field: int32 bot_info_version = 9;
   */
  abstract readonly botInfoVersion: number;

  /**
   * @generated from field: string bot_inline_placeholder = 10;
   */
  abstract readonly botInlinePlaceholder: string;

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.UserData
 */
export abstract class UserData {
  /**
   * @generated from field: int64 id = 1;
   */
  abstract readonly id: bigint;

  /**
   * @generated from field: int64 access_hash = 2;
   */
  abstract readonly accessHash: bigint;

  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.UserType user_type = 3;
   */
  abstract readonly userType: UserType;

  /**
   * @generated from field: int64 sceret_key_id = 4;
   */
  abstract readonly sceretKeyId: bigint;

  /**
   * @generated from field: string first_name = 5;
   */
  abstract readonly firstName: string;

  /**
   * @generated from field: string last_name = 6;
   */
  abstract readonly lastName: string;

  /**
   * @generated from field: string username = 7;
   */
  abstract readonly username: string;

  /**
   * @generated from field: string phone = 8;
   */
  abstract readonly phone: string;

  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.Photo profile_photo = 9;
   */
  abstract readonly profilePhoto?: Photo;

  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.BotData bot = 10;
   */
  abstract readonly bot?: BotData;

  /**
   * @generated from field: string country_code = 11;
   */
  abstract readonly countryCode: string;

  /**
   * @generated from field: bool verified = 12;
   */
  abstract readonly verified: boolean;

  /**
   * @generated from field: bool support = 13;
   */
  abstract readonly support: boolean;

  /**
   * @generated from field: bool scam = 14;
   */
  abstract readonly scam: boolean;

  /**
   * @generated from field: bool fake = 15;
   */
  abstract readonly fake: boolean;

  /**
   * @generated from field: string about = 16;
   */
  abstract readonly about: string;

  /**
   * @generated from field: bool restricted = 17;
   */
  abstract readonly restricted: boolean;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.user.v1alpha1.RestrictionReason restriction_reason = 18;
   */
  abstract readonly restrictionReason: RestrictionReason[];

  /**
   * @generated from field: int32 contacts_version = 19;
   */
  abstract readonly contactsVersion: number;

  /**
   * @generated from field: int32 privacies_version = 20;
   */
  abstract readonly privaciesVersion: number;

  /**
   * @generated from field: bool deleted = 21;
   */
  abstract readonly deleted: boolean;

  /**
   * @generated from field: bool bot_attach_menu = 22;
   */
  abstract readonly botAttachMenu: boolean;

  /**
   * @generated from field: bool premium = 23;
   */
  abstract readonly premium: boolean;

  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.EmojiStatus emoji_status = 24;
   */
  abstract readonly emojiStatus?: EmojiStatus;

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.ContactData
 */
export abstract class ContactData {
  /**
   * @generated from field: int64 user_id = 1;
   */
  abstract readonly userId: bigint;

  /**
   * @generated from field: int64 contact_user_id = 2;
   */
  abstract readonly contactUserId: bigint;

  /**
   * @generated from field: string first_name = 3;
   */
  abstract readonly firstName: string;

  /**
   * @generated from field: string last_name = 4;
   */
  abstract readonly lastName: string;

  /**
   * @generated from field: bool mutual_contact = 5;
   */
  abstract readonly mutualContact: boolean;

  /**
   * @generated from field: string phone = 6;
   */
  abstract readonly phone: string;

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.PrivacyRule
 */
export abstract class PrivacyRule {
  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.PrivacyRuleType type = 1;
   */
  abstract readonly type: PrivacyRuleType;

  /**
   * @generated from field: repeated int64 users = 2;
   */
  abstract readonly users: bigint[];

  /**
   * @generated from field: repeated int64 chats = 3;
   */
  abstract readonly chats: bigint[];

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.PrivacyKeyRules
 */
export abstract class PrivacyKeyRules {
  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.PrivacyKeyType key = 1;
   */
  abstract readonly key: PrivacyKeyType;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.user.v1alpha1.PrivacyRule rules = 2;
   */
  abstract readonly rules: PrivacyRule[];

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.ImmutableUser
 */
export abstract class ImmutableUser {
  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.UserData user = 1;
   */
  abstract readonly user?: UserData;

  /**
   * @generated from field: optional int64 last_seen_at = 2;
   */
  abstract readonly lastSeenAt?: bigint;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.user.v1alpha1.ContactData contacts = 3;
   */
  abstract readonly contacts: ContactData[];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.user.v1alpha1.ContactData reverse_contacts = 4;
   */
  abstract readonly reverseContacts: ContactData[];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.user.v1alpha1.PrivacyKeyRules keys_privacy_rules = 5;
   */
  abstract readonly keysPrivacyRules: PrivacyKeyRules[];

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.GetImmutableUserByPhoneRequest
 */
export abstract class GetImmutableUserByPhoneRequest {
  /**
   * @generated from field: string phone_number = 1;
   */
  abstract readonly phoneNumber: string;

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.GetImmutableUserByPhoneResponse
 */
export abstract class GetImmutableUserByPhoneResponse {
  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.ImmutableUser immutable_user = 1;
   */
  abstract readonly immutableUser?: ImmutableUser;

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.CreateUserRequest
 */
export abstract class CreateUserRequest {
  /**
   * @generated from field: int64 secret_key_id = 1;
   */
  abstract readonly secretKeyId: bigint;

  /**
   * @generated from field: string phone = 2;
   */
  abstract readonly phone: string;

  /**
   * @generated from field: string country_code = 3;
   */
  abstract readonly countryCode: string;

  /**
   * @generated from field: string first_name = 4;
   */
  abstract readonly firstName: string;

  /**
   * @generated from field: string last_name = 5;
   */
  abstract readonly lastName: string;

}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.CreateUserResponse
 */
export abstract class CreateUserResponse {
  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.ImmutableUser immutable_user = 1;
   */
  abstract readonly immutableUser?: ImmutableUser;

}

