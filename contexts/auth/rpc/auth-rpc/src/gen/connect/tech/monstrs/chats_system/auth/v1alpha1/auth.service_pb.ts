// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file tech/monstrs/chats_system/auth/v1alpha1/auth.service.proto (package tech.monstrs.chats_system.auth.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { User } from "../../user/v1alpha1/user.types_pb.js";

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeApp
 */
export class SentCodeTypeApp extends Message<SentCodeTypeApp> {
  /**
   * @generated from field: int32 length = 1;
   */
  length = 0;

  constructor(data?: PartialMessage<SentCodeTypeApp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeApp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentCodeTypeApp {
    return new SentCodeTypeApp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentCodeTypeApp {
    return new SentCodeTypeApp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentCodeTypeApp {
    return new SentCodeTypeApp().fromJsonString(jsonString, options);
  }

  static equals(a: SentCodeTypeApp | PlainMessage<SentCodeTypeApp> | undefined, b: SentCodeTypeApp | PlainMessage<SentCodeTypeApp> | undefined): boolean {
    return proto3.util.equals(SentCodeTypeApp, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeSms
 */
export class SentCodeTypeSms extends Message<SentCodeTypeSms> {
  /**
   * @generated from field: int32 length = 1;
   */
  length = 0;

  constructor(data?: PartialMessage<SentCodeTypeSms>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeSms";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentCodeTypeSms {
    return new SentCodeTypeSms().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentCodeTypeSms {
    return new SentCodeTypeSms().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentCodeTypeSms {
    return new SentCodeTypeSms().fromJsonString(jsonString, options);
  }

  static equals(a: SentCodeTypeSms | PlainMessage<SentCodeTypeSms> | undefined, b: SentCodeTypeSms | PlainMessage<SentCodeTypeSms> | undefined): boolean {
    return proto3.util.equals(SentCodeTypeSms, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeCall
 */
export class SentCodeTypeCall extends Message<SentCodeTypeCall> {
  /**
   * @generated from field: int32 length = 1;
   */
  length = 0;

  constructor(data?: PartialMessage<SentCodeTypeCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentCodeTypeCall {
    return new SentCodeTypeCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentCodeTypeCall {
    return new SentCodeTypeCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentCodeTypeCall {
    return new SentCodeTypeCall().fromJsonString(jsonString, options);
  }

  static equals(a: SentCodeTypeCall | PlainMessage<SentCodeTypeCall> | undefined, b: SentCodeTypeCall | PlainMessage<SentCodeTypeCall> | undefined): boolean {
    return proto3.util.equals(SentCodeTypeCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeFlashCall
 */
export class SentCodeTypeFlashCall extends Message<SentCodeTypeFlashCall> {
  /**
   * @generated from field: string pattern = 1;
   */
  pattern = "";

  constructor(data?: PartialMessage<SentCodeTypeFlashCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeFlashCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pattern", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentCodeTypeFlashCall {
    return new SentCodeTypeFlashCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentCodeTypeFlashCall {
    return new SentCodeTypeFlashCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentCodeTypeFlashCall {
    return new SentCodeTypeFlashCall().fromJsonString(jsonString, options);
  }

  static equals(a: SentCodeTypeFlashCall | PlainMessage<SentCodeTypeFlashCall> | undefined, b: SentCodeTypeFlashCall | PlainMessage<SentCodeTypeFlashCall> | undefined): boolean {
    return proto3.util.equals(SentCodeTypeFlashCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeMissedCall
 */
export class SentCodeTypeMissedCall extends Message<SentCodeTypeMissedCall> {
  /**
   * @generated from field: int32 length = 1;
   */
  length = 0;

  /**
   * @generated from field: string prefix = 2;
   */
  prefix = "";

  constructor(data?: PartialMessage<SentCodeTypeMissedCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeMissedCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentCodeTypeMissedCall {
    return new SentCodeTypeMissedCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentCodeTypeMissedCall {
    return new SentCodeTypeMissedCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentCodeTypeMissedCall {
    return new SentCodeTypeMissedCall().fromJsonString(jsonString, options);
  }

  static equals(a: SentCodeTypeMissedCall | PlainMessage<SentCodeTypeMissedCall> | undefined, b: SentCodeTypeMissedCall | PlainMessage<SentCodeTypeMissedCall> | undefined): boolean {
    return proto3.util.equals(SentCodeTypeMissedCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeEmailCode
 */
export class SentCodeTypeEmailCode extends Message<SentCodeTypeEmailCode> {
  /**
   * @generated from field: string email_pattern = 1;
   */
  emailPattern = "";

  /**
   * @generated from field: int32 length = 2;
   */
  length = 0;

  /**
   * @generated from field: optional bool apple_signin_allowed = 3;
   */
  appleSigninAllowed?: boolean;

  /**
   * @generated from field: optional bool google_signin_allowed = 4;
   */
  googleSigninAllowed?: boolean;

  /**
   * @generated from field: optional int32 reset_available_period = 5;
   */
  resetAvailablePeriod?: number;

  /**
   * @generated from field: optional int32 reset_pending_date = 6;
   */
  resetPendingDate?: number;

  constructor(data?: PartialMessage<SentCodeTypeEmailCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeEmailCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email_pattern", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "apple_signin_allowed", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "google_signin_allowed", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "reset_available_period", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "reset_pending_date", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentCodeTypeEmailCode {
    return new SentCodeTypeEmailCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentCodeTypeEmailCode {
    return new SentCodeTypeEmailCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentCodeTypeEmailCode {
    return new SentCodeTypeEmailCode().fromJsonString(jsonString, options);
  }

  static equals(a: SentCodeTypeEmailCode | PlainMessage<SentCodeTypeEmailCode> | undefined, b: SentCodeTypeEmailCode | PlainMessage<SentCodeTypeEmailCode> | undefined): boolean {
    return proto3.util.equals(SentCodeTypeEmailCode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeSetUpEmailRequired
 */
export class SentCodeTypeSetUpEmailRequired extends Message<SentCodeTypeSetUpEmailRequired> {
  /**
   * @generated from field: optional bool apple_signin_allowed = 1;
   */
  appleSigninAllowed?: boolean;

  /**
   * @generated from field: optional bool google_ignin_allowed = 2;
   */
  googleIgninAllowed?: boolean;

  constructor(data?: PartialMessage<SentCodeTypeSetUpEmailRequired>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeSetUpEmailRequired";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "apple_signin_allowed", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "google_ignin_allowed", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentCodeTypeSetUpEmailRequired {
    return new SentCodeTypeSetUpEmailRequired().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentCodeTypeSetUpEmailRequired {
    return new SentCodeTypeSetUpEmailRequired().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentCodeTypeSetUpEmailRequired {
    return new SentCodeTypeSetUpEmailRequired().fromJsonString(jsonString, options);
  }

  static equals(a: SentCodeTypeSetUpEmailRequired | PlainMessage<SentCodeTypeSetUpEmailRequired> | undefined, b: SentCodeTypeSetUpEmailRequired | PlainMessage<SentCodeTypeSetUpEmailRequired> | undefined): boolean {
    return proto3.util.equals(SentCodeTypeSetUpEmailRequired, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeFragmentSms
 */
export class SentCodeTypeFragmentSms extends Message<SentCodeTypeFragmentSms> {
  /**
   * @generated from field: string url = 1;
   */
  url = "";

  /**
   * @generated from field: int32 length = 2;
   */
  length = 0;

  constructor(data?: PartialMessage<SentCodeTypeFragmentSms>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeFragmentSms";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentCodeTypeFragmentSms {
    return new SentCodeTypeFragmentSms().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentCodeTypeFragmentSms {
    return new SentCodeTypeFragmentSms().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentCodeTypeFragmentSms {
    return new SentCodeTypeFragmentSms().fromJsonString(jsonString, options);
  }

  static equals(a: SentCodeTypeFragmentSms | PlainMessage<SentCodeTypeFragmentSms> | undefined, b: SentCodeTypeFragmentSms | PlainMessage<SentCodeTypeFragmentSms> | undefined): boolean {
    return proto3.util.equals(SentCodeTypeFragmentSms, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeFirebaseSms
 */
export class SentCodeTypeFirebaseSms extends Message<SentCodeTypeFirebaseSms> {
  /**
   * @generated from field: int32 length = 1;
   */
  length = 0;

  /**
   * @generated from field: optional bytes nonce = 2;
   */
  nonce?: Uint8Array;

  /**
   * @generated from field: optional string receipt = 3;
   */
  receipt?: string;

  /**
   * @generated from field: optional int32 push_timeout = 4;
   */
  pushTimeout?: number;

  constructor(data?: PartialMessage<SentCodeTypeFirebaseSms>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeFirebaseSms";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "nonce", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "receipt", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "push_timeout", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentCodeTypeFirebaseSms {
    return new SentCodeTypeFirebaseSms().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentCodeTypeFirebaseSms {
    return new SentCodeTypeFirebaseSms().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentCodeTypeFirebaseSms {
    return new SentCodeTypeFirebaseSms().fromJsonString(jsonString, options);
  }

  static equals(a: SentCodeTypeFirebaseSms | PlainMessage<SentCodeTypeFirebaseSms> | undefined, b: SentCodeTypeFirebaseSms | PlainMessage<SentCodeTypeFirebaseSms> | undefined): boolean {
    return proto3.util.equals(SentCodeTypeFirebaseSms, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.CodeSettings
 */
export class CodeSettings extends Message<CodeSettings> {
  /**
   * @generated from field: optional bool allow_flashcall = 1;
   */
  allowFlashcall?: boolean;

  /**
   * @generated from field: optional bool current_number = 2;
   */
  currentNumber?: boolean;

  /**
   * @generated from field: optional bool allow_app_hash = 3;
   */
  allowAppHash?: boolean;

  /**
   * @generated from field: optional bool allow_missed_call = 4;
   */
  allowMissedCall?: boolean;

  /**
   * @generated from field: optional bool allow_firebase = 5;
   */
  allowFirebase?: boolean;

  /**
   * @generated from field: optional string token = 6;
   */
  token?: string;

  /**
   * @generated from field: optional bool app_sandbox = 7;
   */
  appSandbox?: boolean;

  /**
   * @generated from field: repeated bytes logout_tokens = 8;
   */
  logoutTokens: Uint8Array[] = [];

  constructor(data?: PartialMessage<CodeSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.CodeSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "allow_flashcall", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "current_number", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "allow_app_hash", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "allow_missed_call", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "allow_firebase", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 6, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "app_sandbox", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 8, name: "logout_tokens", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSettings {
    return new CodeSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSettings {
    return new CodeSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSettings {
    return new CodeSettings().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSettings | PlainMessage<CodeSettings> | undefined, b: CodeSettings | PlainMessage<CodeSettings> | undefined): boolean {
    return proto3.util.equals(CodeSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.CodeTypeSms
 */
export class CodeTypeSms extends Message<CodeTypeSms> {
  constructor(data?: PartialMessage<CodeTypeSms>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.CodeTypeSms";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeTypeSms {
    return new CodeTypeSms().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeTypeSms {
    return new CodeTypeSms().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeTypeSms {
    return new CodeTypeSms().fromJsonString(jsonString, options);
  }

  static equals(a: CodeTypeSms | PlainMessage<CodeTypeSms> | undefined, b: CodeTypeSms | PlainMessage<CodeTypeSms> | undefined): boolean {
    return proto3.util.equals(CodeTypeSms, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.CodeTypeCall
 */
export class CodeTypeCall extends Message<CodeTypeCall> {
  constructor(data?: PartialMessage<CodeTypeCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.CodeTypeCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeTypeCall {
    return new CodeTypeCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeTypeCall {
    return new CodeTypeCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeTypeCall {
    return new CodeTypeCall().fromJsonString(jsonString, options);
  }

  static equals(a: CodeTypeCall | PlainMessage<CodeTypeCall> | undefined, b: CodeTypeCall | PlainMessage<CodeTypeCall> | undefined): boolean {
    return proto3.util.equals(CodeTypeCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.CodeTypeFlashCall
 */
export class CodeTypeFlashCall extends Message<CodeTypeFlashCall> {
  constructor(data?: PartialMessage<CodeTypeFlashCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.CodeTypeFlashCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeTypeFlashCall {
    return new CodeTypeFlashCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeTypeFlashCall {
    return new CodeTypeFlashCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeTypeFlashCall {
    return new CodeTypeFlashCall().fromJsonString(jsonString, options);
  }

  static equals(a: CodeTypeFlashCall | PlainMessage<CodeTypeFlashCall> | undefined, b: CodeTypeFlashCall | PlainMessage<CodeTypeFlashCall> | undefined): boolean {
    return proto3.util.equals(CodeTypeFlashCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.CodeTypeMissedCall
 */
export class CodeTypeMissedCall extends Message<CodeTypeMissedCall> {
  constructor(data?: PartialMessage<CodeTypeMissedCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.CodeTypeMissedCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeTypeMissedCall {
    return new CodeTypeMissedCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeTypeMissedCall {
    return new CodeTypeMissedCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeTypeMissedCall {
    return new CodeTypeMissedCall().fromJsonString(jsonString, options);
  }

  static equals(a: CodeTypeMissedCall | PlainMessage<CodeTypeMissedCall> | undefined, b: CodeTypeMissedCall | PlainMessage<CodeTypeMissedCall> | undefined): boolean {
    return proto3.util.equals(CodeTypeMissedCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.CodeTypeFragmentSms
 */
export class CodeTypeFragmentSms extends Message<CodeTypeFragmentSms> {
  constructor(data?: PartialMessage<CodeTypeFragmentSms>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.CodeTypeFragmentSms";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeTypeFragmentSms {
    return new CodeTypeFragmentSms().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeTypeFragmentSms {
    return new CodeTypeFragmentSms().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeTypeFragmentSms {
    return new CodeTypeFragmentSms().fromJsonString(jsonString, options);
  }

  static equals(a: CodeTypeFragmentSms | PlainMessage<CodeTypeFragmentSms> | undefined, b: CodeTypeFragmentSms | PlainMessage<CodeTypeFragmentSms> | undefined): boolean {
    return proto3.util.equals(CodeTypeFragmentSms, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SentCode
 */
export class SentCode extends Message<SentCode> {
  /**
   * @generated from oneof tech.monstrs.chats_system.auth.v1alpha1.SentCode.type
   */
  type: {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeApp type_app = 1;
     */
    value: SentCodeTypeApp;
    case: "typeApp";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeSms type_sms = 2;
     */
    value: SentCodeTypeSms;
    case: "typeSms";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeCall type_call = 3;
     */
    value: SentCodeTypeCall;
    case: "typeCall";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeFlashCall type_flash_call = 4;
     */
    value: SentCodeTypeFlashCall;
    case: "typeFlashCall";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeMissedCall type_missed_call = 5;
     */
    value: SentCodeTypeMissedCall;
    case: "typeMissedCall";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeEmailCode type_email_code = 6;
     */
    value: SentCodeTypeEmailCode;
    case: "typeEmailCode";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeSetUpEmailRequired type_set_up_email_required = 7;
     */
    value: SentCodeTypeSetUpEmailRequired;
    case: "typeSetUpEmailRequired";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeFragmentSms type_fragment_sms = 8;
     */
    value: SentCodeTypeFragmentSms;
    case: "typeFragmentSms";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.SentCodeTypeFirebaseSms type_firebase_sms = 9;
     */
    value: SentCodeTypeFirebaseSms;
    case: "typeFirebaseSms";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: string phone_code_hash = 10;
   */
  phoneCodeHash = "";

  /**
   * @generated from oneof tech.monstrs.chats_system.auth.v1alpha1.SentCode.next_type
   */
  nextType: {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.CodeTypeSms next_type_sms = 11;
     */
    value: CodeTypeSms;
    case: "nextTypeSms";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.CodeTypeCall next_type_call = 12;
     */
    value: CodeTypeCall;
    case: "nextTypeCall";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.CodeTypeFlashCall next_type_flash_call = 13;
     */
    value: CodeTypeFlashCall;
    case: "nextTypeFlashCall";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.CodeTypeMissedCall next_type_missed_call = 14;
     */
    value: CodeTypeMissedCall;
    case: "nextTypeMissedCall";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.CodeTypeFragmentSms next_type_fragment_sms = 15;
     */
    value: CodeTypeFragmentSms;
    case: "nextTypeFragmentSms";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: optional int32 timeout = 16;
   */
  timeout?: number;

  constructor(data?: PartialMessage<SentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type_app", kind: "message", T: SentCodeTypeApp, oneof: "type" },
    { no: 2, name: "type_sms", kind: "message", T: SentCodeTypeSms, oneof: "type" },
    { no: 3, name: "type_call", kind: "message", T: SentCodeTypeCall, oneof: "type" },
    { no: 4, name: "type_flash_call", kind: "message", T: SentCodeTypeFlashCall, oneof: "type" },
    { no: 5, name: "type_missed_call", kind: "message", T: SentCodeTypeMissedCall, oneof: "type" },
    { no: 6, name: "type_email_code", kind: "message", T: SentCodeTypeEmailCode, oneof: "type" },
    { no: 7, name: "type_set_up_email_required", kind: "message", T: SentCodeTypeSetUpEmailRequired, oneof: "type" },
    { no: 8, name: "type_fragment_sms", kind: "message", T: SentCodeTypeFragmentSms, oneof: "type" },
    { no: 9, name: "type_firebase_sms", kind: "message", T: SentCodeTypeFirebaseSms, oneof: "type" },
    { no: 10, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "next_type_sms", kind: "message", T: CodeTypeSms, oneof: "next_type" },
    { no: 12, name: "next_type_call", kind: "message", T: CodeTypeCall, oneof: "next_type" },
    { no: 13, name: "next_type_flash_call", kind: "message", T: CodeTypeFlashCall, oneof: "next_type" },
    { no: 14, name: "next_type_missed_call", kind: "message", T: CodeTypeMissedCall, oneof: "next_type" },
    { no: 15, name: "next_type_fragment_sms", kind: "message", T: CodeTypeFragmentSms, oneof: "next_type" },
    { no: 16, name: "timeout", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SentCode {
    return new SentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SentCode {
    return new SentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SentCode {
    return new SentCode().fromJsonString(jsonString, options);
  }

  static equals(a: SentCode | PlainMessage<SentCode> | undefined, b: SentCode | PlainMessage<SentCode> | undefined): boolean {
    return proto3.util.equals(SentCode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.EmailVerificationCode
 */
export class EmailVerificationCode extends Message<EmailVerificationCode> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  constructor(data?: PartialMessage<EmailVerificationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.EmailVerificationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmailVerificationCode {
    return new EmailVerificationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmailVerificationCode {
    return new EmailVerificationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmailVerificationCode {
    return new EmailVerificationCode().fromJsonString(jsonString, options);
  }

  static equals(a: EmailVerificationCode | PlainMessage<EmailVerificationCode> | undefined, b: EmailVerificationCode | PlainMessage<EmailVerificationCode> | undefined): boolean {
    return proto3.util.equals(EmailVerificationCode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.EmailVerificationGoogle
 */
export class EmailVerificationGoogle extends Message<EmailVerificationGoogle> {
  /**
   * @generated from field: string token = 1;
   */
  token = "";

  constructor(data?: PartialMessage<EmailVerificationGoogle>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.EmailVerificationGoogle";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmailVerificationGoogle {
    return new EmailVerificationGoogle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmailVerificationGoogle {
    return new EmailVerificationGoogle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmailVerificationGoogle {
    return new EmailVerificationGoogle().fromJsonString(jsonString, options);
  }

  static equals(a: EmailVerificationGoogle | PlainMessage<EmailVerificationGoogle> | undefined, b: EmailVerificationGoogle | PlainMessage<EmailVerificationGoogle> | undefined): boolean {
    return proto3.util.equals(EmailVerificationGoogle, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.EmailVerificationApple
 */
export class EmailVerificationApple extends Message<EmailVerificationApple> {
  /**
   * @generated from field: string token = 2;
   */
  token = "";

  constructor(data?: PartialMessage<EmailVerificationApple>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.EmailVerificationApple";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmailVerificationApple {
    return new EmailVerificationApple().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmailVerificationApple {
    return new EmailVerificationApple().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmailVerificationApple {
    return new EmailVerificationApple().fromJsonString(jsonString, options);
  }

  static equals(a: EmailVerificationApple | PlainMessage<EmailVerificationApple> | undefined, b: EmailVerificationApple | PlainMessage<EmailVerificationApple> | undefined): boolean {
    return proto3.util.equals(EmailVerificationApple, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.Authorization
 */
export class Authorization extends Message<Authorization> {
  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.User user = 1;
   */
  user?: User;

  /**
   * @generated from field: optional bool setup_password_required = 2;
   */
  setupPasswordRequired?: boolean;

  /**
   * @generated from field: optional int32 otherwise_relogin_days = 3;
   */
  otherwiseReloginDays?: number;

  /**
   * @generated from field: optional int32 tmp_sessions = 4;
   */
  tmpSessions?: number;

  /**
   * @generated from field: optional bytes future_auth_token = 5;
   */
  futureAuthToken?: Uint8Array;

  constructor(data?: PartialMessage<Authorization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.Authorization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
    { no: 2, name: "setup_password_required", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "otherwise_relogin_days", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "tmp_sessions", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "future_auth_token", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Authorization {
    return new Authorization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Authorization {
    return new Authorization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Authorization {
    return new Authorization().fromJsonString(jsonString, options);
  }

  static equals(a: Authorization | PlainMessage<Authorization> | undefined, b: Authorization | PlainMessage<Authorization> | undefined): boolean {
    return proto3.util.equals(Authorization, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SendCodeRequest
 */
export class SendCodeRequest extends Message<SendCodeRequest> {
  /**
   * @generated from field: string phone_number = 1;
   */
  phoneNumber = "";

  /**
   * @generated from field: int32 api_id = 2;
   */
  apiId = 0;

  /**
   * @generated from field: string api_hash = 3;
   */
  apiHash = "";

  /**
   * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.CodeSettings settings = 4;
   */
  settings?: CodeSettings;

  constructor(data?: PartialMessage<SendCodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SendCodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "api_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "api_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "settings", kind: "message", T: CodeSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendCodeRequest {
    return new SendCodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendCodeRequest {
    return new SendCodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendCodeRequest {
    return new SendCodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendCodeRequest | PlainMessage<SendCodeRequest> | undefined, b: SendCodeRequest | PlainMessage<SendCodeRequest> | undefined): boolean {
    return proto3.util.equals(SendCodeRequest, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SendCodeResponse
 */
export class SendCodeResponse extends Message<SendCodeResponse> {
  /**
   * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.SentCode sent_code = 1;
   */
  sentCode?: SentCode;

  constructor(data?: PartialMessage<SendCodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SendCodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sent_code", kind: "message", T: SentCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendCodeResponse {
    return new SendCodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendCodeResponse {
    return new SendCodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendCodeResponse {
    return new SendCodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendCodeResponse | PlainMessage<SendCodeResponse> | undefined, b: SendCodeResponse | PlainMessage<SendCodeResponse> | undefined): boolean {
    return proto3.util.equals(SendCodeResponse, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SignInRequest
 */
export class SignInRequest extends Message<SignInRequest> {
  /**
   * @generated from field: string phone_number = 1;
   */
  phoneNumber = "";

  /**
   * @generated from field: string phone_code_hash = 2;
   */
  phoneCodeHash = "";

  /**
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;

  /**
   * @generated from oneof tech.monstrs.chats_system.auth.v1alpha1.SignInRequest.email_verification
   */
  emailVerification: {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.EmailVerificationCode code = 4;
     */
    value: EmailVerificationCode;
    case: "code";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.EmailVerificationGoogle google = 5;
     */
    value: EmailVerificationGoogle;
    case: "google";
  } | {
    /**
     * @generated from field: tech.monstrs.chats_system.auth.v1alpha1.EmailVerificationApple apple = 6;
     */
    value: EmailVerificationApple;
    case: "apple";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SignInRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SignInRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "phone_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "code", kind: "message", T: EmailVerificationCode, oneof: "email_verification" },
    { no: 5, name: "google", kind: "message", T: EmailVerificationGoogle, oneof: "email_verification" },
    { no: 6, name: "apple", kind: "message", T: EmailVerificationApple, oneof: "email_verification" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignInRequest {
    return new SignInRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignInRequest {
    return new SignInRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignInRequest {
    return new SignInRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SignInRequest | PlainMessage<SignInRequest> | undefined, b: SignInRequest | PlainMessage<SignInRequest> | undefined): boolean {
    return proto3.util.equals(SignInRequest, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SignInResponse
 */
export class SignInResponse extends Message<SignInResponse> {
  /**
   * @generated from field: optional tech.monstrs.chats_system.auth.v1alpha1.Authorization authorization = 1;
   */
  authorization?: Authorization;

  constructor(data?: PartialMessage<SignInResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SignInResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authorization", kind: "message", T: Authorization, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignInResponse {
    return new SignInResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignInResponse {
    return new SignInResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignInResponse {
    return new SignInResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SignInResponse | PlainMessage<SignInResponse> | undefined, b: SignInResponse | PlainMessage<SignInResponse> | undefined): boolean {
    return proto3.util.equals(SignInResponse, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SignUpRequest
 */
export class SignUpRequest extends Message<SignUpRequest> {
  /**
   * @generated from field: string phone_number = 1;
   */
  phoneNumber = "";

  /**
   * @generated from field: string phone_code_hash = 2;
   */
  phoneCodeHash = "";

  /**
   * @generated from field: string first_name = 3;
   */
  firstName = "";

  /**
   * @generated from field: string last_name = 4;
   */
  lastName = "";

  constructor(data?: PartialMessage<SignUpRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SignUpRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignUpRequest {
    return new SignUpRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignUpRequest {
    return new SignUpRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignUpRequest {
    return new SignUpRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SignUpRequest | PlainMessage<SignUpRequest> | undefined, b: SignUpRequest | PlainMessage<SignUpRequest> | undefined): boolean {
    return proto3.util.equals(SignUpRequest, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.auth.v1alpha1.SignUpResponse
 */
export class SignUpResponse extends Message<SignUpResponse> {
  /**
   * @generated from field: optional tech.monstrs.chats_system.auth.v1alpha1.Authorization authorization = 1;
   */
  authorization?: Authorization;

  constructor(data?: PartialMessage<SignUpResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.auth.v1alpha1.SignUpResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authorization", kind: "message", T: Authorization, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignUpResponse {
    return new SignUpResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignUpResponse {
    return new SignUpResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignUpResponse {
    return new SignUpResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SignUpResponse | PlainMessage<SignUpResponse> | undefined, b: SignUpResponse | PlainMessage<SignUpResponse> | undefined): boolean {
    return proto3.util.equals(SignUpResponse, a, b);
  }
}

