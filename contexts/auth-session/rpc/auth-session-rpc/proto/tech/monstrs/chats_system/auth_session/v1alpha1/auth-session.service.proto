syntax = "proto3";

package tech.monstrs.chats_system.auth_session.v1alpha1;

service AuthSessionService {
  rpc getLayer (GetLayerRequest) returns (GeLayerResponse) {}
  rpc getClient (GetClientRequest) returns (GetClientResponse) {}
  rpc getUserId (GetUserIdRequest) returns (GetUserIdResponse) {}
  rpc getLangPack (GetLangPackRequest) returns (GetLangPackResponse) {}
  rpc getLangCode (GetLangCodeRequest) returns (GetLangCodeResponse) {}
  rpc getFutureSalts (GetFutureSaltsRequest) returns (GetFutureSaltsResponse) {}
  rpc getPermAuthKeyId (GetPermAuthKeyIdRequest) returns (GetPermAuthKeyIdResponse) {}
  rpc getAuthStateData (GetAuthStateDataRequest) returns (GetAuthStateDataResponse) {}
  rpc getAuthorization (GetAuthorizationRequest) returns (GetAuthorizationResponse) {}
  rpc getAuthorizations (GetAuthorizationsRequest) returns (GetAuthorizationsResponse) {}
  rpc setLayer (SetLayerRequest) returns (SetLayerResponse) {}
  rpc setAuthKey (SetAuthKeyRequest) returns (SetAuthKeyResponse) {}
  rpc setClientSessionInfo (SetClientSessionInfoRequest) returns (SetClientSessionInfoResponse) {}
  rpc setInitConnection (SetInitConnectionRequest) returns (SetInitConnectionResponse) {}
  rpc resetAuthorization (ResetAuthorizationRequest) returns (ResetAuthorizationResponse) {}
  rpc bindAuthKeyUser (BindAuthKeyUserRequest) returns (BindAuthKeyUserResponse) {}
  rpc unbindAuthKeyUser (UnbindAuthKeyUserRequest) returns (UnbindAuthKeyUserResponse) {}
  rpc bindTempAuthKey (BindTempAuthKeyRequest) returns (BindTempAuthKeyResponse) {}
  rpc queryAuthKey (QueryAuthKeyRequest) returns (QueryAuthKeyResponse) {}
}

message FutureSalt {
  int32 valid_since = 1;
  int32 valid_until = 2;
  int64 salt = 3;
}

message FutureSalts {
  int64 req_msg_id = 1;
  int32 now = 2;
  repeated FutureSalt salts = 3;
}

message AuthKeyInfo {
  int64 auth_key_id = 1;
  bytes auth_key = 2;
  int32 auth_key_type = 3;
  int64 perm_auth_key_id = 4;
  int64 temp_auth_key_id = 5;
  int64 media_temp_auth_key_id = 6;
}

message AuthKeyStateData {
  int64 auth_key_id = 1;
  int64 user_id = 2;
  int32 key_state = 3;
  int32 layer = 4;
  int32 client_type = 5;
}

message Authorization {
  bool current = 1;
  bool official_app = 2;
  bool password_pending = 3;
  int64 hash = 4;
  string device_model = 5;
  string platform = 6;
  string system_version = 7;
  int32 api_id = 8;
  string app_name = 9;
  string app_version = 10;
  int32 date_created = 11;
  int32 date_active = 12;
  string ip = 13;
  string country = 14;
  string region = 15;
  optional bool encrypted_requests_disabled = 16;
  optional bool call_requests_disabled = 17;
  optional bool unconfirmed = 18;
}

message ClientSession {
  int64 auth_key_id = 1;
  string ip = 2;
  int32 layer = 3;
  int32 api_id = 4;
  string device_model = 5;
  string system_version = 6;
  string app_version = 7;
  string system_lang_code = 8;
  string lang_pack = 9;
  string lang_code = 10;
  optional string proxy = 11;
  optional string params = 12;
}

message GetLayerRequest {
  int64 auth_key_id = 1;
}

message GeLayerResponse {
  int32 layer = 1;
}

message GetClientRequest {
  int64 auth_key_id = 1;
}

message GetClientResponse {
  string client = 1;
}

message GetUserIdRequest {
  int64 auth_key_id = 1;
}

message GetUserIdResponse {
  int64 user_id = 1;
}

message GetLangPackRequest {
  int64 auth_key_id = 1;
}

message GetLangPackResponse {
  string lang_pack = 1;
}

message GetLangCodeRequest {
  int64 auth_key_id = 1;
}

message GetLangCodeResponse {
  string lang_code = 1;
}

message GetFutureSaltsRequest {
  int64 auth_key_id = 1;
  int32 num = 2;
}

message GetFutureSaltsResponse {
  FutureSalts future_salts = 1;
}

message GetPermAuthKeyIdRequest {
  int64 auth_key_id = 1;
}

message GetPermAuthKeyIdResponse {
  int64 perm_auth_key_id = 1;
}

message GetAuthStateDataRequest {
  int64 auth_key_id = 1;
}

message GetAuthStateDataResponse {
  AuthKeyStateData auth_key_state_data = 1;
}

message GetAuthorizationRequest {
  int64 auth_key_id = 1;
}

message GetAuthorizationResponse {
  Authorization authorization = 1;
}

message GetAuthorizationsRequest {
  int64 user_id = 1;
  repeated int64 exclude_auth_key_id = 2;
}

message GetAuthorizationsResponse {
  int32 authorization_ttl_days = 1;
  repeated Authorization authorizations = 2;
}

message SetLayerRequest {
  int64 auth_key_id = 1;
  string ip = 2;
  int32 layer = 3;
}

message SetLayerResponse {
  bool success = 1;
}


message SetAuthKeyRequest {
  AuthKeyInfo auth_key = 1;
  FutureSalt future_salt = 2;
  int32 expires_in = 3;
}

message SetAuthKeyResponse {
  bool success = 1;
}

message SetClientSessionInfoRequest {
  optional ClientSession data = 1;
}

message SetClientSessionInfoResponse {
  bool success = 1;
}

message SetInitConnectionRequest {
  int64 auth_key_id = 1;
  string ip = 2;
  int32 api_id = 3;
  string device_model = 4;
  string system_version = 5;
  string app_version = 6;
  string system_lang_code = 7;
  string lang_pack = 8;
  string lang_code = 9;
}

message SetInitConnectionResponse {
  bool success = 1;
}

message ResetAuthorizationRequest {
  int64 user_id = 1;
  int64 auth_key_id = 2;
  int64 hash = 3;
}

message ResetAuthorizationResponse {
  repeated int64 key_id = 1;
}

message BindAuthKeyUserRequest {
  int64 auth_key_id = 1;
  int64 user_id = 2;
}

message BindAuthKeyUserResponse {
  int64 hash = 1;
}

message UnbindAuthKeyUserRequest {
  int64 auth_key_id = 1;
  int64 user_id = 2;
}

message UnbindAuthKeyUserResponse {
  bool success = 1;
}

message BindTempAuthKeyRequest {
  int64 perm_auth_key_id = 1;
  int64 nonce = 2;
  int32 expires_at = 3;
  bytes encrypted_message = 4;
}

message BindTempAuthKeyResponse {
  bool success = 1;
}

message QueryAuthKeyRequest {
  int64 auth_key_id = 1;
}

message QueryAuthKeyResponse {
  AuthKeyInfo auth_key = 1;
}
