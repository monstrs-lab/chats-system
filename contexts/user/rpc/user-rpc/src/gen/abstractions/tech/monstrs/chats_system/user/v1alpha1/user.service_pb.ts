// @generated by protoc-gen-abstractions 0.0.1 with parameter "target=ts"
// @generated from file tech/monstrs/chats_system/user/v1alpha1/user.service.proto (package tech.monstrs.chats_system.user.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { User } from './user.types_pb.js'

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.CreateUserRequest
 */
export abstract class CreateUserRequest {
  /**
   * @generated from field: int64 secret_key_id = 1;
   */
  abstract readonly secretKeyId: bigint

  /**
   * @generated from field: string phone = 2;
   */
  abstract readonly phone: string

  /**
   * @generated from field: string first_name = 3;
   */
  abstract readonly firstName: string

  /**
   * @generated from field: string last_name = 4;
   */
  abstract readonly lastName: string
}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.CreateUserResponse
 */
export abstract class CreateUserResponse {
  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.User user = 1;
   */
  abstract readonly user?: User
}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.GetUserRequest
 */
export abstract class GetUserRequest {
  /**
   * @generated from field: optional int64 user_id = 1;
   */
  abstract readonly userId?: bigint

  /**
   * @generated from field: optional string phone = 2;
   */
  abstract readonly phone?: string
}

/**
 * @generated from message tech.monstrs.chats_system.user.v1alpha1.GetUserResponse
 */
export abstract class GetUserResponse {
  /**
   * @generated from field: tech.monstrs.chats_system.user.v1alpha1.User user = 1;
   */
  abstract readonly user?: User
}
