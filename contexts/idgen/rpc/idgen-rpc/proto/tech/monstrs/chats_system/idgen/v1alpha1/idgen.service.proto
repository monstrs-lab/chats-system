syntax = "proto3";

package tech.monstrs.chats_system.idgen.v1alpha1;

service IdGenService {
  rpc SetCurrentSequenceId(SetCurrentSequenceIdRequest) returns (SetCurrentSequenceIdResponse) {}
  rpc GetCurrentSequenceId(GetCurrentSequenceIdRequest) returns (GetCurrentSequenceIdResponse) {}
  rpc GetCurrentSequenceIds(GetCurrentSequenceIdsRequest) returns (GetCurrentSequenceIdsResponse) {}
  rpc GetNextSequenceId(GetNextSequenceIdRequest) returns (GetNextSequenceIdResponse) {}
  rpc GetNextSequenceIds(GetNextSequenceIdsRequest) returns (GetNextSequenceIdsResponse) {}
}

message Sequence {
  string key = 1;
  int64 id = 2;
}

message SequenceQuery {
  string key = 1;
  optional int32 increment = 2;
}

message SetCurrentSequenceIdRequest {
  string key = 1;
  int64 id = 2;
}

message SetCurrentSequenceIdResponse {
  bool success = 1;
}

message GetCurrentSequenceIdRequest {
  SequenceQuery query = 1;
}

message GetCurrentSequenceIdResponse {
  Sequence sequence = 1;
}

message GetCurrentSequenceIdsRequest {
  repeated SequenceQuery queries = 1;
}

message GetCurrentSequenceIdsResponse {
  repeated Sequence sequences = 1;
}

message GetNextSequenceIdRequest {
  SequenceQuery query = 1;
}

message GetNextSequenceIdResponse {
  Sequence sequence = 1;
}

message GetNextSequenceIdsRequest {
  repeated SequenceQuery queries = 1;
}

message GetNextSequenceIdsResponse {
  repeated Sequence sequences = 1;
}
