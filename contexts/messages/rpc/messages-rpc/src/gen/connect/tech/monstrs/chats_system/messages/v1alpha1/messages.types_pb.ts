// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file tech/monstrs/chats_system/messages/v1alpha1/messages.types.proto (package tech.monstrs.chats_system.messages.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions }                                                                      from '@bufbuild/protobuf'

import type { FieldList }                                                           from '@bufbuild/protobuf'

import type { JsonReadOptions }                                          from '@bufbuild/protobuf'

import type { JsonValue }                               from '@bufbuild/protobuf'

import type { PartialMessage }               from '@bufbuild/protobuf'

import type { PlainMessage } from '@bufbuild/protobuf'

import { Message }                                                                                     from '@bufbuild/protobuf'

import { proto3 }                                                                             from '@bufbuild/protobuf'

/**
 * @generated from message tech.monstrs.chats_system.messages.v1alpha1.Dialogs
 */
export class Dialogs extends Message<Dialogs> {
  constructor(data?: PartialMessage<Dialogs>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'tech.monstrs.chats_system.messages.v1alpha1.Dialogs'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Dialogs {
    return new Dialogs().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Dialogs {
    return new Dialogs().fromJson(jsonValue, options)
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Dialogs {
    return new Dialogs().fromJsonString(jsonString, options)
  }

  static equals(
    a: Dialogs | PlainMessage<Dialogs> | undefined,
    b: Dialogs | PlainMessage<Dialogs> | undefined
  ): boolean {
    return proto3.util.equals(Dialogs, a, b)
  }
}
