// @generated by protoc-gen-abstractions 0.0.1 with parameter "target=ts"
// @generated from file tech/monstrs/chats_system/messages/v1alpha1/messages.service.proto (package tech.monstrs.chats_system.messages.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { Dialog, Message, OutboxMessage } from "./messages.types_pb.js";
import type { Peer } from "../../core/v1alpha1/peer.types_pb.js";

/**
 * @generated from message tech.monstrs.chats_system.messages.v1alpha1.InputPeerEmpty
 */
export abstract class InputPeerEmpty {
}

/**
 * @generated from message tech.monstrs.chats_system.messages.v1alpha1.GetDialogsRequest
 */
export abstract class GetDialogsRequest {
  /**
   * @generated from field: int64 user_id = 1;
   */
  abstract readonly userId: bigint;

  /**
   * @generated from field: bool exclude_pinned = 2;
   */
  abstract readonly excludePinned: boolean;

  /**
   * @generated from field: int32 folder_id = 3;
   */
  abstract readonly folderId: number;

  /**
   * @generated from field: int32 offset_date = 4;
   */
  abstract readonly offsetDate: number;

  /**
   * @generated from field: int32 offset_id = 5;
   */
  abstract readonly offsetId: number;

  /**
   * @generated from oneof tech.monstrs.chats_system.messages.v1alpha1.GetDialogsRequest.offset_peer
   */
  abstract readonly offsetPeer: {
    /**
     * @generated from field: tech.monstrs.chats_system.messages.v1alpha1.InputPeerEmpty empty = 6;
     */
    value: InputPeerEmpty;
    case: "empty";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: int32 limit = 7;
   */
  abstract readonly limit: number;

  /**
   * @generated from field: int64 hash = 8;
   */
  abstract readonly hash: bigint;

}

/**
 * @generated from message tech.monstrs.chats_system.messages.v1alpha1.GetDialogsResponse
 */
export abstract class GetDialogsResponse {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.messages.v1alpha1.Dialog dialogs = 1;
   */
  abstract readonly dialogs: Dialog[];

}

/**
 * @generated from message tech.monstrs.chats_system.messages.v1alpha1.SendMessageRequest
 */
export abstract class SendMessageRequest {
  /**
   * @generated from field: int64 user_id = 1;
   */
  abstract readonly userId: bigint;

  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.Peer peer = 2;
   */
  abstract readonly peer?: Peer;

  /**
   * @generated from field: tech.monstrs.chats_system.messages.v1alpha1.OutboxMessage message = 3;
   */
  abstract readonly message?: OutboxMessage;

}

/**
 * @generated from message tech.monstrs.chats_system.messages.v1alpha1.SendMessageResponse
 */
export abstract class SendMessageResponse {
}

/**
 * @generated from message tech.monstrs.chats_system.messages.v1alpha1.GetHistoryRequest
 */
export abstract class GetHistoryRequest {
  /**
   * @generated from field: int64 user_id = 1;
   */
  abstract readonly userId: bigint;

  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.Peer peer = 2;
   */
  abstract readonly peer?: Peer;

}

/**
 * @generated from message tech.monstrs.chats_system.messages.v1alpha1.GetHistoryResponse
 */
export abstract class GetHistoryResponse {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.messages.v1alpha1.Message messages = 1;
   */
  abstract readonly messages: Message[];

}

