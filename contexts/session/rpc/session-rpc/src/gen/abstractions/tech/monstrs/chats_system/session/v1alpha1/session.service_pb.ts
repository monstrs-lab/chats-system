// @generated by protoc-gen-abstractions 0.0.1 with parameter "target=ts"
// @generated from file tech/monstrs/chats_system/session/v1alpha1/session.service.proto (package tech.monstrs.chats_system.session.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

/**
 * @generated from message tech.monstrs.chats_system.session.v1alpha1.SessionClientEvent
 */
export abstract class SessionClientEvent {
  /**
   * @generated from field: string server_id = 1;
   */
  abstract readonly serverId: string

  /**
   * @generated from field: int32 conn_type = 2;
   */
  abstract readonly connType: number

  /**
   * @generated from field: int64 auth_key_id = 3;
   */
  abstract readonly authKeyId: bigint

  /**
   * @generated from field: int64 session_id = 4;
   */
  abstract readonly sessionId: bigint

  /**
   * @generated from field: string client_ip = 5;
   */
  abstract readonly clientIp: string
}

/**
 * @generated from message tech.monstrs.chats_system.session.v1alpha1.SessionClientData
 */
export abstract class SessionClientData {
  /**
   * @generated from field: string server_id = 1;
   */
  abstract readonly serverId: string

  /**
   * @generated from field: int32 conn_type = 2;
   */
  abstract readonly connType: number

  /**
   * @generated from field: int64 auth_key_id = 3;
   */
  abstract readonly authKeyId: bigint

  /**
   * @generated from field: int64 session_id = 4;
   */
  abstract readonly sessionId: bigint

  /**
   * @generated from field: string client_ip = 5;
   */
  abstract readonly clientIp: string

  /**
   * @generated from field: int32 quick_ack = 6;
   */
  abstract readonly quickAck: number

  /**
   * @generated from field: int64 salt = 7;
   */
  abstract readonly salt: bigint

  /**
   * @generated from field: bytes payload = 8;
   */
  abstract readonly payload: Uint8Array
}

/**
 * @generated from message tech.monstrs.chats_system.session.v1alpha1.CreateSessionRequest
 */
export abstract class CreateSessionRequest {
  /**
   * @generated from field: tech.monstrs.chats_system.session.v1alpha1.SessionClientEvent client = 1;
   */
  abstract readonly client?: SessionClientEvent
}

/**
 * @generated from message tech.monstrs.chats_system.session.v1alpha1.CreateSessionResponse
 */
export abstract class CreateSessionResponse {
  /**
   * @generated from field: bool success = 1;
   */
  abstract readonly success: boolean
}

/**
 * @generated from message tech.monstrs.chats_system.session.v1alpha1.CloseSessionRequest
 */
export abstract class CloseSessionRequest {
  /**
   * @generated from field: tech.monstrs.chats_system.session.v1alpha1.SessionClientEvent client = 1;
   */
  abstract readonly client?: SessionClientEvent
}

/**
 * @generated from message tech.monstrs.chats_system.session.v1alpha1.CloseSessionResponse
 */
export abstract class CloseSessionResponse {
  /**
   * @generated from field: bool success = 1;
   */
  abstract readonly success: boolean
}

/**
 * @generated from message tech.monstrs.chats_system.session.v1alpha1.SendDataToSessionRequest
 */
export abstract class SendDataToSessionRequest {
  /**
   * @generated from field: tech.monstrs.chats_system.session.v1alpha1.SessionClientData data = 1;
   */
  abstract readonly data?: SessionClientData
}

/**
 * @generated from message tech.monstrs.chats_system.session.v1alpha1.SendDataToSessionResponse
 */
export abstract class SendDataToSessionResponse {
  /**
   * @generated from field: bool success = 1;
   */
  abstract readonly success: boolean
}
