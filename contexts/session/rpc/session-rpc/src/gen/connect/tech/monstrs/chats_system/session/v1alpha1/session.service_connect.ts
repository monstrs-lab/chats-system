// @generated by protoc-gen-connect-es v0.13.2 with parameter "target=ts"
// @generated from file tech/monstrs/chats_system/session/v1alpha1/session.service.proto (package tech.monstrs.chats_system.session.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind }                                                                                                                                                                                                                                                    from '@bufbuild/protobuf'

import { Bool }                                                                                                                                                                                                                                                          from '../../core/v1alpha1/schema.tl.core_types_pb.js'
import { AuthKeyInfo }                                                                                                                                                                                                                                                   from '../../core/v1alpha1/schema.tl.sync_pb.js'
import { HttpSessionData }                                                                                                                                                                                                                                               from './session.service_pb.js'

import { TLSessionCloseSession }                                                                                                                                                                                                                        from './session.service_pb.js'

import { TLSessionCreateSession }                                                                                                                                                                                                from './session.service_pb.js'

import { TLSessionPushRpcResultData }                                                                                                                                                                    from './session.service_pb.js'

import { TLSessionPushSessionUpdatesData }                                                                                                                                   from './session.service_pb.js'

import { TLSessionPushUpdatesData }                                                                                                         from './session.service_pb.js'

import { TLSessionQueryAuthKey }                                                                                  from './session.service_pb.js'

import { TLSessionSendDataToSession }                                                      from './session.service_pb.js'

import { TLSessionSendHttpDataToSession }                      from './session.service_pb.js'

import { TLSessionSetAuthKey } from './session.service_pb.js'

/**
 * @generated from service tech.monstrs.chats_system.session.v1alpha1.SessionService
 */
export const SessionService = {
  typeName: 'tech.monstrs.chats_system.session.v1alpha1.SessionService',
  methods: {
    /**
     * @generated from rpc tech.monstrs.chats_system.session.v1alpha1.SessionService.queryAuthKey
     */
    queryAuthKey: {
      name: 'queryAuthKey',
      I: TLSessionQueryAuthKey,
      O: AuthKeyInfo,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tech.monstrs.chats_system.session.v1alpha1.SessionService.setAuthKey
     */
    setAuthKey: {
      name: 'setAuthKey',
      I: TLSessionSetAuthKey,
      O: Bool,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tech.monstrs.chats_system.session.v1alpha1.SessionService.createSession
     */
    createSession: {
      name: 'createSession',
      I: TLSessionCreateSession,
      O: Bool,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tech.monstrs.chats_system.session.v1alpha1.SessionService.sendDataToSession
     */
    sendDataToSession: {
      name: 'sendDataToSession',
      I: TLSessionSendDataToSession,
      O: Bool,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tech.monstrs.chats_system.session.v1alpha1.SessionService.sendHttpDataToSession
     */
    sendHttpDataToSession: {
      name: 'sendHttpDataToSession',
      I: TLSessionSendHttpDataToSession,
      O: HttpSessionData,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tech.monstrs.chats_system.session.v1alpha1.SessionService.closeSession
     */
    closeSession: {
      name: 'closeSession',
      I: TLSessionCloseSession,
      O: Bool,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tech.monstrs.chats_system.session.v1alpha1.SessionService.pushUpdatesData
     */
    pushUpdatesData: {
      name: 'pushUpdatesData',
      I: TLSessionPushUpdatesData,
      O: Bool,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tech.monstrs.chats_system.session.v1alpha1.SessionService.pushSessionUpdatesData
     */
    pushSessionUpdatesData: {
      name: 'pushSessionUpdatesData',
      I: TLSessionPushSessionUpdatesData,
      O: Bool,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tech.monstrs.chats_system.session.v1alpha1.SessionService.pushRpcResultData
     */
    pushRpcResultData: {
      name: 'pushRpcResultData',
      I: TLSessionPushRpcResultData,
      O: Bool,
      kind: MethodKind.Unary,
    },
  },
} as const
