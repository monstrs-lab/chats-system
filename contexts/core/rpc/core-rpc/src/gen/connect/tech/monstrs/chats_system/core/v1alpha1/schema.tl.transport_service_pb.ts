// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file tech/monstrs/chats_system/core/v1alpha1/schema.tl.transport_service.proto (package tech.monstrs.chats_system.core.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { TLConstructor } from "./schema.tl.crc32_pb.js";

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLRpcDropAnswer
 */
export class TLRpcDropAnswer extends Message<TLRpcDropAnswer> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 req_msg_id = 3;
   */
  reqMsgId = protoInt64.zero;

  constructor(data?: PartialMessage<TLRpcDropAnswer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLRpcDropAnswer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "req_msg_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLRpcDropAnswer {
    return new TLRpcDropAnswer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLRpcDropAnswer {
    return new TLRpcDropAnswer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLRpcDropAnswer {
    return new TLRpcDropAnswer().fromJsonString(jsonString, options);
  }

  static equals(a: TLRpcDropAnswer | PlainMessage<TLRpcDropAnswer> | undefined, b: TLRpcDropAnswer | PlainMessage<TLRpcDropAnswer> | undefined): boolean {
    return proto3.util.equals(TLRpcDropAnswer, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLGetFutureSalts
 */
export class TLGetFutureSalts extends Message<TLGetFutureSalts> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 num = 3;
   */
  num = 0;

  constructor(data?: PartialMessage<TLGetFutureSalts>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLGetFutureSalts";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLGetFutureSalts {
    return new TLGetFutureSalts().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLGetFutureSalts {
    return new TLGetFutureSalts().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLGetFutureSalts {
    return new TLGetFutureSalts().fromJsonString(jsonString, options);
  }

  static equals(a: TLGetFutureSalts | PlainMessage<TLGetFutureSalts> | undefined, b: TLGetFutureSalts | PlainMessage<TLGetFutureSalts> | undefined): boolean {
    return proto3.util.equals(TLGetFutureSalts, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPing
 */
export class TLPing extends Message<TLPing> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 ping_id = 3;
   */
  pingId = protoInt64.zero;

  constructor(data?: PartialMessage<TLPing>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPing";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "ping_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPing {
    return new TLPing().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPing {
    return new TLPing().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPing {
    return new TLPing().fromJsonString(jsonString, options);
  }

  static equals(a: TLPing | PlainMessage<TLPing> | undefined, b: TLPing | PlainMessage<TLPing> | undefined): boolean {
    return proto3.util.equals(TLPing, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPingDelayDisconnect
 */
export class TLPingDelayDisconnect extends Message<TLPingDelayDisconnect> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 ping_id = 3;
   */
  pingId = protoInt64.zero;

  /**
   * @generated from field: int32 disconnect_delay = 4;
   */
  disconnectDelay = 0;

  constructor(data?: PartialMessage<TLPingDelayDisconnect>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPingDelayDisconnect";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "ping_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "disconnect_delay", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPingDelayDisconnect {
    return new TLPingDelayDisconnect().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPingDelayDisconnect {
    return new TLPingDelayDisconnect().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPingDelayDisconnect {
    return new TLPingDelayDisconnect().fromJsonString(jsonString, options);
  }

  static equals(a: TLPingDelayDisconnect | PlainMessage<TLPingDelayDisconnect> | undefined, b: TLPingDelayDisconnect | PlainMessage<TLPingDelayDisconnect> | undefined): boolean {
    return proto3.util.equals(TLPingDelayDisconnect, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLDestroySession
 */
export class TLDestroySession extends Message<TLDestroySession> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 session_id = 3;
   */
  sessionId = protoInt64.zero;

  constructor(data?: PartialMessage<TLDestroySession>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLDestroySession";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLDestroySession {
    return new TLDestroySession().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLDestroySession {
    return new TLDestroySession().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLDestroySession {
    return new TLDestroySession().fromJsonString(jsonString, options);
  }

  static equals(a: TLDestroySession | PlainMessage<TLDestroySession> | undefined, b: TLDestroySession | PlainMessage<TLDestroySession> | undefined): boolean {
    return proto3.util.equals(TLDestroySession, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLTestUseError
 */
export class TLTestUseError extends Message<TLTestUseError> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLTestUseError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLTestUseError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLTestUseError {
    return new TLTestUseError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLTestUseError {
    return new TLTestUseError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLTestUseError {
    return new TLTestUseError().fromJsonString(jsonString, options);
  }

  static equals(a: TLTestUseError | PlainMessage<TLTestUseError> | undefined, b: TLTestUseError | PlainMessage<TLTestUseError> | undefined): boolean {
    return proto3.util.equals(TLTestUseError, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLTestUseConfigSimple
 */
export class TLTestUseConfigSimple extends Message<TLTestUseConfigSimple> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLTestUseConfigSimple>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLTestUseConfigSimple";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLTestUseConfigSimple {
    return new TLTestUseConfigSimple().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLTestUseConfigSimple {
    return new TLTestUseConfigSimple().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLTestUseConfigSimple {
    return new TLTestUseConfigSimple().fromJsonString(jsonString, options);
  }

  static equals(a: TLTestUseConfigSimple | PlainMessage<TLTestUseConfigSimple> | undefined, b: TLTestUseConfigSimple | PlainMessage<TLTestUseConfigSimple> | undefined): boolean {
    return proto3.util.equals(TLTestUseConfigSimple, a, b);
  }
}

