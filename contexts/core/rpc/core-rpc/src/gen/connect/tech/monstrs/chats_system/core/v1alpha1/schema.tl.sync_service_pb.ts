// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file tech/monstrs/chats_system/core/v1alpha1/schema.tl.sync_service.proto (package tech.monstrs.chats_system.core.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { DoubleValue, Int32Value, Int64Value, Message, proto3, protoInt64, StringValue } from "@bufbuild/protobuf";
import { TLConstructor } from "./schema.tl.crc32_pb.js";
import { AccountDaysTTL, AccountPasswordInputSettings, AutoDownloadSettings, AutoSaveSettings, BaseTheme, BizDataRaw, BotCommand, BotCommandScope, BotMenuButton, ChannelAdminLogEventsFilter, ChannelMessagesFilter, ChannelParticipantsFilter, ChatAdminRights, ChatBannedRights, ChatReactions, CodeSettings, ContactStatus, DataJSON, DialogFilter, DialogFilterSuggested, DialogPeer, Document, EmailVerification, EmailVerifyPurpose, EmojiLanguage, EmojiStatus, FileHash, GlobalPrivacySettings, InlineBotSwitchPM, InlineBotWebView, InputAppEvent, InputBotApp, InputBotInlineMessageID, InputBotInlineResult, InputChannel, InputChatlist, InputChatPhoto, InputCheckPasswordSRP, InputClientProxy, InputContact, InputDialogPeer, InputDocument, InputEncryptedChat, InputEncryptedFile, InputFile, InputFileLocation, InputFolderPeer, InputGeoPoint, InputGroupCall, InputInvoice, InputMedia, InputMessage, InputNotifyPeer, InputPaymentCredentials, InputPeer, InputPeerNotifySettings, InputPhoneCall, InputPhoto, InputPrivacyKey, InputPrivacyRule, InputReplyTo, InputSecureValue, InputSingleMedia, InputStickeredMedia, InputStickerSet, InputStickerSetItem, InputStorePaymentPurpose, InputTheme, InputThemeSettings, InputUser, InputWallPaper, InputWebFileLocation, JSONValue, LangPackLanguage, LangPackString, MaskCoords, MediaArea, MessageEntity, MessageRange, MessagesFilter, MessagesSearchCounter, PaymentRequestedInfo, Peer, PhoneCallDiscardReason, PhoneCallProtocol, PredefinedUser, Reaction, ReadParticipantDate, ReceivedNotifyMessage, ReplyMarkup, ReportReason, SavedContact, SecureCredentialsEncrypted, SecureValue, SecureValueError, SecureValueHash, SecureValueType, SendMessageAction, ShippingOption, StickerSetCovered, TextWithEntities, TopPeerCategory, User, VideoSize, WallPaper, WallPaperSettings } from "./schema.tl.sync_pb.js";
import { Bool } from "./schema.tl.core_types_pb.js";

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLInvokeAfterMsg
 */
export class TLInvokeAfterMsg extends Message<TLInvokeAfterMsg> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 msg_id = 3;
   */
  msgId = protoInt64.zero;

  /**
   * @generated from field: bytes query = 4;
   */
  query = new Uint8Array(0);

  constructor(data?: PartialMessage<TLInvokeAfterMsg>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLInvokeAfterMsg";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "msg_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "query", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLInvokeAfterMsg {
    return new TLInvokeAfterMsg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLInvokeAfterMsg {
    return new TLInvokeAfterMsg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLInvokeAfterMsg {
    return new TLInvokeAfterMsg().fromJsonString(jsonString, options);
  }

  static equals(a: TLInvokeAfterMsg | PlainMessage<TLInvokeAfterMsg> | undefined, b: TLInvokeAfterMsg | PlainMessage<TLInvokeAfterMsg> | undefined): boolean {
    return proto3.util.equals(TLInvokeAfterMsg, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLInvokeAfterMsgs
 */
export class TLInvokeAfterMsgs extends Message<TLInvokeAfterMsgs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 msg_ids = 3;
   */
  msgIds = protoInt64.zero;

  /**
   * @generated from field: bytes query = 4;
   */
  query = new Uint8Array(0);

  constructor(data?: PartialMessage<TLInvokeAfterMsgs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLInvokeAfterMsgs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "msg_ids", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "query", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLInvokeAfterMsgs {
    return new TLInvokeAfterMsgs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLInvokeAfterMsgs {
    return new TLInvokeAfterMsgs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLInvokeAfterMsgs {
    return new TLInvokeAfterMsgs().fromJsonString(jsonString, options);
  }

  static equals(a: TLInvokeAfterMsgs | PlainMessage<TLInvokeAfterMsgs> | undefined, b: TLInvokeAfterMsgs | PlainMessage<TLInvokeAfterMsgs> | undefined): boolean {
    return proto3.util.equals(TLInvokeAfterMsgs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLInitConnection
 */
export class TLInitConnection extends Message<TLInitConnection> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 api_id = 3;
   */
  apiId = 0;

  /**
   * @generated from field: string device_model = 4;
   */
  deviceModel = "";

  /**
   * @generated from field: string system_version = 5;
   */
  systemVersion = "";

  /**
   * @generated from field: string app_version = 6;
   */
  appVersion = "";

  /**
   * @generated from field: string system_lang_code = 7;
   */
  systemLangCode = "";

  /**
   * @generated from field: string lang_pack = 8;
   */
  langPack = "";

  /**
   * @generated from field: string lang_code = 9;
   */
  langCode = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputClientProxy proxy = 10;
   */
  proxy: InputClientProxy[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.JSONValue params = 11;
   */
  params: JSONValue[] = [];

  /**
   * @generated from field: bytes query = 12;
   */
  query = new Uint8Array(0);

  constructor(data?: PartialMessage<TLInitConnection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLInitConnection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "api_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "device_model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "system_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "app_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "system_lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "lang_pack", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "proxy", kind: "message", T: InputClientProxy, repeated: true },
    { no: 11, name: "params", kind: "message", T: JSONValue, repeated: true },
    { no: 12, name: "query", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLInitConnection {
    return new TLInitConnection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLInitConnection {
    return new TLInitConnection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLInitConnection {
    return new TLInitConnection().fromJsonString(jsonString, options);
  }

  static equals(a: TLInitConnection | PlainMessage<TLInitConnection> | undefined, b: TLInitConnection | PlainMessage<TLInitConnection> | undefined): boolean {
    return proto3.util.equals(TLInitConnection, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLInvokeWithLayer
 */
export class TLInvokeWithLayer extends Message<TLInvokeWithLayer> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 layer = 3;
   */
  layer = 0;

  /**
   * @generated from field: bytes query = 4;
   */
  query = new Uint8Array(0);

  constructor(data?: PartialMessage<TLInvokeWithLayer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLInvokeWithLayer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "layer", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "query", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLInvokeWithLayer {
    return new TLInvokeWithLayer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLInvokeWithLayer {
    return new TLInvokeWithLayer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLInvokeWithLayer {
    return new TLInvokeWithLayer().fromJsonString(jsonString, options);
  }

  static equals(a: TLInvokeWithLayer | PlainMessage<TLInvokeWithLayer> | undefined, b: TLInvokeWithLayer | PlainMessage<TLInvokeWithLayer> | undefined): boolean {
    return proto3.util.equals(TLInvokeWithLayer, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLInvokeWithoutUpdates
 */
export class TLInvokeWithoutUpdates extends Message<TLInvokeWithoutUpdates> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bytes query = 3;
   */
  query = new Uint8Array(0);

  constructor(data?: PartialMessage<TLInvokeWithoutUpdates>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLInvokeWithoutUpdates";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "query", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLInvokeWithoutUpdates {
    return new TLInvokeWithoutUpdates().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLInvokeWithoutUpdates {
    return new TLInvokeWithoutUpdates().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLInvokeWithoutUpdates {
    return new TLInvokeWithoutUpdates().fromJsonString(jsonString, options);
  }

  static equals(a: TLInvokeWithoutUpdates | PlainMessage<TLInvokeWithoutUpdates> | undefined, b: TLInvokeWithoutUpdates | PlainMessage<TLInvokeWithoutUpdates> | undefined): boolean {
    return proto3.util.equals(TLInvokeWithoutUpdates, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLInvokeWithMessagesRange
 */
export class TLInvokeWithMessagesRange extends Message<TLInvokeWithMessagesRange> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessageRange range = 3;
   */
  range: MessageRange[] = [];

  /**
   * @generated from field: bytes query = 4;
   */
  query = new Uint8Array(0);

  constructor(data?: PartialMessage<TLInvokeWithMessagesRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLInvokeWithMessagesRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "range", kind: "message", T: MessageRange, repeated: true },
    { no: 4, name: "query", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLInvokeWithMessagesRange {
    return new TLInvokeWithMessagesRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLInvokeWithMessagesRange {
    return new TLInvokeWithMessagesRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLInvokeWithMessagesRange {
    return new TLInvokeWithMessagesRange().fromJsonString(jsonString, options);
  }

  static equals(a: TLInvokeWithMessagesRange | PlainMessage<TLInvokeWithMessagesRange> | undefined, b: TLInvokeWithMessagesRange | PlainMessage<TLInvokeWithMessagesRange> | undefined): boolean {
    return proto3.util.equals(TLInvokeWithMessagesRange, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLInvokeWithTakeout
 */
export class TLInvokeWithTakeout extends Message<TLInvokeWithTakeout> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 takeout_id = 3;
   */
  takeoutId = protoInt64.zero;

  /**
   * @generated from field: bytes query = 4;
   */
  query = new Uint8Array(0);

  constructor(data?: PartialMessage<TLInvokeWithTakeout>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLInvokeWithTakeout";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "takeout_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "query", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLInvokeWithTakeout {
    return new TLInvokeWithTakeout().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLInvokeWithTakeout {
    return new TLInvokeWithTakeout().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLInvokeWithTakeout {
    return new TLInvokeWithTakeout().fromJsonString(jsonString, options);
  }

  static equals(a: TLInvokeWithTakeout | PlainMessage<TLInvokeWithTakeout> | undefined, b: TLInvokeWithTakeout | PlainMessage<TLInvokeWithTakeout> | undefined): boolean {
    return proto3.util.equals(TLInvokeWithTakeout, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthSendCode
 */
export class TLAuthSendCode extends Message<TLAuthSendCode> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_number = 3;
   */
  phoneNumber = "";

  /**
   * @generated from field: int32 api_id = 4;
   */
  apiId = 0;

  /**
   * @generated from field: string api_hash = 5;
   */
  apiHash = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.CodeSettings settings = 6;
   */
  settings: CodeSettings[] = [];

  constructor(data?: PartialMessage<TLAuthSendCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthSendCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "api_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "api_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "settings", kind: "message", T: CodeSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthSendCode {
    return new TLAuthSendCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthSendCode {
    return new TLAuthSendCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthSendCode {
    return new TLAuthSendCode().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthSendCode | PlainMessage<TLAuthSendCode> | undefined, b: TLAuthSendCode | PlainMessage<TLAuthSendCode> | undefined): boolean {
    return proto3.util.equals(TLAuthSendCode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthSignUp
 */
export class TLAuthSignUp extends Message<TLAuthSignUp> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_number = 3;
   */
  phoneNumber = "";

  /**
   * @generated from field: string phone_code_hash = 4;
   */
  phoneCodeHash = "";

  /**
   * @generated from field: string first_name = 5;
   */
  firstName = "";

  /**
   * @generated from field: string last_name = 6;
   */
  lastName = "";

  constructor(data?: PartialMessage<TLAuthSignUp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthSignUp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthSignUp {
    return new TLAuthSignUp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthSignUp {
    return new TLAuthSignUp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthSignUp {
    return new TLAuthSignUp().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthSignUp | PlainMessage<TLAuthSignUp> | undefined, b: TLAuthSignUp | PlainMessage<TLAuthSignUp> | undefined): boolean {
    return proto3.util.equals(TLAuthSignUp, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthSignIn
 */
export class TLAuthSignIn extends Message<TLAuthSignIn> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_number = 3;
   */
  phoneNumber = "";

  /**
   * @generated from field: string phone_code_hash = 4;
   */
  phoneCodeHash = "";

  /**
   * @generated from field: repeated google.protobuf.StringValue phone_code_FLAGSTRING = 5;
   */
  phoneCodeFLAGSTRING: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.EmailVerification email_verification = 6;
   */
  emailVerification: EmailVerification[] = [];

  /**
   * @generated from field: string phone_code_STRING = 7;
   */
  phoneCodeSTRING = "";

  constructor(data?: PartialMessage<TLAuthSignIn>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthSignIn";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "phone_code_FLAGSTRING", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "email_verification", kind: "message", T: EmailVerification, repeated: true },
    { no: 7, name: "phone_code_STRING", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthSignIn {
    return new TLAuthSignIn().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthSignIn {
    return new TLAuthSignIn().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthSignIn {
    return new TLAuthSignIn().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthSignIn | PlainMessage<TLAuthSignIn> | undefined, b: TLAuthSignIn | PlainMessage<TLAuthSignIn> | undefined): boolean {
    return proto3.util.equals(TLAuthSignIn, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthLogOut
 */
export class TLAuthLogOut extends Message<TLAuthLogOut> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAuthLogOut>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthLogOut";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthLogOut {
    return new TLAuthLogOut().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthLogOut {
    return new TLAuthLogOut().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthLogOut {
    return new TLAuthLogOut().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthLogOut | PlainMessage<TLAuthLogOut> | undefined, b: TLAuthLogOut | PlainMessage<TLAuthLogOut> | undefined): boolean {
    return proto3.util.equals(TLAuthLogOut, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthResetAuthorizations
 */
export class TLAuthResetAuthorizations extends Message<TLAuthResetAuthorizations> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAuthResetAuthorizations>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthResetAuthorizations";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthResetAuthorizations {
    return new TLAuthResetAuthorizations().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthResetAuthorizations {
    return new TLAuthResetAuthorizations().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthResetAuthorizations {
    return new TLAuthResetAuthorizations().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthResetAuthorizations | PlainMessage<TLAuthResetAuthorizations> | undefined, b: TLAuthResetAuthorizations | PlainMessage<TLAuthResetAuthorizations> | undefined): boolean {
    return proto3.util.equals(TLAuthResetAuthorizations, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthExportAuthorization
 */
export class TLAuthExportAuthorization extends Message<TLAuthExportAuthorization> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 dc_id = 3;
   */
  dcId = 0;

  constructor(data?: PartialMessage<TLAuthExportAuthorization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthExportAuthorization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "dc_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthExportAuthorization {
    return new TLAuthExportAuthorization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthExportAuthorization {
    return new TLAuthExportAuthorization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthExportAuthorization {
    return new TLAuthExportAuthorization().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthExportAuthorization | PlainMessage<TLAuthExportAuthorization> | undefined, b: TLAuthExportAuthorization | PlainMessage<TLAuthExportAuthorization> | undefined): boolean {
    return proto3.util.equals(TLAuthExportAuthorization, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthImportAuthorization
 */
export class TLAuthImportAuthorization extends Message<TLAuthImportAuthorization> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 id = 3;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: bytes bytes = 4;
   */
  bytes = new Uint8Array(0);

  constructor(data?: PartialMessage<TLAuthImportAuthorization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthImportAuthorization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthImportAuthorization {
    return new TLAuthImportAuthorization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthImportAuthorization {
    return new TLAuthImportAuthorization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthImportAuthorization {
    return new TLAuthImportAuthorization().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthImportAuthorization | PlainMessage<TLAuthImportAuthorization> | undefined, b: TLAuthImportAuthorization | PlainMessage<TLAuthImportAuthorization> | undefined): boolean {
    return proto3.util.equals(TLAuthImportAuthorization, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthBindTempAuthKey
 */
export class TLAuthBindTempAuthKey extends Message<TLAuthBindTempAuthKey> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 perm_auth_key_id = 3;
   */
  permAuthKeyId = protoInt64.zero;

  /**
   * @generated from field: int64 nonce = 4;
   */
  nonce = protoInt64.zero;

  /**
   * @generated from field: int32 expires_at = 5;
   */
  expiresAt = 0;

  /**
   * @generated from field: bytes encrypted_message = 6;
   */
  encryptedMessage = new Uint8Array(0);

  constructor(data?: PartialMessage<TLAuthBindTempAuthKey>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthBindTempAuthKey";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "perm_auth_key_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "nonce", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "expires_at", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "encrypted_message", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthBindTempAuthKey {
    return new TLAuthBindTempAuthKey().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthBindTempAuthKey {
    return new TLAuthBindTempAuthKey().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthBindTempAuthKey {
    return new TLAuthBindTempAuthKey().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthBindTempAuthKey | PlainMessage<TLAuthBindTempAuthKey> | undefined, b: TLAuthBindTempAuthKey | PlainMessage<TLAuthBindTempAuthKey> | undefined): boolean {
    return proto3.util.equals(TLAuthBindTempAuthKey, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthImportBotAuthorization
 */
export class TLAuthImportBotAuthorization extends Message<TLAuthImportBotAuthorization> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 flags = 3;
   */
  flags = 0;

  /**
   * @generated from field: int32 api_id = 4;
   */
  apiId = 0;

  /**
   * @generated from field: string api_hash = 5;
   */
  apiHash = "";

  /**
   * @generated from field: string bot_auth_token = 6;
   */
  botAuthToken = "";

  constructor(data?: PartialMessage<TLAuthImportBotAuthorization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthImportBotAuthorization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "flags", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "api_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "api_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "bot_auth_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthImportBotAuthorization {
    return new TLAuthImportBotAuthorization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthImportBotAuthorization {
    return new TLAuthImportBotAuthorization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthImportBotAuthorization {
    return new TLAuthImportBotAuthorization().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthImportBotAuthorization | PlainMessage<TLAuthImportBotAuthorization> | undefined, b: TLAuthImportBotAuthorization | PlainMessage<TLAuthImportBotAuthorization> | undefined): boolean {
    return proto3.util.equals(TLAuthImportBotAuthorization, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthCheckPassword
 */
export class TLAuthCheckPassword extends Message<TLAuthCheckPassword> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputCheckPasswordSRP password = 3;
   */
  password: InputCheckPasswordSRP[] = [];

  constructor(data?: PartialMessage<TLAuthCheckPassword>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthCheckPassword";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "password", kind: "message", T: InputCheckPasswordSRP, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthCheckPassword {
    return new TLAuthCheckPassword().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthCheckPassword {
    return new TLAuthCheckPassword().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthCheckPassword {
    return new TLAuthCheckPassword().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthCheckPassword | PlainMessage<TLAuthCheckPassword> | undefined, b: TLAuthCheckPassword | PlainMessage<TLAuthCheckPassword> | undefined): boolean {
    return proto3.util.equals(TLAuthCheckPassword, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthRequestPasswordRecovery
 */
export class TLAuthRequestPasswordRecovery extends Message<TLAuthRequestPasswordRecovery> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAuthRequestPasswordRecovery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthRequestPasswordRecovery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthRequestPasswordRecovery {
    return new TLAuthRequestPasswordRecovery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthRequestPasswordRecovery {
    return new TLAuthRequestPasswordRecovery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthRequestPasswordRecovery {
    return new TLAuthRequestPasswordRecovery().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthRequestPasswordRecovery | PlainMessage<TLAuthRequestPasswordRecovery> | undefined, b: TLAuthRequestPasswordRecovery | PlainMessage<TLAuthRequestPasswordRecovery> | undefined): boolean {
    return proto3.util.equals(TLAuthRequestPasswordRecovery, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthRecoverPassword
 */
export class TLAuthRecoverPassword extends Message<TLAuthRecoverPassword> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string code = 3;
   */
  code = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.AccountPasswordInputSettings new_settings = 4;
   */
  newSettings: AccountPasswordInputSettings[] = [];

  constructor(data?: PartialMessage<TLAuthRecoverPassword>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthRecoverPassword";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "new_settings", kind: "message", T: AccountPasswordInputSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthRecoverPassword {
    return new TLAuthRecoverPassword().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthRecoverPassword {
    return new TLAuthRecoverPassword().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthRecoverPassword {
    return new TLAuthRecoverPassword().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthRecoverPassword | PlainMessage<TLAuthRecoverPassword> | undefined, b: TLAuthRecoverPassword | PlainMessage<TLAuthRecoverPassword> | undefined): boolean {
    return proto3.util.equals(TLAuthRecoverPassword, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthResendCode
 */
export class TLAuthResendCode extends Message<TLAuthResendCode> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_number = 3;
   */
  phoneNumber = "";

  /**
   * @generated from field: string phone_code_hash = 4;
   */
  phoneCodeHash = "";

  constructor(data?: PartialMessage<TLAuthResendCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthResendCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthResendCode {
    return new TLAuthResendCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthResendCode {
    return new TLAuthResendCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthResendCode {
    return new TLAuthResendCode().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthResendCode | PlainMessage<TLAuthResendCode> | undefined, b: TLAuthResendCode | PlainMessage<TLAuthResendCode> | undefined): boolean {
    return proto3.util.equals(TLAuthResendCode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthCancelCode
 */
export class TLAuthCancelCode extends Message<TLAuthCancelCode> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_number = 3;
   */
  phoneNumber = "";

  /**
   * @generated from field: string phone_code_hash = 4;
   */
  phoneCodeHash = "";

  constructor(data?: PartialMessage<TLAuthCancelCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthCancelCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthCancelCode {
    return new TLAuthCancelCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthCancelCode {
    return new TLAuthCancelCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthCancelCode {
    return new TLAuthCancelCode().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthCancelCode | PlainMessage<TLAuthCancelCode> | undefined, b: TLAuthCancelCode | PlainMessage<TLAuthCancelCode> | undefined): boolean {
    return proto3.util.equals(TLAuthCancelCode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthDropTempAuthKeys
 */
export class TLAuthDropTempAuthKeys extends Message<TLAuthDropTempAuthKeys> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 except_auth_keys = 3;
   */
  exceptAuthKeys = protoInt64.zero;

  constructor(data?: PartialMessage<TLAuthDropTempAuthKeys>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthDropTempAuthKeys";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "except_auth_keys", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthDropTempAuthKeys {
    return new TLAuthDropTempAuthKeys().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthDropTempAuthKeys {
    return new TLAuthDropTempAuthKeys().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthDropTempAuthKeys {
    return new TLAuthDropTempAuthKeys().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthDropTempAuthKeys | PlainMessage<TLAuthDropTempAuthKeys> | undefined, b: TLAuthDropTempAuthKeys | PlainMessage<TLAuthDropTempAuthKeys> | undefined): boolean {
    return proto3.util.equals(TLAuthDropTempAuthKeys, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthExportLoginToken
 */
export class TLAuthExportLoginToken extends Message<TLAuthExportLoginToken> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 api_id = 3;
   */
  apiId = 0;

  /**
   * @generated from field: string api_hash = 4;
   */
  apiHash = "";

  /**
   * @generated from field: int64 except_ids = 5;
   */
  exceptIds = protoInt64.zero;

  constructor(data?: PartialMessage<TLAuthExportLoginToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthExportLoginToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "api_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "api_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "except_ids", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthExportLoginToken {
    return new TLAuthExportLoginToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthExportLoginToken {
    return new TLAuthExportLoginToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthExportLoginToken {
    return new TLAuthExportLoginToken().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthExportLoginToken | PlainMessage<TLAuthExportLoginToken> | undefined, b: TLAuthExportLoginToken | PlainMessage<TLAuthExportLoginToken> | undefined): boolean {
    return proto3.util.equals(TLAuthExportLoginToken, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthImportLoginToken
 */
export class TLAuthImportLoginToken extends Message<TLAuthImportLoginToken> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bytes token = 3;
   */
  token = new Uint8Array(0);

  constructor(data?: PartialMessage<TLAuthImportLoginToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthImportLoginToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "token", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthImportLoginToken {
    return new TLAuthImportLoginToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthImportLoginToken {
    return new TLAuthImportLoginToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthImportLoginToken {
    return new TLAuthImportLoginToken().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthImportLoginToken | PlainMessage<TLAuthImportLoginToken> | undefined, b: TLAuthImportLoginToken | PlainMessage<TLAuthImportLoginToken> | undefined): boolean {
    return proto3.util.equals(TLAuthImportLoginToken, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthAcceptLoginToken
 */
export class TLAuthAcceptLoginToken extends Message<TLAuthAcceptLoginToken> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bytes token = 3;
   */
  token = new Uint8Array(0);

  constructor(data?: PartialMessage<TLAuthAcceptLoginToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthAcceptLoginToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "token", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthAcceptLoginToken {
    return new TLAuthAcceptLoginToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthAcceptLoginToken {
    return new TLAuthAcceptLoginToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthAcceptLoginToken {
    return new TLAuthAcceptLoginToken().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthAcceptLoginToken | PlainMessage<TLAuthAcceptLoginToken> | undefined, b: TLAuthAcceptLoginToken | PlainMessage<TLAuthAcceptLoginToken> | undefined): boolean {
    return proto3.util.equals(TLAuthAcceptLoginToken, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthCheckRecoveryPassword
 */
export class TLAuthCheckRecoveryPassword extends Message<TLAuthCheckRecoveryPassword> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string code = 3;
   */
  code = "";

  constructor(data?: PartialMessage<TLAuthCheckRecoveryPassword>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthCheckRecoveryPassword";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthCheckRecoveryPassword {
    return new TLAuthCheckRecoveryPassword().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthCheckRecoveryPassword {
    return new TLAuthCheckRecoveryPassword().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthCheckRecoveryPassword {
    return new TLAuthCheckRecoveryPassword().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthCheckRecoveryPassword | PlainMessage<TLAuthCheckRecoveryPassword> | undefined, b: TLAuthCheckRecoveryPassword | PlainMessage<TLAuthCheckRecoveryPassword> | undefined): boolean {
    return proto3.util.equals(TLAuthCheckRecoveryPassword, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthImportWebTokenAuthorization
 */
export class TLAuthImportWebTokenAuthorization extends Message<TLAuthImportWebTokenAuthorization> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 api_id = 3;
   */
  apiId = 0;

  /**
   * @generated from field: string api_hash = 4;
   */
  apiHash = "";

  /**
   * @generated from field: string web_auth_token = 5;
   */
  webAuthToken = "";

  constructor(data?: PartialMessage<TLAuthImportWebTokenAuthorization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthImportWebTokenAuthorization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "api_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "api_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "web_auth_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthImportWebTokenAuthorization {
    return new TLAuthImportWebTokenAuthorization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthImportWebTokenAuthorization {
    return new TLAuthImportWebTokenAuthorization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthImportWebTokenAuthorization {
    return new TLAuthImportWebTokenAuthorization().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthImportWebTokenAuthorization | PlainMessage<TLAuthImportWebTokenAuthorization> | undefined, b: TLAuthImportWebTokenAuthorization | PlainMessage<TLAuthImportWebTokenAuthorization> | undefined): boolean {
    return proto3.util.equals(TLAuthImportWebTokenAuthorization, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthRequestFirebaseSms
 */
export class TLAuthRequestFirebaseSms extends Message<TLAuthRequestFirebaseSms> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_number = 3;
   */
  phoneNumber = "";

  /**
   * @generated from field: string phone_code_hash = 4;
   */
  phoneCodeHash = "";

  /**
   * @generated from field: repeated google.protobuf.StringValue safety_net_token = 5;
   */
  safetyNetToken: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue ios_push_secret = 6;
   */
  iosPushSecret: StringValue[] = [];

  constructor(data?: PartialMessage<TLAuthRequestFirebaseSms>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthRequestFirebaseSms";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "safety_net_token", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "ios_push_secret", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthRequestFirebaseSms {
    return new TLAuthRequestFirebaseSms().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthRequestFirebaseSms {
    return new TLAuthRequestFirebaseSms().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthRequestFirebaseSms {
    return new TLAuthRequestFirebaseSms().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthRequestFirebaseSms | PlainMessage<TLAuthRequestFirebaseSms> | undefined, b: TLAuthRequestFirebaseSms | PlainMessage<TLAuthRequestFirebaseSms> | undefined): boolean {
    return proto3.util.equals(TLAuthRequestFirebaseSms, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthResetLoginEmail
 */
export class TLAuthResetLoginEmail extends Message<TLAuthResetLoginEmail> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_number = 3;
   */
  phoneNumber = "";

  /**
   * @generated from field: string phone_code_hash = 4;
   */
  phoneCodeHash = "";

  constructor(data?: PartialMessage<TLAuthResetLoginEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthResetLoginEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthResetLoginEmail {
    return new TLAuthResetLoginEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthResetLoginEmail {
    return new TLAuthResetLoginEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthResetLoginEmail {
    return new TLAuthResetLoginEmail().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthResetLoginEmail | PlainMessage<TLAuthResetLoginEmail> | undefined, b: TLAuthResetLoginEmail | PlainMessage<TLAuthResetLoginEmail> | undefined): boolean {
    return proto3.util.equals(TLAuthResetLoginEmail, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountRegisterDevice
 */
export class TLAccountRegisterDevice extends Message<TLAccountRegisterDevice> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool no_muted = 3;
   */
  noMuted = false;

  /**
   * @generated from field: int32 token_type = 4;
   */
  tokenType = 0;

  /**
   * @generated from field: string token = 5;
   */
  token = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool app_sandbox = 6;
   */
  appSandbox: Bool[] = [];

  /**
   * @generated from field: bytes secret = 7;
   */
  secret = new Uint8Array(0);

  /**
   * @generated from field: int64 other_uids = 8;
   */
  otherUids = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountRegisterDevice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountRegisterDevice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "no_muted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "token_type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "app_sandbox", kind: "message", T: Bool, repeated: true },
    { no: 7, name: "secret", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 8, name: "other_uids", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountRegisterDevice {
    return new TLAccountRegisterDevice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountRegisterDevice {
    return new TLAccountRegisterDevice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountRegisterDevice {
    return new TLAccountRegisterDevice().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountRegisterDevice | PlainMessage<TLAccountRegisterDevice> | undefined, b: TLAccountRegisterDevice | PlainMessage<TLAccountRegisterDevice> | undefined): boolean {
    return proto3.util.equals(TLAccountRegisterDevice, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUnregisterDevice
 */
export class TLAccountUnregisterDevice extends Message<TLAccountUnregisterDevice> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 token_type = 3;
   */
  tokenType = 0;

  /**
   * @generated from field: string token = 4;
   */
  token = "";

  /**
   * @generated from field: int64 other_uids = 5;
   */
  otherUids = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountUnregisterDevice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUnregisterDevice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "token_type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "other_uids", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUnregisterDevice {
    return new TLAccountUnregisterDevice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUnregisterDevice {
    return new TLAccountUnregisterDevice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUnregisterDevice {
    return new TLAccountUnregisterDevice().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUnregisterDevice | PlainMessage<TLAccountUnregisterDevice> | undefined, b: TLAccountUnregisterDevice | PlainMessage<TLAccountUnregisterDevice> | undefined): boolean {
    return proto3.util.equals(TLAccountUnregisterDevice, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateNotifySettings
 */
export class TLAccountUpdateNotifySettings extends Message<TLAccountUpdateNotifySettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputNotifyPeer peer = 3;
   */
  peer: InputNotifyPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeerNotifySettings settings = 4;
   */
  settings: InputPeerNotifySettings[] = [];

  constructor(data?: PartialMessage<TLAccountUpdateNotifySettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateNotifySettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputNotifyPeer, repeated: true },
    { no: 4, name: "settings", kind: "message", T: InputPeerNotifySettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUpdateNotifySettings {
    return new TLAccountUpdateNotifySettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUpdateNotifySettings {
    return new TLAccountUpdateNotifySettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUpdateNotifySettings {
    return new TLAccountUpdateNotifySettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUpdateNotifySettings | PlainMessage<TLAccountUpdateNotifySettings> | undefined, b: TLAccountUpdateNotifySettings | PlainMessage<TLAccountUpdateNotifySettings> | undefined): boolean {
    return proto3.util.equals(TLAccountUpdateNotifySettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetNotifySettings
 */
export class TLAccountGetNotifySettings extends Message<TLAccountGetNotifySettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputNotifyPeer peer = 3;
   */
  peer: InputNotifyPeer[] = [];

  constructor(data?: PartialMessage<TLAccountGetNotifySettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetNotifySettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputNotifyPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetNotifySettings {
    return new TLAccountGetNotifySettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetNotifySettings {
    return new TLAccountGetNotifySettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetNotifySettings {
    return new TLAccountGetNotifySettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetNotifySettings | PlainMessage<TLAccountGetNotifySettings> | undefined, b: TLAccountGetNotifySettings | PlainMessage<TLAccountGetNotifySettings> | undefined): boolean {
    return proto3.util.equals(TLAccountGetNotifySettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountResetNotifySettings
 */
export class TLAccountResetNotifySettings extends Message<TLAccountResetNotifySettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountResetNotifySettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountResetNotifySettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountResetNotifySettings {
    return new TLAccountResetNotifySettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountResetNotifySettings {
    return new TLAccountResetNotifySettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountResetNotifySettings {
    return new TLAccountResetNotifySettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountResetNotifySettings | PlainMessage<TLAccountResetNotifySettings> | undefined, b: TLAccountResetNotifySettings | PlainMessage<TLAccountResetNotifySettings> | undefined): boolean {
    return proto3.util.equals(TLAccountResetNotifySettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateProfile
 */
export class TLAccountUpdateProfile extends Message<TLAccountUpdateProfile> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated google.protobuf.StringValue first_name = 3;
   */
  firstName: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue last_name = 4;
   */
  lastName: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue about = 5;
   */
  about: StringValue[] = [];

  constructor(data?: PartialMessage<TLAccountUpdateProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "first_name", kind: "message", T: StringValue, repeated: true },
    { no: 4, name: "last_name", kind: "message", T: StringValue, repeated: true },
    { no: 5, name: "about", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUpdateProfile {
    return new TLAccountUpdateProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUpdateProfile {
    return new TLAccountUpdateProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUpdateProfile {
    return new TLAccountUpdateProfile().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUpdateProfile | PlainMessage<TLAccountUpdateProfile> | undefined, b: TLAccountUpdateProfile | PlainMessage<TLAccountUpdateProfile> | undefined): boolean {
    return proto3.util.equals(TLAccountUpdateProfile, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateStatus
 */
export class TLAccountUpdateStatus extends Message<TLAccountUpdateStatus> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool offline = 3;
   */
  offline: Bool[] = [];

  constructor(data?: PartialMessage<TLAccountUpdateStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "offline", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUpdateStatus {
    return new TLAccountUpdateStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUpdateStatus {
    return new TLAccountUpdateStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUpdateStatus {
    return new TLAccountUpdateStatus().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUpdateStatus | PlainMessage<TLAccountUpdateStatus> | undefined, b: TLAccountUpdateStatus | PlainMessage<TLAccountUpdateStatus> | undefined): boolean {
    return proto3.util.equals(TLAccountUpdateStatus, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetWallPapers
 */
export class TLAccountGetWallPapers extends Message<TLAccountGetWallPapers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountGetWallPapers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetWallPapers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetWallPapers {
    return new TLAccountGetWallPapers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetWallPapers {
    return new TLAccountGetWallPapers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetWallPapers {
    return new TLAccountGetWallPapers().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetWallPapers | PlainMessage<TLAccountGetWallPapers> | undefined, b: TLAccountGetWallPapers | PlainMessage<TLAccountGetWallPapers> | undefined): boolean {
    return proto3.util.equals(TLAccountGetWallPapers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountReportPeer
 */
export class TLAccountReportPeer extends Message<TLAccountReportPeer> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ReportReason reason = 4;
   */
  reason: ReportReason[] = [];

  /**
   * @generated from field: string message = 5;
   */
  message = "";

  constructor(data?: PartialMessage<TLAccountReportPeer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountReportPeer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "reason", kind: "message", T: ReportReason, repeated: true },
    { no: 5, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountReportPeer {
    return new TLAccountReportPeer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountReportPeer {
    return new TLAccountReportPeer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountReportPeer {
    return new TLAccountReportPeer().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountReportPeer | PlainMessage<TLAccountReportPeer> | undefined, b: TLAccountReportPeer | PlainMessage<TLAccountReportPeer> | undefined): boolean {
    return proto3.util.equals(TLAccountReportPeer, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountCheckUsername
 */
export class TLAccountCheckUsername extends Message<TLAccountCheckUsername> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string username = 3;
   */
  username = "";

  constructor(data?: PartialMessage<TLAccountCheckUsername>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountCheckUsername";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountCheckUsername {
    return new TLAccountCheckUsername().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountCheckUsername {
    return new TLAccountCheckUsername().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountCheckUsername {
    return new TLAccountCheckUsername().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountCheckUsername | PlainMessage<TLAccountCheckUsername> | undefined, b: TLAccountCheckUsername | PlainMessage<TLAccountCheckUsername> | undefined): boolean {
    return proto3.util.equals(TLAccountCheckUsername, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateUsername
 */
export class TLAccountUpdateUsername extends Message<TLAccountUpdateUsername> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string username = 3;
   */
  username = "";

  constructor(data?: PartialMessage<TLAccountUpdateUsername>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateUsername";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUpdateUsername {
    return new TLAccountUpdateUsername().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUpdateUsername {
    return new TLAccountUpdateUsername().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUpdateUsername {
    return new TLAccountUpdateUsername().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUpdateUsername | PlainMessage<TLAccountUpdateUsername> | undefined, b: TLAccountUpdateUsername | PlainMessage<TLAccountUpdateUsername> | undefined): boolean {
    return proto3.util.equals(TLAccountUpdateUsername, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetPrivacy
 */
export class TLAccountGetPrivacy extends Message<TLAccountGetPrivacy> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPrivacyKey key = 3;
   */
  key: InputPrivacyKey[] = [];

  constructor(data?: PartialMessage<TLAccountGetPrivacy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetPrivacy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "key", kind: "message", T: InputPrivacyKey, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetPrivacy {
    return new TLAccountGetPrivacy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetPrivacy {
    return new TLAccountGetPrivacy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetPrivacy {
    return new TLAccountGetPrivacy().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetPrivacy | PlainMessage<TLAccountGetPrivacy> | undefined, b: TLAccountGetPrivacy | PlainMessage<TLAccountGetPrivacy> | undefined): boolean {
    return proto3.util.equals(TLAccountGetPrivacy, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSetPrivacy
 */
export class TLAccountSetPrivacy extends Message<TLAccountSetPrivacy> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPrivacyKey key = 3;
   */
  key: InputPrivacyKey[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPrivacyRule rules = 4;
   */
  rules: InputPrivacyRule[] = [];

  constructor(data?: PartialMessage<TLAccountSetPrivacy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSetPrivacy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "key", kind: "message", T: InputPrivacyKey, repeated: true },
    { no: 4, name: "rules", kind: "message", T: InputPrivacyRule, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSetPrivacy {
    return new TLAccountSetPrivacy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSetPrivacy {
    return new TLAccountSetPrivacy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSetPrivacy {
    return new TLAccountSetPrivacy().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSetPrivacy | PlainMessage<TLAccountSetPrivacy> | undefined, b: TLAccountSetPrivacy | PlainMessage<TLAccountSetPrivacy> | undefined): boolean {
    return proto3.util.equals(TLAccountSetPrivacy, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountDeleteAccount
 */
export class TLAccountDeleteAccount extends Message<TLAccountDeleteAccount> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string reason = 3;
   */
  reason = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputCheckPasswordSRP password = 4;
   */
  password: InputCheckPasswordSRP[] = [];

  constructor(data?: PartialMessage<TLAccountDeleteAccount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountDeleteAccount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "reason", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "password", kind: "message", T: InputCheckPasswordSRP, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountDeleteAccount {
    return new TLAccountDeleteAccount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountDeleteAccount {
    return new TLAccountDeleteAccount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountDeleteAccount {
    return new TLAccountDeleteAccount().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountDeleteAccount | PlainMessage<TLAccountDeleteAccount> | undefined, b: TLAccountDeleteAccount | PlainMessage<TLAccountDeleteAccount> | undefined): boolean {
    return proto3.util.equals(TLAccountDeleteAccount, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAccountTTL
 */
export class TLAccountGetAccountTTL extends Message<TLAccountGetAccountTTL> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountGetAccountTTL>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAccountTTL";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetAccountTTL {
    return new TLAccountGetAccountTTL().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetAccountTTL {
    return new TLAccountGetAccountTTL().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetAccountTTL {
    return new TLAccountGetAccountTTL().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetAccountTTL | PlainMessage<TLAccountGetAccountTTL> | undefined, b: TLAccountGetAccountTTL | PlainMessage<TLAccountGetAccountTTL> | undefined): boolean {
    return proto3.util.equals(TLAccountGetAccountTTL, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSetAccountTTL
 */
export class TLAccountSetAccountTTL extends Message<TLAccountSetAccountTTL> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.AccountDaysTTL ttl = 3;
   */
  ttl: AccountDaysTTL[] = [];

  constructor(data?: PartialMessage<TLAccountSetAccountTTL>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSetAccountTTL";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "ttl", kind: "message", T: AccountDaysTTL, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSetAccountTTL {
    return new TLAccountSetAccountTTL().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSetAccountTTL {
    return new TLAccountSetAccountTTL().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSetAccountTTL {
    return new TLAccountSetAccountTTL().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSetAccountTTL | PlainMessage<TLAccountSetAccountTTL> | undefined, b: TLAccountSetAccountTTL | PlainMessage<TLAccountSetAccountTTL> | undefined): boolean {
    return proto3.util.equals(TLAccountSetAccountTTL, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSendChangePhoneCode
 */
export class TLAccountSendChangePhoneCode extends Message<TLAccountSendChangePhoneCode> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_number = 3;
   */
  phoneNumber = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.CodeSettings settings = 4;
   */
  settings: CodeSettings[] = [];

  constructor(data?: PartialMessage<TLAccountSendChangePhoneCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSendChangePhoneCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "settings", kind: "message", T: CodeSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSendChangePhoneCode {
    return new TLAccountSendChangePhoneCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSendChangePhoneCode {
    return new TLAccountSendChangePhoneCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSendChangePhoneCode {
    return new TLAccountSendChangePhoneCode().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSendChangePhoneCode | PlainMessage<TLAccountSendChangePhoneCode> | undefined, b: TLAccountSendChangePhoneCode | PlainMessage<TLAccountSendChangePhoneCode> | undefined): boolean {
    return proto3.util.equals(TLAccountSendChangePhoneCode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountChangePhone
 */
export class TLAccountChangePhone extends Message<TLAccountChangePhone> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_number = 3;
   */
  phoneNumber = "";

  /**
   * @generated from field: string phone_code_hash = 4;
   */
  phoneCodeHash = "";

  /**
   * @generated from field: string phone_code = 5;
   */
  phoneCode = "";

  constructor(data?: PartialMessage<TLAccountChangePhone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountChangePhone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "phone_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountChangePhone {
    return new TLAccountChangePhone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountChangePhone {
    return new TLAccountChangePhone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountChangePhone {
    return new TLAccountChangePhone().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountChangePhone | PlainMessage<TLAccountChangePhone> | undefined, b: TLAccountChangePhone | PlainMessage<TLAccountChangePhone> | undefined): boolean {
    return proto3.util.equals(TLAccountChangePhone, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateDeviceLocked
 */
export class TLAccountUpdateDeviceLocked extends Message<TLAccountUpdateDeviceLocked> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 period = 3;
   */
  period = 0;

  constructor(data?: PartialMessage<TLAccountUpdateDeviceLocked>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateDeviceLocked";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "period", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUpdateDeviceLocked {
    return new TLAccountUpdateDeviceLocked().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUpdateDeviceLocked {
    return new TLAccountUpdateDeviceLocked().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUpdateDeviceLocked {
    return new TLAccountUpdateDeviceLocked().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUpdateDeviceLocked | PlainMessage<TLAccountUpdateDeviceLocked> | undefined, b: TLAccountUpdateDeviceLocked | PlainMessage<TLAccountUpdateDeviceLocked> | undefined): boolean {
    return proto3.util.equals(TLAccountUpdateDeviceLocked, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAuthorizations
 */
export class TLAccountGetAuthorizations extends Message<TLAccountGetAuthorizations> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountGetAuthorizations>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAuthorizations";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetAuthorizations {
    return new TLAccountGetAuthorizations().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetAuthorizations {
    return new TLAccountGetAuthorizations().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetAuthorizations {
    return new TLAccountGetAuthorizations().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetAuthorizations | PlainMessage<TLAccountGetAuthorizations> | undefined, b: TLAccountGetAuthorizations | PlainMessage<TLAccountGetAuthorizations> | undefined): boolean {
    return proto3.util.equals(TLAccountGetAuthorizations, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountResetAuthorization
 */
export class TLAccountResetAuthorization extends Message<TLAccountResetAuthorization> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountResetAuthorization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountResetAuthorization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountResetAuthorization {
    return new TLAccountResetAuthorization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountResetAuthorization {
    return new TLAccountResetAuthorization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountResetAuthorization {
    return new TLAccountResetAuthorization().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountResetAuthorization | PlainMessage<TLAccountResetAuthorization> | undefined, b: TLAccountResetAuthorization | PlainMessage<TLAccountResetAuthorization> | undefined): boolean {
    return proto3.util.equals(TLAccountResetAuthorization, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetPassword
 */
export class TLAccountGetPassword extends Message<TLAccountGetPassword> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountGetPassword>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetPassword";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetPassword {
    return new TLAccountGetPassword().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetPassword {
    return new TLAccountGetPassword().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetPassword {
    return new TLAccountGetPassword().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetPassword | PlainMessage<TLAccountGetPassword> | undefined, b: TLAccountGetPassword | PlainMessage<TLAccountGetPassword> | undefined): boolean {
    return proto3.util.equals(TLAccountGetPassword, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetPasswordSettings
 */
export class TLAccountGetPasswordSettings extends Message<TLAccountGetPasswordSettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputCheckPasswordSRP password = 3;
   */
  password: InputCheckPasswordSRP[] = [];

  constructor(data?: PartialMessage<TLAccountGetPasswordSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetPasswordSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "password", kind: "message", T: InputCheckPasswordSRP, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetPasswordSettings {
    return new TLAccountGetPasswordSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetPasswordSettings {
    return new TLAccountGetPasswordSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetPasswordSettings {
    return new TLAccountGetPasswordSettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetPasswordSettings | PlainMessage<TLAccountGetPasswordSettings> | undefined, b: TLAccountGetPasswordSettings | PlainMessage<TLAccountGetPasswordSettings> | undefined): boolean {
    return proto3.util.equals(TLAccountGetPasswordSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdatePasswordSettings
 */
export class TLAccountUpdatePasswordSettings extends Message<TLAccountUpdatePasswordSettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputCheckPasswordSRP password = 3;
   */
  password: InputCheckPasswordSRP[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.AccountPasswordInputSettings new_settings = 4;
   */
  newSettings: AccountPasswordInputSettings[] = [];

  constructor(data?: PartialMessage<TLAccountUpdatePasswordSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdatePasswordSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "password", kind: "message", T: InputCheckPasswordSRP, repeated: true },
    { no: 4, name: "new_settings", kind: "message", T: AccountPasswordInputSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUpdatePasswordSettings {
    return new TLAccountUpdatePasswordSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUpdatePasswordSettings {
    return new TLAccountUpdatePasswordSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUpdatePasswordSettings {
    return new TLAccountUpdatePasswordSettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUpdatePasswordSettings | PlainMessage<TLAccountUpdatePasswordSettings> | undefined, b: TLAccountUpdatePasswordSettings | PlainMessage<TLAccountUpdatePasswordSettings> | undefined): boolean {
    return proto3.util.equals(TLAccountUpdatePasswordSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSendConfirmPhoneCode
 */
export class TLAccountSendConfirmPhoneCode extends Message<TLAccountSendConfirmPhoneCode> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string hash = 3;
   */
  hash = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.CodeSettings settings = 4;
   */
  settings: CodeSettings[] = [];

  constructor(data?: PartialMessage<TLAccountSendConfirmPhoneCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSendConfirmPhoneCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "settings", kind: "message", T: CodeSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSendConfirmPhoneCode {
    return new TLAccountSendConfirmPhoneCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSendConfirmPhoneCode {
    return new TLAccountSendConfirmPhoneCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSendConfirmPhoneCode {
    return new TLAccountSendConfirmPhoneCode().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSendConfirmPhoneCode | PlainMessage<TLAccountSendConfirmPhoneCode> | undefined, b: TLAccountSendConfirmPhoneCode | PlainMessage<TLAccountSendConfirmPhoneCode> | undefined): boolean {
    return proto3.util.equals(TLAccountSendConfirmPhoneCode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountConfirmPhone
 */
export class TLAccountConfirmPhone extends Message<TLAccountConfirmPhone> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_code_hash = 3;
   */
  phoneCodeHash = "";

  /**
   * @generated from field: string phone_code = 4;
   */
  phoneCode = "";

  constructor(data?: PartialMessage<TLAccountConfirmPhone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountConfirmPhone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "phone_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountConfirmPhone {
    return new TLAccountConfirmPhone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountConfirmPhone {
    return new TLAccountConfirmPhone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountConfirmPhone {
    return new TLAccountConfirmPhone().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountConfirmPhone | PlainMessage<TLAccountConfirmPhone> | undefined, b: TLAccountConfirmPhone | PlainMessage<TLAccountConfirmPhone> | undefined): boolean {
    return proto3.util.equals(TLAccountConfirmPhone, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetTmpPassword
 */
export class TLAccountGetTmpPassword extends Message<TLAccountGetTmpPassword> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputCheckPasswordSRP password = 3;
   */
  password: InputCheckPasswordSRP[] = [];

  /**
   * @generated from field: int32 period = 4;
   */
  period = 0;

  constructor(data?: PartialMessage<TLAccountGetTmpPassword>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetTmpPassword";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "password", kind: "message", T: InputCheckPasswordSRP, repeated: true },
    { no: 4, name: "period", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetTmpPassword {
    return new TLAccountGetTmpPassword().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetTmpPassword {
    return new TLAccountGetTmpPassword().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetTmpPassword {
    return new TLAccountGetTmpPassword().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetTmpPassword | PlainMessage<TLAccountGetTmpPassword> | undefined, b: TLAccountGetTmpPassword | PlainMessage<TLAccountGetTmpPassword> | undefined): boolean {
    return proto3.util.equals(TLAccountGetTmpPassword, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetWebAuthorizations
 */
export class TLAccountGetWebAuthorizations extends Message<TLAccountGetWebAuthorizations> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountGetWebAuthorizations>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetWebAuthorizations";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetWebAuthorizations {
    return new TLAccountGetWebAuthorizations().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetWebAuthorizations {
    return new TLAccountGetWebAuthorizations().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetWebAuthorizations {
    return new TLAccountGetWebAuthorizations().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetWebAuthorizations | PlainMessage<TLAccountGetWebAuthorizations> | undefined, b: TLAccountGetWebAuthorizations | PlainMessage<TLAccountGetWebAuthorizations> | undefined): boolean {
    return proto3.util.equals(TLAccountGetWebAuthorizations, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountResetWebAuthorization
 */
export class TLAccountResetWebAuthorization extends Message<TLAccountResetWebAuthorization> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountResetWebAuthorization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountResetWebAuthorization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountResetWebAuthorization {
    return new TLAccountResetWebAuthorization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountResetWebAuthorization {
    return new TLAccountResetWebAuthorization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountResetWebAuthorization {
    return new TLAccountResetWebAuthorization().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountResetWebAuthorization | PlainMessage<TLAccountResetWebAuthorization> | undefined, b: TLAccountResetWebAuthorization | PlainMessage<TLAccountResetWebAuthorization> | undefined): boolean {
    return proto3.util.equals(TLAccountResetWebAuthorization, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountResetWebAuthorizations
 */
export class TLAccountResetWebAuthorizations extends Message<TLAccountResetWebAuthorizations> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountResetWebAuthorizations>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountResetWebAuthorizations";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountResetWebAuthorizations {
    return new TLAccountResetWebAuthorizations().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountResetWebAuthorizations {
    return new TLAccountResetWebAuthorizations().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountResetWebAuthorizations {
    return new TLAccountResetWebAuthorizations().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountResetWebAuthorizations | PlainMessage<TLAccountResetWebAuthorizations> | undefined, b: TLAccountResetWebAuthorizations | PlainMessage<TLAccountResetWebAuthorizations> | undefined): boolean {
    return proto3.util.equals(TLAccountResetWebAuthorizations, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAllSecureValues
 */
export class TLAccountGetAllSecureValues extends Message<TLAccountGetAllSecureValues> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountGetAllSecureValues>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAllSecureValues";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetAllSecureValues {
    return new TLAccountGetAllSecureValues().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetAllSecureValues {
    return new TLAccountGetAllSecureValues().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetAllSecureValues {
    return new TLAccountGetAllSecureValues().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetAllSecureValues | PlainMessage<TLAccountGetAllSecureValues> | undefined, b: TLAccountGetAllSecureValues | PlainMessage<TLAccountGetAllSecureValues> | undefined): boolean {
    return proto3.util.equals(TLAccountGetAllSecureValues, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetSecureValue
 */
export class TLAccountGetSecureValue extends Message<TLAccountGetSecureValue> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.SecureValueType types = 3;
   */
  types: SecureValueType[] = [];

  constructor(data?: PartialMessage<TLAccountGetSecureValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetSecureValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "types", kind: "message", T: SecureValueType, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetSecureValue {
    return new TLAccountGetSecureValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetSecureValue {
    return new TLAccountGetSecureValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetSecureValue {
    return new TLAccountGetSecureValue().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetSecureValue | PlainMessage<TLAccountGetSecureValue> | undefined, b: TLAccountGetSecureValue | PlainMessage<TLAccountGetSecureValue> | undefined): boolean {
    return proto3.util.equals(TLAccountGetSecureValue, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveSecureValue
 */
export class TLAccountSaveSecureValue extends Message<TLAccountSaveSecureValue> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputSecureValue value = 3;
   */
  value: InputSecureValue[] = [];

  /**
   * @generated from field: int64 secure_secret_id = 4;
   */
  secureSecretId = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountSaveSecureValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveSecureValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "value", kind: "message", T: InputSecureValue, repeated: true },
    { no: 4, name: "secure_secret_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSaveSecureValue {
    return new TLAccountSaveSecureValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSaveSecureValue {
    return new TLAccountSaveSecureValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSaveSecureValue {
    return new TLAccountSaveSecureValue().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSaveSecureValue | PlainMessage<TLAccountSaveSecureValue> | undefined, b: TLAccountSaveSecureValue | PlainMessage<TLAccountSaveSecureValue> | undefined): boolean {
    return proto3.util.equals(TLAccountSaveSecureValue, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountDeleteSecureValue
 */
export class TLAccountDeleteSecureValue extends Message<TLAccountDeleteSecureValue> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.SecureValueType types = 3;
   */
  types: SecureValueType[] = [];

  constructor(data?: PartialMessage<TLAccountDeleteSecureValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountDeleteSecureValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "types", kind: "message", T: SecureValueType, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountDeleteSecureValue {
    return new TLAccountDeleteSecureValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountDeleteSecureValue {
    return new TLAccountDeleteSecureValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountDeleteSecureValue {
    return new TLAccountDeleteSecureValue().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountDeleteSecureValue | PlainMessage<TLAccountDeleteSecureValue> | undefined, b: TLAccountDeleteSecureValue | PlainMessage<TLAccountDeleteSecureValue> | undefined): boolean {
    return proto3.util.equals(TLAccountDeleteSecureValue, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAuthorizationForm
 */
export class TLAccountGetAuthorizationForm extends Message<TLAccountGetAuthorizationForm> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 bot_id = 3;
   */
  botId = protoInt64.zero;

  /**
   * @generated from field: string scope = 4;
   */
  scope = "";

  /**
   * @generated from field: string public_key = 5;
   */
  publicKey = "";

  constructor(data?: PartialMessage<TLAccountGetAuthorizationForm>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAuthorizationForm";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "public_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetAuthorizationForm {
    return new TLAccountGetAuthorizationForm().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetAuthorizationForm {
    return new TLAccountGetAuthorizationForm().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetAuthorizationForm {
    return new TLAccountGetAuthorizationForm().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetAuthorizationForm | PlainMessage<TLAccountGetAuthorizationForm> | undefined, b: TLAccountGetAuthorizationForm | PlainMessage<TLAccountGetAuthorizationForm> | undefined): boolean {
    return proto3.util.equals(TLAccountGetAuthorizationForm, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountAcceptAuthorization
 */
export class TLAccountAcceptAuthorization extends Message<TLAccountAcceptAuthorization> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 bot_id = 3;
   */
  botId = protoInt64.zero;

  /**
   * @generated from field: string scope = 4;
   */
  scope = "";

  /**
   * @generated from field: string public_key = 5;
   */
  publicKey = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.SecureValueHash value_hashes = 6;
   */
  valueHashes: SecureValueHash[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.SecureCredentialsEncrypted credentials = 7;
   */
  credentials: SecureCredentialsEncrypted[] = [];

  constructor(data?: PartialMessage<TLAccountAcceptAuthorization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountAcceptAuthorization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "public_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "value_hashes", kind: "message", T: SecureValueHash, repeated: true },
    { no: 7, name: "credentials", kind: "message", T: SecureCredentialsEncrypted, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountAcceptAuthorization {
    return new TLAccountAcceptAuthorization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountAcceptAuthorization {
    return new TLAccountAcceptAuthorization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountAcceptAuthorization {
    return new TLAccountAcceptAuthorization().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountAcceptAuthorization | PlainMessage<TLAccountAcceptAuthorization> | undefined, b: TLAccountAcceptAuthorization | PlainMessage<TLAccountAcceptAuthorization> | undefined): boolean {
    return proto3.util.equals(TLAccountAcceptAuthorization, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSendVerifyPhoneCode
 */
export class TLAccountSendVerifyPhoneCode extends Message<TLAccountSendVerifyPhoneCode> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_number = 3;
   */
  phoneNumber = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.CodeSettings settings = 4;
   */
  settings: CodeSettings[] = [];

  constructor(data?: PartialMessage<TLAccountSendVerifyPhoneCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSendVerifyPhoneCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "settings", kind: "message", T: CodeSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSendVerifyPhoneCode {
    return new TLAccountSendVerifyPhoneCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSendVerifyPhoneCode {
    return new TLAccountSendVerifyPhoneCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSendVerifyPhoneCode {
    return new TLAccountSendVerifyPhoneCode().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSendVerifyPhoneCode | PlainMessage<TLAccountSendVerifyPhoneCode> | undefined, b: TLAccountSendVerifyPhoneCode | PlainMessage<TLAccountSendVerifyPhoneCode> | undefined): boolean {
    return proto3.util.equals(TLAccountSendVerifyPhoneCode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountVerifyPhone
 */
export class TLAccountVerifyPhone extends Message<TLAccountVerifyPhone> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone_number = 3;
   */
  phoneNumber = "";

  /**
   * @generated from field: string phone_code_hash = 4;
   */
  phoneCodeHash = "";

  /**
   * @generated from field: string phone_code = 5;
   */
  phoneCode = "";

  constructor(data?: PartialMessage<TLAccountVerifyPhone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountVerifyPhone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "phone_code_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "phone_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountVerifyPhone {
    return new TLAccountVerifyPhone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountVerifyPhone {
    return new TLAccountVerifyPhone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountVerifyPhone {
    return new TLAccountVerifyPhone().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountVerifyPhone | PlainMessage<TLAccountVerifyPhone> | undefined, b: TLAccountVerifyPhone | PlainMessage<TLAccountVerifyPhone> | undefined): boolean {
    return proto3.util.equals(TLAccountVerifyPhone, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSendVerifyEmailCode
 */
export class TLAccountSendVerifyEmailCode extends Message<TLAccountSendVerifyEmailCode> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.EmailVerifyPurpose purpose = 3;
   */
  purpose: EmailVerifyPurpose[] = [];

  /**
   * @generated from field: string email = 4;
   */
  email = "";

  constructor(data?: PartialMessage<TLAccountSendVerifyEmailCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSendVerifyEmailCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "purpose", kind: "message", T: EmailVerifyPurpose, repeated: true },
    { no: 4, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSendVerifyEmailCode {
    return new TLAccountSendVerifyEmailCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSendVerifyEmailCode {
    return new TLAccountSendVerifyEmailCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSendVerifyEmailCode {
    return new TLAccountSendVerifyEmailCode().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSendVerifyEmailCode | PlainMessage<TLAccountSendVerifyEmailCode> | undefined, b: TLAccountSendVerifyEmailCode | PlainMessage<TLAccountSendVerifyEmailCode> | undefined): boolean {
    return proto3.util.equals(TLAccountSendVerifyEmailCode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountVerifyEmail32DA4CF
 */
export class TLAccountVerifyEmail32DA4CF extends Message<TLAccountVerifyEmail32DA4CF> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.EmailVerifyPurpose purpose = 3;
   */
  purpose: EmailVerifyPurpose[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.EmailVerification verification = 4;
   */
  verification: EmailVerification[] = [];

  constructor(data?: PartialMessage<TLAccountVerifyEmail32DA4CF>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountVerifyEmail32DA4CF";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "purpose", kind: "message", T: EmailVerifyPurpose, repeated: true },
    { no: 4, name: "verification", kind: "message", T: EmailVerification, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountVerifyEmail32DA4CF {
    return new TLAccountVerifyEmail32DA4CF().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountVerifyEmail32DA4CF {
    return new TLAccountVerifyEmail32DA4CF().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountVerifyEmail32DA4CF {
    return new TLAccountVerifyEmail32DA4CF().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountVerifyEmail32DA4CF | PlainMessage<TLAccountVerifyEmail32DA4CF> | undefined, b: TLAccountVerifyEmail32DA4CF | PlainMessage<TLAccountVerifyEmail32DA4CF> | undefined): boolean {
    return proto3.util.equals(TLAccountVerifyEmail32DA4CF, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountInitTakeoutSession
 */
export class TLAccountInitTakeoutSession extends Message<TLAccountInitTakeoutSession> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool contacts = 3;
   */
  contacts = false;

  /**
   * @generated from field: bool message_users = 4;
   */
  messageUsers = false;

  /**
   * @generated from field: bool message_chats = 5;
   */
  messageChats = false;

  /**
   * @generated from field: bool message_megagroups = 6;
   */
  messageMegagroups = false;

  /**
   * @generated from field: bool message_channels = 7;
   */
  messageChannels = false;

  /**
   * @generated from field: bool files = 8;
   */
  files = false;

  /**
   * @generated from field: repeated google.protobuf.Int64Value file_max_size_FLAGINT64 = 9;
   */
  fileMaxSizeFLAGINT64: Int64Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value file_max_size_FLAGINT32 = 10;
   */
  fileMaxSizeFLAGINT32: Int32Value[] = [];

  constructor(data?: PartialMessage<TLAccountInitTakeoutSession>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountInitTakeoutSession";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "contacts", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "message_chats", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "message_megagroups", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "message_channels", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "files", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "file_max_size_FLAGINT64", kind: "message", T: Int64Value, repeated: true },
    { no: 10, name: "file_max_size_FLAGINT32", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountInitTakeoutSession {
    return new TLAccountInitTakeoutSession().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountInitTakeoutSession {
    return new TLAccountInitTakeoutSession().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountInitTakeoutSession {
    return new TLAccountInitTakeoutSession().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountInitTakeoutSession | PlainMessage<TLAccountInitTakeoutSession> | undefined, b: TLAccountInitTakeoutSession | PlainMessage<TLAccountInitTakeoutSession> | undefined): boolean {
    return proto3.util.equals(TLAccountInitTakeoutSession, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountFinishTakeoutSession
 */
export class TLAccountFinishTakeoutSession extends Message<TLAccountFinishTakeoutSession> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  constructor(data?: PartialMessage<TLAccountFinishTakeoutSession>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountFinishTakeoutSession";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountFinishTakeoutSession {
    return new TLAccountFinishTakeoutSession().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountFinishTakeoutSession {
    return new TLAccountFinishTakeoutSession().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountFinishTakeoutSession {
    return new TLAccountFinishTakeoutSession().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountFinishTakeoutSession | PlainMessage<TLAccountFinishTakeoutSession> | undefined, b: TLAccountFinishTakeoutSession | PlainMessage<TLAccountFinishTakeoutSession> | undefined): boolean {
    return proto3.util.equals(TLAccountFinishTakeoutSession, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountConfirmPasswordEmail
 */
export class TLAccountConfirmPasswordEmail extends Message<TLAccountConfirmPasswordEmail> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string code = 3;
   */
  code = "";

  constructor(data?: PartialMessage<TLAccountConfirmPasswordEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountConfirmPasswordEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountConfirmPasswordEmail {
    return new TLAccountConfirmPasswordEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountConfirmPasswordEmail {
    return new TLAccountConfirmPasswordEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountConfirmPasswordEmail {
    return new TLAccountConfirmPasswordEmail().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountConfirmPasswordEmail | PlainMessage<TLAccountConfirmPasswordEmail> | undefined, b: TLAccountConfirmPasswordEmail | PlainMessage<TLAccountConfirmPasswordEmail> | undefined): boolean {
    return proto3.util.equals(TLAccountConfirmPasswordEmail, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountResendPasswordEmail
 */
export class TLAccountResendPasswordEmail extends Message<TLAccountResendPasswordEmail> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountResendPasswordEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountResendPasswordEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountResendPasswordEmail {
    return new TLAccountResendPasswordEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountResendPasswordEmail {
    return new TLAccountResendPasswordEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountResendPasswordEmail {
    return new TLAccountResendPasswordEmail().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountResendPasswordEmail | PlainMessage<TLAccountResendPasswordEmail> | undefined, b: TLAccountResendPasswordEmail | PlainMessage<TLAccountResendPasswordEmail> | undefined): boolean {
    return proto3.util.equals(TLAccountResendPasswordEmail, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountCancelPasswordEmail
 */
export class TLAccountCancelPasswordEmail extends Message<TLAccountCancelPasswordEmail> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountCancelPasswordEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountCancelPasswordEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountCancelPasswordEmail {
    return new TLAccountCancelPasswordEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountCancelPasswordEmail {
    return new TLAccountCancelPasswordEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountCancelPasswordEmail {
    return new TLAccountCancelPasswordEmail().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountCancelPasswordEmail | PlainMessage<TLAccountCancelPasswordEmail> | undefined, b: TLAccountCancelPasswordEmail | PlainMessage<TLAccountCancelPasswordEmail> | undefined): boolean {
    return proto3.util.equals(TLAccountCancelPasswordEmail, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetContactSignUpNotification
 */
export class TLAccountGetContactSignUpNotification extends Message<TLAccountGetContactSignUpNotification> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountGetContactSignUpNotification>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetContactSignUpNotification";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetContactSignUpNotification {
    return new TLAccountGetContactSignUpNotification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetContactSignUpNotification {
    return new TLAccountGetContactSignUpNotification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetContactSignUpNotification {
    return new TLAccountGetContactSignUpNotification().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetContactSignUpNotification | PlainMessage<TLAccountGetContactSignUpNotification> | undefined, b: TLAccountGetContactSignUpNotification | PlainMessage<TLAccountGetContactSignUpNotification> | undefined): boolean {
    return proto3.util.equals(TLAccountGetContactSignUpNotification, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSetContactSignUpNotification
 */
export class TLAccountSetContactSignUpNotification extends Message<TLAccountSetContactSignUpNotification> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool silent = 3;
   */
  silent: Bool[] = [];

  constructor(data?: PartialMessage<TLAccountSetContactSignUpNotification>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSetContactSignUpNotification";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "silent", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSetContactSignUpNotification {
    return new TLAccountSetContactSignUpNotification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSetContactSignUpNotification {
    return new TLAccountSetContactSignUpNotification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSetContactSignUpNotification {
    return new TLAccountSetContactSignUpNotification().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSetContactSignUpNotification | PlainMessage<TLAccountSetContactSignUpNotification> | undefined, b: TLAccountSetContactSignUpNotification | PlainMessage<TLAccountSetContactSignUpNotification> | undefined): boolean {
    return proto3.util.equals(TLAccountSetContactSignUpNotification, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetNotifyExceptions
 */
export class TLAccountGetNotifyExceptions extends Message<TLAccountGetNotifyExceptions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool compare_sound = 3;
   */
  compareSound = false;

  /**
   * @generated from field: bool compare_stories = 4;
   */
  compareStories = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputNotifyPeer peer = 5;
   */
  peer: InputNotifyPeer[] = [];

  constructor(data?: PartialMessage<TLAccountGetNotifyExceptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetNotifyExceptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "compare_sound", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "compare_stories", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "peer", kind: "message", T: InputNotifyPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetNotifyExceptions {
    return new TLAccountGetNotifyExceptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetNotifyExceptions {
    return new TLAccountGetNotifyExceptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetNotifyExceptions {
    return new TLAccountGetNotifyExceptions().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetNotifyExceptions | PlainMessage<TLAccountGetNotifyExceptions> | undefined, b: TLAccountGetNotifyExceptions | PlainMessage<TLAccountGetNotifyExceptions> | undefined): boolean {
    return proto3.util.equals(TLAccountGetNotifyExceptions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetWallPaper
 */
export class TLAccountGetWallPaper extends Message<TLAccountGetWallPaper> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputWallPaper wallpaper = 3;
   */
  wallpaper: InputWallPaper[] = [];

  constructor(data?: PartialMessage<TLAccountGetWallPaper>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetWallPaper";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "wallpaper", kind: "message", T: InputWallPaper, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetWallPaper {
    return new TLAccountGetWallPaper().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetWallPaper {
    return new TLAccountGetWallPaper().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetWallPaper {
    return new TLAccountGetWallPaper().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetWallPaper | PlainMessage<TLAccountGetWallPaper> | undefined, b: TLAccountGetWallPaper | PlainMessage<TLAccountGetWallPaper> | undefined): boolean {
    return proto3.util.equals(TLAccountGetWallPaper, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUploadWallPaper
 */
export class TLAccountUploadWallPaper extends Message<TLAccountUploadWallPaper> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool for_chat = 3;
   */
  forChat = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFile file = 4;
   */
  file: InputFile[] = [];

  /**
   * @generated from field: string mime_type = 5;
   */
  mimeType = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.WallPaperSettings settings = 6;
   */
  settings: WallPaperSettings[] = [];

  constructor(data?: PartialMessage<TLAccountUploadWallPaper>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUploadWallPaper";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "for_chat", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "file", kind: "message", T: InputFile, repeated: true },
    { no: 5, name: "mime_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "settings", kind: "message", T: WallPaperSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUploadWallPaper {
    return new TLAccountUploadWallPaper().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUploadWallPaper {
    return new TLAccountUploadWallPaper().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUploadWallPaper {
    return new TLAccountUploadWallPaper().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUploadWallPaper | PlainMessage<TLAccountUploadWallPaper> | undefined, b: TLAccountUploadWallPaper | PlainMessage<TLAccountUploadWallPaper> | undefined): boolean {
    return proto3.util.equals(TLAccountUploadWallPaper, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveWallPaper
 */
export class TLAccountSaveWallPaper extends Message<TLAccountSaveWallPaper> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputWallPaper wallpaper = 3;
   */
  wallpaper: InputWallPaper[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool unsave = 4;
   */
  unsave: Bool[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.WallPaperSettings settings = 5;
   */
  settings: WallPaperSettings[] = [];

  constructor(data?: PartialMessage<TLAccountSaveWallPaper>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveWallPaper";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "wallpaper", kind: "message", T: InputWallPaper, repeated: true },
    { no: 4, name: "unsave", kind: "message", T: Bool, repeated: true },
    { no: 5, name: "settings", kind: "message", T: WallPaperSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSaveWallPaper {
    return new TLAccountSaveWallPaper().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSaveWallPaper {
    return new TLAccountSaveWallPaper().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSaveWallPaper {
    return new TLAccountSaveWallPaper().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSaveWallPaper | PlainMessage<TLAccountSaveWallPaper> | undefined, b: TLAccountSaveWallPaper | PlainMessage<TLAccountSaveWallPaper> | undefined): boolean {
    return proto3.util.equals(TLAccountSaveWallPaper, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountInstallWallPaper
 */
export class TLAccountInstallWallPaper extends Message<TLAccountInstallWallPaper> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputWallPaper wallpaper = 3;
   */
  wallpaper: InputWallPaper[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.WallPaperSettings settings = 4;
   */
  settings: WallPaperSettings[] = [];

  constructor(data?: PartialMessage<TLAccountInstallWallPaper>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountInstallWallPaper";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "wallpaper", kind: "message", T: InputWallPaper, repeated: true },
    { no: 4, name: "settings", kind: "message", T: WallPaperSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountInstallWallPaper {
    return new TLAccountInstallWallPaper().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountInstallWallPaper {
    return new TLAccountInstallWallPaper().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountInstallWallPaper {
    return new TLAccountInstallWallPaper().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountInstallWallPaper | PlainMessage<TLAccountInstallWallPaper> | undefined, b: TLAccountInstallWallPaper | PlainMessage<TLAccountInstallWallPaper> | undefined): boolean {
    return proto3.util.equals(TLAccountInstallWallPaper, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountResetWallPapers
 */
export class TLAccountResetWallPapers extends Message<TLAccountResetWallPapers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountResetWallPapers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountResetWallPapers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountResetWallPapers {
    return new TLAccountResetWallPapers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountResetWallPapers {
    return new TLAccountResetWallPapers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountResetWallPapers {
    return new TLAccountResetWallPapers().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountResetWallPapers | PlainMessage<TLAccountResetWallPapers> | undefined, b: TLAccountResetWallPapers | PlainMessage<TLAccountResetWallPapers> | undefined): boolean {
    return proto3.util.equals(TLAccountResetWallPapers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAutoDownloadSettings
 */
export class TLAccountGetAutoDownloadSettings extends Message<TLAccountGetAutoDownloadSettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountGetAutoDownloadSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAutoDownloadSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetAutoDownloadSettings {
    return new TLAccountGetAutoDownloadSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetAutoDownloadSettings {
    return new TLAccountGetAutoDownloadSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetAutoDownloadSettings {
    return new TLAccountGetAutoDownloadSettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetAutoDownloadSettings | PlainMessage<TLAccountGetAutoDownloadSettings> | undefined, b: TLAccountGetAutoDownloadSettings | PlainMessage<TLAccountGetAutoDownloadSettings> | undefined): boolean {
    return proto3.util.equals(TLAccountGetAutoDownloadSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveAutoDownloadSettings
 */
export class TLAccountSaveAutoDownloadSettings extends Message<TLAccountSaveAutoDownloadSettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool low = 3;
   */
  low = false;

  /**
   * @generated from field: bool high = 4;
   */
  high = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.AutoDownloadSettings settings = 5;
   */
  settings: AutoDownloadSettings[] = [];

  constructor(data?: PartialMessage<TLAccountSaveAutoDownloadSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveAutoDownloadSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "low", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "high", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "settings", kind: "message", T: AutoDownloadSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSaveAutoDownloadSettings {
    return new TLAccountSaveAutoDownloadSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSaveAutoDownloadSettings {
    return new TLAccountSaveAutoDownloadSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSaveAutoDownloadSettings {
    return new TLAccountSaveAutoDownloadSettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSaveAutoDownloadSettings | PlainMessage<TLAccountSaveAutoDownloadSettings> | undefined, b: TLAccountSaveAutoDownloadSettings | PlainMessage<TLAccountSaveAutoDownloadSettings> | undefined): boolean {
    return proto3.util.equals(TLAccountSaveAutoDownloadSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUploadTheme
 */
export class TLAccountUploadTheme extends Message<TLAccountUploadTheme> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFile file = 3;
   */
  file: InputFile[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFile thumb = 4;
   */
  thumb: InputFile[] = [];

  /**
   * @generated from field: string file_name = 5;
   */
  fileName = "";

  /**
   * @generated from field: string mime_type = 6;
   */
  mimeType = "";

  constructor(data?: PartialMessage<TLAccountUploadTheme>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUploadTheme";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "file", kind: "message", T: InputFile, repeated: true },
    { no: 4, name: "thumb", kind: "message", T: InputFile, repeated: true },
    { no: 5, name: "file_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "mime_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUploadTheme {
    return new TLAccountUploadTheme().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUploadTheme {
    return new TLAccountUploadTheme().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUploadTheme {
    return new TLAccountUploadTheme().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUploadTheme | PlainMessage<TLAccountUploadTheme> | undefined, b: TLAccountUploadTheme | PlainMessage<TLAccountUploadTheme> | undefined): boolean {
    return proto3.util.equals(TLAccountUploadTheme, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountCreateTheme
 */
export class TLAccountCreateTheme extends Message<TLAccountCreateTheme> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  /**
   * @generated from field: string title = 4;
   */
  title = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDocument document = 5;
   */
  document: InputDocument[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputThemeSettings settings = 6;
   */
  settings: InputThemeSettings[] = [];

  constructor(data?: PartialMessage<TLAccountCreateTheme>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountCreateTheme";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "document", kind: "message", T: InputDocument, repeated: true },
    { no: 6, name: "settings", kind: "message", T: InputThemeSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountCreateTheme {
    return new TLAccountCreateTheme().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountCreateTheme {
    return new TLAccountCreateTheme().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountCreateTheme {
    return new TLAccountCreateTheme().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountCreateTheme | PlainMessage<TLAccountCreateTheme> | undefined, b: TLAccountCreateTheme | PlainMessage<TLAccountCreateTheme> | undefined): boolean {
    return proto3.util.equals(TLAccountCreateTheme, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateTheme
 */
export class TLAccountUpdateTheme extends Message<TLAccountUpdateTheme> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string format = 3;
   */
  format = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputTheme theme = 4;
   */
  theme: InputTheme[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue slug = 5;
   */
  slug: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue title = 6;
   */
  title: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDocument document = 7;
   */
  document: InputDocument[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputThemeSettings settings = 8;
   */
  settings: InputThemeSettings[] = [];

  constructor(data?: PartialMessage<TLAccountUpdateTheme>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateTheme";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "format", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "theme", kind: "message", T: InputTheme, repeated: true },
    { no: 5, name: "slug", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "title", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "document", kind: "message", T: InputDocument, repeated: true },
    { no: 8, name: "settings", kind: "message", T: InputThemeSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUpdateTheme {
    return new TLAccountUpdateTheme().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUpdateTheme {
    return new TLAccountUpdateTheme().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUpdateTheme {
    return new TLAccountUpdateTheme().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUpdateTheme | PlainMessage<TLAccountUpdateTheme> | undefined, b: TLAccountUpdateTheme | PlainMessage<TLAccountUpdateTheme> | undefined): boolean {
    return proto3.util.equals(TLAccountUpdateTheme, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveTheme
 */
export class TLAccountSaveTheme extends Message<TLAccountSaveTheme> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputTheme theme = 3;
   */
  theme: InputTheme[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool unsave = 4;
   */
  unsave: Bool[] = [];

  constructor(data?: PartialMessage<TLAccountSaveTheme>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveTheme";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "theme", kind: "message", T: InputTheme, repeated: true },
    { no: 4, name: "unsave", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSaveTheme {
    return new TLAccountSaveTheme().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSaveTheme {
    return new TLAccountSaveTheme().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSaveTheme {
    return new TLAccountSaveTheme().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSaveTheme | PlainMessage<TLAccountSaveTheme> | undefined, b: TLAccountSaveTheme | PlainMessage<TLAccountSaveTheme> | undefined): boolean {
    return proto3.util.equals(TLAccountSaveTheme, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountInstallTheme
 */
export class TLAccountInstallTheme extends Message<TLAccountInstallTheme> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool dark = 3;
   */
  dark = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputTheme theme = 4;
   */
  theme: InputTheme[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue format = 5;
   */
  format: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.BaseTheme base_theme = 6;
   */
  baseTheme: BaseTheme[] = [];

  constructor(data?: PartialMessage<TLAccountInstallTheme>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountInstallTheme";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "dark", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "theme", kind: "message", T: InputTheme, repeated: true },
    { no: 5, name: "format", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "base_theme", kind: "message", T: BaseTheme, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountInstallTheme {
    return new TLAccountInstallTheme().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountInstallTheme {
    return new TLAccountInstallTheme().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountInstallTheme {
    return new TLAccountInstallTheme().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountInstallTheme | PlainMessage<TLAccountInstallTheme> | undefined, b: TLAccountInstallTheme | PlainMessage<TLAccountInstallTheme> | undefined): boolean {
    return proto3.util.equals(TLAccountInstallTheme, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetTheme
 */
export class TLAccountGetTheme extends Message<TLAccountGetTheme> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string format = 3;
   */
  format = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputTheme theme = 4;
   */
  theme: InputTheme[] = [];

  /**
   * @generated from field: int64 document_id = 5;
   */
  documentId = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountGetTheme>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetTheme";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "format", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "theme", kind: "message", T: InputTheme, repeated: true },
    { no: 5, name: "document_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetTheme {
    return new TLAccountGetTheme().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetTheme {
    return new TLAccountGetTheme().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetTheme {
    return new TLAccountGetTheme().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetTheme | PlainMessage<TLAccountGetTheme> | undefined, b: TLAccountGetTheme | PlainMessage<TLAccountGetTheme> | undefined): boolean {
    return proto3.util.equals(TLAccountGetTheme, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetThemes
 */
export class TLAccountGetThemes extends Message<TLAccountGetThemes> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string format = 3;
   */
  format = "";

  /**
   * @generated from field: int64 hash = 4;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountGetThemes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetThemes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "format", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetThemes {
    return new TLAccountGetThemes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetThemes {
    return new TLAccountGetThemes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetThemes {
    return new TLAccountGetThemes().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetThemes | PlainMessage<TLAccountGetThemes> | undefined, b: TLAccountGetThemes | PlainMessage<TLAccountGetThemes> | undefined): boolean {
    return proto3.util.equals(TLAccountGetThemes, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSetContentSettings
 */
export class TLAccountSetContentSettings extends Message<TLAccountSetContentSettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool sensitive_enabled = 3;
   */
  sensitiveEnabled = false;

  constructor(data?: PartialMessage<TLAccountSetContentSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSetContentSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "sensitive_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSetContentSettings {
    return new TLAccountSetContentSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSetContentSettings {
    return new TLAccountSetContentSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSetContentSettings {
    return new TLAccountSetContentSettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSetContentSettings | PlainMessage<TLAccountSetContentSettings> | undefined, b: TLAccountSetContentSettings | PlainMessage<TLAccountSetContentSettings> | undefined): boolean {
    return proto3.util.equals(TLAccountSetContentSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetContentSettings
 */
export class TLAccountGetContentSettings extends Message<TLAccountGetContentSettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountGetContentSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetContentSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetContentSettings {
    return new TLAccountGetContentSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetContentSettings {
    return new TLAccountGetContentSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetContentSettings {
    return new TLAccountGetContentSettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetContentSettings | PlainMessage<TLAccountGetContentSettings> | undefined, b: TLAccountGetContentSettings | PlainMessage<TLAccountGetContentSettings> | undefined): boolean {
    return proto3.util.equals(TLAccountGetContentSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetMultiWallPapers
 */
export class TLAccountGetMultiWallPapers extends Message<TLAccountGetMultiWallPapers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputWallPaper wallpapers = 3;
   */
  wallpapers: InputWallPaper[] = [];

  constructor(data?: PartialMessage<TLAccountGetMultiWallPapers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetMultiWallPapers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "wallpapers", kind: "message", T: InputWallPaper, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetMultiWallPapers {
    return new TLAccountGetMultiWallPapers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetMultiWallPapers {
    return new TLAccountGetMultiWallPapers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetMultiWallPapers {
    return new TLAccountGetMultiWallPapers().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetMultiWallPapers | PlainMessage<TLAccountGetMultiWallPapers> | undefined, b: TLAccountGetMultiWallPapers | PlainMessage<TLAccountGetMultiWallPapers> | undefined): boolean {
    return proto3.util.equals(TLAccountGetMultiWallPapers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetGlobalPrivacySettings
 */
export class TLAccountGetGlobalPrivacySettings extends Message<TLAccountGetGlobalPrivacySettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountGetGlobalPrivacySettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetGlobalPrivacySettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetGlobalPrivacySettings {
    return new TLAccountGetGlobalPrivacySettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetGlobalPrivacySettings {
    return new TLAccountGetGlobalPrivacySettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetGlobalPrivacySettings {
    return new TLAccountGetGlobalPrivacySettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetGlobalPrivacySettings | PlainMessage<TLAccountGetGlobalPrivacySettings> | undefined, b: TLAccountGetGlobalPrivacySettings | PlainMessage<TLAccountGetGlobalPrivacySettings> | undefined): boolean {
    return proto3.util.equals(TLAccountGetGlobalPrivacySettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSetGlobalPrivacySettings
 */
export class TLAccountSetGlobalPrivacySettings extends Message<TLAccountSetGlobalPrivacySettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.GlobalPrivacySettings settings = 3;
   */
  settings: GlobalPrivacySettings[] = [];

  constructor(data?: PartialMessage<TLAccountSetGlobalPrivacySettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSetGlobalPrivacySettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "settings", kind: "message", T: GlobalPrivacySettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSetGlobalPrivacySettings {
    return new TLAccountSetGlobalPrivacySettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSetGlobalPrivacySettings {
    return new TLAccountSetGlobalPrivacySettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSetGlobalPrivacySettings {
    return new TLAccountSetGlobalPrivacySettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSetGlobalPrivacySettings | PlainMessage<TLAccountSetGlobalPrivacySettings> | undefined, b: TLAccountSetGlobalPrivacySettings | PlainMessage<TLAccountSetGlobalPrivacySettings> | undefined): boolean {
    return proto3.util.equals(TLAccountSetGlobalPrivacySettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountReportProfilePhoto
 */
export class TLAccountReportProfilePhoto extends Message<TLAccountReportProfilePhoto> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPhoto photo_id = 4;
   */
  photoId: InputPhoto[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ReportReason reason = 5;
   */
  reason: ReportReason[] = [];

  /**
   * @generated from field: string message = 6;
   */
  message = "";

  constructor(data?: PartialMessage<TLAccountReportProfilePhoto>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountReportProfilePhoto";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "photo_id", kind: "message", T: InputPhoto, repeated: true },
    { no: 5, name: "reason", kind: "message", T: ReportReason, repeated: true },
    { no: 6, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountReportProfilePhoto {
    return new TLAccountReportProfilePhoto().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountReportProfilePhoto {
    return new TLAccountReportProfilePhoto().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountReportProfilePhoto {
    return new TLAccountReportProfilePhoto().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountReportProfilePhoto | PlainMessage<TLAccountReportProfilePhoto> | undefined, b: TLAccountReportProfilePhoto | PlainMessage<TLAccountReportProfilePhoto> | undefined): boolean {
    return proto3.util.equals(TLAccountReportProfilePhoto, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountResetPassword
 */
export class TLAccountResetPassword extends Message<TLAccountResetPassword> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountResetPassword>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountResetPassword";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountResetPassword {
    return new TLAccountResetPassword().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountResetPassword {
    return new TLAccountResetPassword().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountResetPassword {
    return new TLAccountResetPassword().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountResetPassword | PlainMessage<TLAccountResetPassword> | undefined, b: TLAccountResetPassword | PlainMessage<TLAccountResetPassword> | undefined): boolean {
    return proto3.util.equals(TLAccountResetPassword, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountDeclinePasswordReset
 */
export class TLAccountDeclinePasswordReset extends Message<TLAccountDeclinePasswordReset> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountDeclinePasswordReset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountDeclinePasswordReset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountDeclinePasswordReset {
    return new TLAccountDeclinePasswordReset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountDeclinePasswordReset {
    return new TLAccountDeclinePasswordReset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountDeclinePasswordReset {
    return new TLAccountDeclinePasswordReset().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountDeclinePasswordReset | PlainMessage<TLAccountDeclinePasswordReset> | undefined, b: TLAccountDeclinePasswordReset | PlainMessage<TLAccountDeclinePasswordReset> | undefined): boolean {
    return proto3.util.equals(TLAccountDeclinePasswordReset, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetChatThemes
 */
export class TLAccountGetChatThemes extends Message<TLAccountGetChatThemes> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountGetChatThemes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetChatThemes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetChatThemes {
    return new TLAccountGetChatThemes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetChatThemes {
    return new TLAccountGetChatThemes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetChatThemes {
    return new TLAccountGetChatThemes().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetChatThemes | PlainMessage<TLAccountGetChatThemes> | undefined, b: TLAccountGetChatThemes | PlainMessage<TLAccountGetChatThemes> | undefined): boolean {
    return proto3.util.equals(TLAccountGetChatThemes, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSetAuthorizationTTL
 */
export class TLAccountSetAuthorizationTTL extends Message<TLAccountSetAuthorizationTTL> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 authorization_ttl_days = 3;
   */
  authorizationTtlDays = 0;

  constructor(data?: PartialMessage<TLAccountSetAuthorizationTTL>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSetAuthorizationTTL";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "authorization_ttl_days", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSetAuthorizationTTL {
    return new TLAccountSetAuthorizationTTL().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSetAuthorizationTTL {
    return new TLAccountSetAuthorizationTTL().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSetAuthorizationTTL {
    return new TLAccountSetAuthorizationTTL().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSetAuthorizationTTL | PlainMessage<TLAccountSetAuthorizationTTL> | undefined, b: TLAccountSetAuthorizationTTL | PlainMessage<TLAccountSetAuthorizationTTL> | undefined): boolean {
    return proto3.util.equals(TLAccountSetAuthorizationTTL, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountChangeAuthorizationSettings
 */
export class TLAccountChangeAuthorizationSettings extends Message<TLAccountChangeAuthorizationSettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool confirmed = 3;
   */
  confirmed = false;

  /**
   * @generated from field: int64 hash = 4;
   */
  hash = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool encrypted_requests_disabled = 5;
   */
  encryptedRequestsDisabled: Bool[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool call_requests_disabled = 6;
   */
  callRequestsDisabled: Bool[] = [];

  constructor(data?: PartialMessage<TLAccountChangeAuthorizationSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountChangeAuthorizationSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "confirmed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "encrypted_requests_disabled", kind: "message", T: Bool, repeated: true },
    { no: 6, name: "call_requests_disabled", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountChangeAuthorizationSettings {
    return new TLAccountChangeAuthorizationSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountChangeAuthorizationSettings {
    return new TLAccountChangeAuthorizationSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountChangeAuthorizationSettings {
    return new TLAccountChangeAuthorizationSettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountChangeAuthorizationSettings | PlainMessage<TLAccountChangeAuthorizationSettings> | undefined, b: TLAccountChangeAuthorizationSettings | PlainMessage<TLAccountChangeAuthorizationSettings> | undefined): boolean {
    return proto3.util.equals(TLAccountChangeAuthorizationSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetSavedRingtones
 */
export class TLAccountGetSavedRingtones extends Message<TLAccountGetSavedRingtones> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountGetSavedRingtones>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetSavedRingtones";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetSavedRingtones {
    return new TLAccountGetSavedRingtones().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetSavedRingtones {
    return new TLAccountGetSavedRingtones().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetSavedRingtones {
    return new TLAccountGetSavedRingtones().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetSavedRingtones | PlainMessage<TLAccountGetSavedRingtones> | undefined, b: TLAccountGetSavedRingtones | PlainMessage<TLAccountGetSavedRingtones> | undefined): boolean {
    return proto3.util.equals(TLAccountGetSavedRingtones, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveRingtone
 */
export class TLAccountSaveRingtone extends Message<TLAccountSaveRingtone> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDocument id = 3;
   */
  id: InputDocument[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool unsave = 4;
   */
  unsave: Bool[] = [];

  constructor(data?: PartialMessage<TLAccountSaveRingtone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveRingtone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputDocument, repeated: true },
    { no: 4, name: "unsave", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSaveRingtone {
    return new TLAccountSaveRingtone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSaveRingtone {
    return new TLAccountSaveRingtone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSaveRingtone {
    return new TLAccountSaveRingtone().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSaveRingtone | PlainMessage<TLAccountSaveRingtone> | undefined, b: TLAccountSaveRingtone | PlainMessage<TLAccountSaveRingtone> | undefined): boolean {
    return proto3.util.equals(TLAccountSaveRingtone, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUploadRingtone
 */
export class TLAccountUploadRingtone extends Message<TLAccountUploadRingtone> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFile file = 3;
   */
  file: InputFile[] = [];

  /**
   * @generated from field: string file_name = 4;
   */
  fileName = "";

  /**
   * @generated from field: string mime_type = 5;
   */
  mimeType = "";

  constructor(data?: PartialMessage<TLAccountUploadRingtone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUploadRingtone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "file", kind: "message", T: InputFile, repeated: true },
    { no: 4, name: "file_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "mime_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUploadRingtone {
    return new TLAccountUploadRingtone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUploadRingtone {
    return new TLAccountUploadRingtone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUploadRingtone {
    return new TLAccountUploadRingtone().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUploadRingtone | PlainMessage<TLAccountUploadRingtone> | undefined, b: TLAccountUploadRingtone | PlainMessage<TLAccountUploadRingtone> | undefined): boolean {
    return proto3.util.equals(TLAccountUploadRingtone, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateEmojiStatus
 */
export class TLAccountUpdateEmojiStatus extends Message<TLAccountUpdateEmojiStatus> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.EmojiStatus emoji_status = 3;
   */
  emojiStatus: EmojiStatus[] = [];

  constructor(data?: PartialMessage<TLAccountUpdateEmojiStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateEmojiStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "emoji_status", kind: "message", T: EmojiStatus, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUpdateEmojiStatus {
    return new TLAccountUpdateEmojiStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUpdateEmojiStatus {
    return new TLAccountUpdateEmojiStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUpdateEmojiStatus {
    return new TLAccountUpdateEmojiStatus().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUpdateEmojiStatus | PlainMessage<TLAccountUpdateEmojiStatus> | undefined, b: TLAccountUpdateEmojiStatus | PlainMessage<TLAccountUpdateEmojiStatus> | undefined): boolean {
    return proto3.util.equals(TLAccountUpdateEmojiStatus, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetDefaultEmojiStatuses
 */
export class TLAccountGetDefaultEmojiStatuses extends Message<TLAccountGetDefaultEmojiStatuses> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountGetDefaultEmojiStatuses>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetDefaultEmojiStatuses";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetDefaultEmojiStatuses {
    return new TLAccountGetDefaultEmojiStatuses().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetDefaultEmojiStatuses {
    return new TLAccountGetDefaultEmojiStatuses().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetDefaultEmojiStatuses {
    return new TLAccountGetDefaultEmojiStatuses().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetDefaultEmojiStatuses | PlainMessage<TLAccountGetDefaultEmojiStatuses> | undefined, b: TLAccountGetDefaultEmojiStatuses | PlainMessage<TLAccountGetDefaultEmojiStatuses> | undefined): boolean {
    return proto3.util.equals(TLAccountGetDefaultEmojiStatuses, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetRecentEmojiStatuses
 */
export class TLAccountGetRecentEmojiStatuses extends Message<TLAccountGetRecentEmojiStatuses> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountGetRecentEmojiStatuses>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetRecentEmojiStatuses";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetRecentEmojiStatuses {
    return new TLAccountGetRecentEmojiStatuses().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetRecentEmojiStatuses {
    return new TLAccountGetRecentEmojiStatuses().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetRecentEmojiStatuses {
    return new TLAccountGetRecentEmojiStatuses().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetRecentEmojiStatuses | PlainMessage<TLAccountGetRecentEmojiStatuses> | undefined, b: TLAccountGetRecentEmojiStatuses | PlainMessage<TLAccountGetRecentEmojiStatuses> | undefined): boolean {
    return proto3.util.equals(TLAccountGetRecentEmojiStatuses, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountClearRecentEmojiStatuses
 */
export class TLAccountClearRecentEmojiStatuses extends Message<TLAccountClearRecentEmojiStatuses> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountClearRecentEmojiStatuses>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountClearRecentEmojiStatuses";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountClearRecentEmojiStatuses {
    return new TLAccountClearRecentEmojiStatuses().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountClearRecentEmojiStatuses {
    return new TLAccountClearRecentEmojiStatuses().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountClearRecentEmojiStatuses {
    return new TLAccountClearRecentEmojiStatuses().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountClearRecentEmojiStatuses | PlainMessage<TLAccountClearRecentEmojiStatuses> | undefined, b: TLAccountClearRecentEmojiStatuses | PlainMessage<TLAccountClearRecentEmojiStatuses> | undefined): boolean {
    return proto3.util.equals(TLAccountClearRecentEmojiStatuses, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountReorderUsernames
 */
export class TLAccountReorderUsernames extends Message<TLAccountReorderUsernames> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string order = 3;
   */
  order = "";

  constructor(data?: PartialMessage<TLAccountReorderUsernames>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountReorderUsernames";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "order", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountReorderUsernames {
    return new TLAccountReorderUsernames().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountReorderUsernames {
    return new TLAccountReorderUsernames().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountReorderUsernames {
    return new TLAccountReorderUsernames().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountReorderUsernames | PlainMessage<TLAccountReorderUsernames> | undefined, b: TLAccountReorderUsernames | PlainMessage<TLAccountReorderUsernames> | undefined): boolean {
    return proto3.util.equals(TLAccountReorderUsernames, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountToggleUsername
 */
export class TLAccountToggleUsername extends Message<TLAccountToggleUsername> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string username = 3;
   */
  username = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool active = 4;
   */
  active: Bool[] = [];

  constructor(data?: PartialMessage<TLAccountToggleUsername>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountToggleUsername";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "active", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountToggleUsername {
    return new TLAccountToggleUsername().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountToggleUsername {
    return new TLAccountToggleUsername().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountToggleUsername {
    return new TLAccountToggleUsername().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountToggleUsername | PlainMessage<TLAccountToggleUsername> | undefined, b: TLAccountToggleUsername | PlainMessage<TLAccountToggleUsername> | undefined): boolean {
    return proto3.util.equals(TLAccountToggleUsername, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetDefaultProfilePhotoEmojis
 */
export class TLAccountGetDefaultProfilePhotoEmojis extends Message<TLAccountGetDefaultProfilePhotoEmojis> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountGetDefaultProfilePhotoEmojis>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetDefaultProfilePhotoEmojis";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetDefaultProfilePhotoEmojis {
    return new TLAccountGetDefaultProfilePhotoEmojis().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetDefaultProfilePhotoEmojis {
    return new TLAccountGetDefaultProfilePhotoEmojis().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetDefaultProfilePhotoEmojis {
    return new TLAccountGetDefaultProfilePhotoEmojis().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetDefaultProfilePhotoEmojis | PlainMessage<TLAccountGetDefaultProfilePhotoEmojis> | undefined, b: TLAccountGetDefaultProfilePhotoEmojis | PlainMessage<TLAccountGetDefaultProfilePhotoEmojis> | undefined): boolean {
    return proto3.util.equals(TLAccountGetDefaultProfilePhotoEmojis, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetDefaultGroupPhotoEmojis
 */
export class TLAccountGetDefaultGroupPhotoEmojis extends Message<TLAccountGetDefaultGroupPhotoEmojis> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLAccountGetDefaultGroupPhotoEmojis>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetDefaultGroupPhotoEmojis";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetDefaultGroupPhotoEmojis {
    return new TLAccountGetDefaultGroupPhotoEmojis().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetDefaultGroupPhotoEmojis {
    return new TLAccountGetDefaultGroupPhotoEmojis().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetDefaultGroupPhotoEmojis {
    return new TLAccountGetDefaultGroupPhotoEmojis().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetDefaultGroupPhotoEmojis | PlainMessage<TLAccountGetDefaultGroupPhotoEmojis> | undefined, b: TLAccountGetDefaultGroupPhotoEmojis | PlainMessage<TLAccountGetDefaultGroupPhotoEmojis> | undefined): boolean {
    return proto3.util.equals(TLAccountGetDefaultGroupPhotoEmojis, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAutoSaveSettings
 */
export class TLAccountGetAutoSaveSettings extends Message<TLAccountGetAutoSaveSettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountGetAutoSaveSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountGetAutoSaveSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountGetAutoSaveSettings {
    return new TLAccountGetAutoSaveSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountGetAutoSaveSettings {
    return new TLAccountGetAutoSaveSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountGetAutoSaveSettings {
    return new TLAccountGetAutoSaveSettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountGetAutoSaveSettings | PlainMessage<TLAccountGetAutoSaveSettings> | undefined, b: TLAccountGetAutoSaveSettings | PlainMessage<TLAccountGetAutoSaveSettings> | undefined): boolean {
    return proto3.util.equals(TLAccountGetAutoSaveSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveAutoSaveSettings
 */
export class TLAccountSaveAutoSaveSettings extends Message<TLAccountSaveAutoSaveSettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool users = 3;
   */
  users = false;

  /**
   * @generated from field: bool chats = 4;
   */
  chats = false;

  /**
   * @generated from field: bool broadcasts = 5;
   */
  broadcasts = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 6;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.AutoSaveSettings settings = 7;
   */
  settings: AutoSaveSettings[] = [];

  constructor(data?: PartialMessage<TLAccountSaveAutoSaveSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountSaveAutoSaveSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "chats", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "broadcasts", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 7, name: "settings", kind: "message", T: AutoSaveSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountSaveAutoSaveSettings {
    return new TLAccountSaveAutoSaveSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountSaveAutoSaveSettings {
    return new TLAccountSaveAutoSaveSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountSaveAutoSaveSettings {
    return new TLAccountSaveAutoSaveSettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountSaveAutoSaveSettings | PlainMessage<TLAccountSaveAutoSaveSettings> | undefined, b: TLAccountSaveAutoSaveSettings | PlainMessage<TLAccountSaveAutoSaveSettings> | undefined): boolean {
    return proto3.util.equals(TLAccountSaveAutoSaveSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountDeleteAutoSaveExceptions
 */
export class TLAccountDeleteAutoSaveExceptions extends Message<TLAccountDeleteAutoSaveExceptions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLAccountDeleteAutoSaveExceptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountDeleteAutoSaveExceptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountDeleteAutoSaveExceptions {
    return new TLAccountDeleteAutoSaveExceptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountDeleteAutoSaveExceptions {
    return new TLAccountDeleteAutoSaveExceptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountDeleteAutoSaveExceptions {
    return new TLAccountDeleteAutoSaveExceptions().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountDeleteAutoSaveExceptions | PlainMessage<TLAccountDeleteAutoSaveExceptions> | undefined, b: TLAccountDeleteAutoSaveExceptions | PlainMessage<TLAccountDeleteAutoSaveExceptions> | undefined): boolean {
    return proto3.util.equals(TLAccountDeleteAutoSaveExceptions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountInvalidateSignInCodes
 */
export class TLAccountInvalidateSignInCodes extends Message<TLAccountInvalidateSignInCodes> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string codes = 3;
   */
  codes = "";

  constructor(data?: PartialMessage<TLAccountInvalidateSignInCodes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountInvalidateSignInCodes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "codes", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountInvalidateSignInCodes {
    return new TLAccountInvalidateSignInCodes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountInvalidateSignInCodes {
    return new TLAccountInvalidateSignInCodes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountInvalidateSignInCodes {
    return new TLAccountInvalidateSignInCodes().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountInvalidateSignInCodes | PlainMessage<TLAccountInvalidateSignInCodes> | undefined, b: TLAccountInvalidateSignInCodes | PlainMessage<TLAccountInvalidateSignInCodes> | undefined): boolean {
    return proto3.util.equals(TLAccountInvalidateSignInCodes, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUsersGetUsers
 */
export class TLUsersGetUsers extends Message<TLUsersGetUsers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser id = 3;
   */
  id: InputUser[] = [];

  constructor(data?: PartialMessage<TLUsersGetUsers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUsersGetUsers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUsersGetUsers {
    return new TLUsersGetUsers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUsersGetUsers {
    return new TLUsersGetUsers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUsersGetUsers {
    return new TLUsersGetUsers().fromJsonString(jsonString, options);
  }

  static equals(a: TLUsersGetUsers | PlainMessage<TLUsersGetUsers> | undefined, b: TLUsersGetUsers | PlainMessage<TLUsersGetUsers> | undefined): boolean {
    return proto3.util.equals(TLUsersGetUsers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUsersGetFullUser
 */
export class TLUsersGetFullUser extends Message<TLUsersGetFullUser> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser id = 3;
   */
  id: InputUser[] = [];

  constructor(data?: PartialMessage<TLUsersGetFullUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUsersGetFullUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUsersGetFullUser {
    return new TLUsersGetFullUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUsersGetFullUser {
    return new TLUsersGetFullUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUsersGetFullUser {
    return new TLUsersGetFullUser().fromJsonString(jsonString, options);
  }

  static equals(a: TLUsersGetFullUser | PlainMessage<TLUsersGetFullUser> | undefined, b: TLUsersGetFullUser | PlainMessage<TLUsersGetFullUser> | undefined): boolean {
    return proto3.util.equals(TLUsersGetFullUser, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUsersSetSecureValueErrors
 */
export class TLUsersSetSecureValueErrors extends Message<TLUsersSetSecureValueErrors> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser id = 3;
   */
  id: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.SecureValueError errors = 4;
   */
  errors: SecureValueError[] = [];

  constructor(data?: PartialMessage<TLUsersSetSecureValueErrors>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUsersSetSecureValueErrors";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "errors", kind: "message", T: SecureValueError, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUsersSetSecureValueErrors {
    return new TLUsersSetSecureValueErrors().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUsersSetSecureValueErrors {
    return new TLUsersSetSecureValueErrors().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUsersSetSecureValueErrors {
    return new TLUsersSetSecureValueErrors().fromJsonString(jsonString, options);
  }

  static equals(a: TLUsersSetSecureValueErrors | PlainMessage<TLUsersSetSecureValueErrors> | undefined, b: TLUsersSetSecureValueErrors | PlainMessage<TLUsersSetSecureValueErrors> | undefined): boolean {
    return proto3.util.equals(TLUsersSetSecureValueErrors, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsGetContactIDs
 */
export class TLContactsGetContactIDs extends Message<TLContactsGetContactIDs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLContactsGetContactIDs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsGetContactIDs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsGetContactIDs {
    return new TLContactsGetContactIDs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsGetContactIDs {
    return new TLContactsGetContactIDs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsGetContactIDs {
    return new TLContactsGetContactIDs().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsGetContactIDs | PlainMessage<TLContactsGetContactIDs> | undefined, b: TLContactsGetContactIDs | PlainMessage<TLContactsGetContactIDs> | undefined): boolean {
    return proto3.util.equals(TLContactsGetContactIDs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsGetStatuses
 */
export class TLContactsGetStatuses extends Message<TLContactsGetStatuses> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLContactsGetStatuses>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsGetStatuses";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsGetStatuses {
    return new TLContactsGetStatuses().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsGetStatuses {
    return new TLContactsGetStatuses().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsGetStatuses {
    return new TLContactsGetStatuses().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsGetStatuses | PlainMessage<TLContactsGetStatuses> | undefined, b: TLContactsGetStatuses | PlainMessage<TLContactsGetStatuses> | undefined): boolean {
    return proto3.util.equals(TLContactsGetStatuses, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsGetContacts
 */
export class TLContactsGetContacts extends Message<TLContactsGetContacts> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLContactsGetContacts>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsGetContacts";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsGetContacts {
    return new TLContactsGetContacts().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsGetContacts {
    return new TLContactsGetContacts().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsGetContacts {
    return new TLContactsGetContacts().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsGetContacts | PlainMessage<TLContactsGetContacts> | undefined, b: TLContactsGetContacts | PlainMessage<TLContactsGetContacts> | undefined): boolean {
    return proto3.util.equals(TLContactsGetContacts, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsImportContacts
 */
export class TLContactsImportContacts extends Message<TLContactsImportContacts> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputContact contacts = 3;
   */
  contacts: InputContact[] = [];

  constructor(data?: PartialMessage<TLContactsImportContacts>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsImportContacts";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "contacts", kind: "message", T: InputContact, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsImportContacts {
    return new TLContactsImportContacts().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsImportContacts {
    return new TLContactsImportContacts().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsImportContacts {
    return new TLContactsImportContacts().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsImportContacts | PlainMessage<TLContactsImportContacts> | undefined, b: TLContactsImportContacts | PlainMessage<TLContactsImportContacts> | undefined): boolean {
    return proto3.util.equals(TLContactsImportContacts, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsDeleteContacts
 */
export class TLContactsDeleteContacts extends Message<TLContactsDeleteContacts> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser id = 3;
   */
  id: InputUser[] = [];

  constructor(data?: PartialMessage<TLContactsDeleteContacts>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsDeleteContacts";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsDeleteContacts {
    return new TLContactsDeleteContacts().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsDeleteContacts {
    return new TLContactsDeleteContacts().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsDeleteContacts {
    return new TLContactsDeleteContacts().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsDeleteContacts | PlainMessage<TLContactsDeleteContacts> | undefined, b: TLContactsDeleteContacts | PlainMessage<TLContactsDeleteContacts> | undefined): boolean {
    return proto3.util.equals(TLContactsDeleteContacts, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsDeleteByPhones
 */
export class TLContactsDeleteByPhones extends Message<TLContactsDeleteByPhones> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phones = 3;
   */
  phones = "";

  constructor(data?: PartialMessage<TLContactsDeleteByPhones>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsDeleteByPhones";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phones", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsDeleteByPhones {
    return new TLContactsDeleteByPhones().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsDeleteByPhones {
    return new TLContactsDeleteByPhones().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsDeleteByPhones {
    return new TLContactsDeleteByPhones().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsDeleteByPhones | PlainMessage<TLContactsDeleteByPhones> | undefined, b: TLContactsDeleteByPhones | PlainMessage<TLContactsDeleteByPhones> | undefined): boolean {
    return proto3.util.equals(TLContactsDeleteByPhones, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsBlock
 */
export class TLContactsBlock extends Message<TLContactsBlock> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool my_stories_from = 3;
   */
  myStoriesFrom = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer id = 4;
   */
  id: InputPeer[] = [];

  constructor(data?: PartialMessage<TLContactsBlock>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsBlock";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "my_stories_from", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "id", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsBlock {
    return new TLContactsBlock().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsBlock {
    return new TLContactsBlock().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsBlock {
    return new TLContactsBlock().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsBlock | PlainMessage<TLContactsBlock> | undefined, b: TLContactsBlock | PlainMessage<TLContactsBlock> | undefined): boolean {
    return proto3.util.equals(TLContactsBlock, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsUnblock
 */
export class TLContactsUnblock extends Message<TLContactsUnblock> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool my_stories_from = 3;
   */
  myStoriesFrom = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer id = 4;
   */
  id: InputPeer[] = [];

  constructor(data?: PartialMessage<TLContactsUnblock>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsUnblock";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "my_stories_from", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "id", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsUnblock {
    return new TLContactsUnblock().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsUnblock {
    return new TLContactsUnblock().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsUnblock {
    return new TLContactsUnblock().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsUnblock | PlainMessage<TLContactsUnblock> | undefined, b: TLContactsUnblock | PlainMessage<TLContactsUnblock> | undefined): boolean {
    return proto3.util.equals(TLContactsUnblock, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsGetBlocked
 */
export class TLContactsGetBlocked extends Message<TLContactsGetBlocked> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool my_stories_from = 3;
   */
  myStoriesFrom = false;

  /**
   * @generated from field: int32 offset = 4;
   */
  offset = 0;

  /**
   * @generated from field: int32 limit = 5;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLContactsGetBlocked>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsGetBlocked";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "my_stories_from", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsGetBlocked {
    return new TLContactsGetBlocked().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsGetBlocked {
    return new TLContactsGetBlocked().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsGetBlocked {
    return new TLContactsGetBlocked().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsGetBlocked | PlainMessage<TLContactsGetBlocked> | undefined, b: TLContactsGetBlocked | PlainMessage<TLContactsGetBlocked> | undefined): boolean {
    return proto3.util.equals(TLContactsGetBlocked, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsSearch
 */
export class TLContactsSearch extends Message<TLContactsSearch> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string q = 3;
   */
  q = "";

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLContactsSearch>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsSearch";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "q", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsSearch {
    return new TLContactsSearch().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsSearch {
    return new TLContactsSearch().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsSearch {
    return new TLContactsSearch().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsSearch | PlainMessage<TLContactsSearch> | undefined, b: TLContactsSearch | PlainMessage<TLContactsSearch> | undefined): boolean {
    return proto3.util.equals(TLContactsSearch, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsResolveUsername
 */
export class TLContactsResolveUsername extends Message<TLContactsResolveUsername> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string username = 3;
   */
  username = "";

  constructor(data?: PartialMessage<TLContactsResolveUsername>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsResolveUsername";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsResolveUsername {
    return new TLContactsResolveUsername().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsResolveUsername {
    return new TLContactsResolveUsername().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsResolveUsername {
    return new TLContactsResolveUsername().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsResolveUsername | PlainMessage<TLContactsResolveUsername> | undefined, b: TLContactsResolveUsername | PlainMessage<TLContactsResolveUsername> | undefined): boolean {
    return proto3.util.equals(TLContactsResolveUsername, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsGetTopPeers
 */
export class TLContactsGetTopPeers extends Message<TLContactsGetTopPeers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool correspondents = 3;
   */
  correspondents = false;

  /**
   * @generated from field: bool bots_pm = 4;
   */
  botsPm = false;

  /**
   * @generated from field: bool bots_inline = 5;
   */
  botsInline = false;

  /**
   * @generated from field: bool phone_calls = 6;
   */
  phoneCalls = false;

  /**
   * @generated from field: bool forward_users = 7;
   */
  forwardUsers = false;

  /**
   * @generated from field: bool forward_chats = 8;
   */
  forwardChats = false;

  /**
   * @generated from field: bool groups = 9;
   */
  groups = false;

  /**
   * @generated from field: bool channels = 10;
   */
  channels = false;

  /**
   * @generated from field: int32 offset = 11;
   */
  offset = 0;

  /**
   * @generated from field: int32 limit = 12;
   */
  limit = 0;

  /**
   * @generated from field: int64 hash = 13;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLContactsGetTopPeers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsGetTopPeers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "correspondents", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "bots_pm", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "bots_inline", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "phone_calls", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "forward_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "forward_chats", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "groups", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "channels", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsGetTopPeers {
    return new TLContactsGetTopPeers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsGetTopPeers {
    return new TLContactsGetTopPeers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsGetTopPeers {
    return new TLContactsGetTopPeers().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsGetTopPeers | PlainMessage<TLContactsGetTopPeers> | undefined, b: TLContactsGetTopPeers | PlainMessage<TLContactsGetTopPeers> | undefined): boolean {
    return proto3.util.equals(TLContactsGetTopPeers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsResetTopPeerRating
 */
export class TLContactsResetTopPeerRating extends Message<TLContactsResetTopPeerRating> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.TopPeerCategory category = 3;
   */
  category: TopPeerCategory[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLContactsResetTopPeerRating>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsResetTopPeerRating";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "category", kind: "message", T: TopPeerCategory, repeated: true },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsResetTopPeerRating {
    return new TLContactsResetTopPeerRating().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsResetTopPeerRating {
    return new TLContactsResetTopPeerRating().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsResetTopPeerRating {
    return new TLContactsResetTopPeerRating().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsResetTopPeerRating | PlainMessage<TLContactsResetTopPeerRating> | undefined, b: TLContactsResetTopPeerRating | PlainMessage<TLContactsResetTopPeerRating> | undefined): boolean {
    return proto3.util.equals(TLContactsResetTopPeerRating, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsResetSaved
 */
export class TLContactsResetSaved extends Message<TLContactsResetSaved> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLContactsResetSaved>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsResetSaved";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsResetSaved {
    return new TLContactsResetSaved().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsResetSaved {
    return new TLContactsResetSaved().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsResetSaved {
    return new TLContactsResetSaved().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsResetSaved | PlainMessage<TLContactsResetSaved> | undefined, b: TLContactsResetSaved | PlainMessage<TLContactsResetSaved> | undefined): boolean {
    return proto3.util.equals(TLContactsResetSaved, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsGetSaved
 */
export class TLContactsGetSaved extends Message<TLContactsGetSaved> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLContactsGetSaved>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsGetSaved";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsGetSaved {
    return new TLContactsGetSaved().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsGetSaved {
    return new TLContactsGetSaved().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsGetSaved {
    return new TLContactsGetSaved().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsGetSaved | PlainMessage<TLContactsGetSaved> | undefined, b: TLContactsGetSaved | PlainMessage<TLContactsGetSaved> | undefined): boolean {
    return proto3.util.equals(TLContactsGetSaved, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsToggleTopPeers
 */
export class TLContactsToggleTopPeers extends Message<TLContactsToggleTopPeers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool enabled = 3;
   */
  enabled: Bool[] = [];

  constructor(data?: PartialMessage<TLContactsToggleTopPeers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsToggleTopPeers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "enabled", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsToggleTopPeers {
    return new TLContactsToggleTopPeers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsToggleTopPeers {
    return new TLContactsToggleTopPeers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsToggleTopPeers {
    return new TLContactsToggleTopPeers().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsToggleTopPeers | PlainMessage<TLContactsToggleTopPeers> | undefined, b: TLContactsToggleTopPeers | PlainMessage<TLContactsToggleTopPeers> | undefined): boolean {
    return proto3.util.equals(TLContactsToggleTopPeers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsAddContact
 */
export class TLContactsAddContact extends Message<TLContactsAddContact> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool add_phone_privacy_exception = 3;
   */
  addPhonePrivacyException = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser id = 4;
   */
  id: InputUser[] = [];

  /**
   * @generated from field: string first_name = 5;
   */
  firstName = "";

  /**
   * @generated from field: string last_name = 6;
   */
  lastName = "";

  /**
   * @generated from field: string phone = 7;
   */
  phone = "";

  constructor(data?: PartialMessage<TLContactsAddContact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsAddContact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "add_phone_privacy_exception", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "id", kind: "message", T: InputUser, repeated: true },
    { no: 5, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsAddContact {
    return new TLContactsAddContact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsAddContact {
    return new TLContactsAddContact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsAddContact {
    return new TLContactsAddContact().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsAddContact | PlainMessage<TLContactsAddContact> | undefined, b: TLContactsAddContact | PlainMessage<TLContactsAddContact> | undefined): boolean {
    return proto3.util.equals(TLContactsAddContact, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsAcceptContact
 */
export class TLContactsAcceptContact extends Message<TLContactsAcceptContact> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser id = 3;
   */
  id: InputUser[] = [];

  constructor(data?: PartialMessage<TLContactsAcceptContact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsAcceptContact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsAcceptContact {
    return new TLContactsAcceptContact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsAcceptContact {
    return new TLContactsAcceptContact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsAcceptContact {
    return new TLContactsAcceptContact().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsAcceptContact | PlainMessage<TLContactsAcceptContact> | undefined, b: TLContactsAcceptContact | PlainMessage<TLContactsAcceptContact> | undefined): boolean {
    return proto3.util.equals(TLContactsAcceptContact, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsGetLocated
 */
export class TLContactsGetLocated extends Message<TLContactsGetLocated> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool background = 3;
   */
  background = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGeoPoint geo_point = 4;
   */
  geoPoint: InputGeoPoint[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value self_expires = 5;
   */
  selfExpires: Int32Value[] = [];

  constructor(data?: PartialMessage<TLContactsGetLocated>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsGetLocated";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "background", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "geo_point", kind: "message", T: InputGeoPoint, repeated: true },
    { no: 5, name: "self_expires", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsGetLocated {
    return new TLContactsGetLocated().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsGetLocated {
    return new TLContactsGetLocated().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsGetLocated {
    return new TLContactsGetLocated().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsGetLocated | PlainMessage<TLContactsGetLocated> | undefined, b: TLContactsGetLocated | PlainMessage<TLContactsGetLocated> | undefined): boolean {
    return proto3.util.equals(TLContactsGetLocated, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsBlockFromReplies
 */
export class TLContactsBlockFromReplies extends Message<TLContactsBlockFromReplies> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool delete_message = 3;
   */
  deleteMessage = false;

  /**
   * @generated from field: bool delete_history = 4;
   */
  deleteHistory = false;

  /**
   * @generated from field: bool report_spam = 5;
   */
  reportSpam = false;

  /**
   * @generated from field: int32 msg_id = 6;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLContactsBlockFromReplies>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsBlockFromReplies";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "delete_message", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "delete_history", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "report_spam", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsBlockFromReplies {
    return new TLContactsBlockFromReplies().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsBlockFromReplies {
    return new TLContactsBlockFromReplies().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsBlockFromReplies {
    return new TLContactsBlockFromReplies().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsBlockFromReplies | PlainMessage<TLContactsBlockFromReplies> | undefined, b: TLContactsBlockFromReplies | PlainMessage<TLContactsBlockFromReplies> | undefined): boolean {
    return proto3.util.equals(TLContactsBlockFromReplies, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsResolvePhone
 */
export class TLContactsResolvePhone extends Message<TLContactsResolvePhone> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone = 3;
   */
  phone = "";

  constructor(data?: PartialMessage<TLContactsResolvePhone>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsResolvePhone";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsResolvePhone {
    return new TLContactsResolvePhone().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsResolvePhone {
    return new TLContactsResolvePhone().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsResolvePhone {
    return new TLContactsResolvePhone().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsResolvePhone | PlainMessage<TLContactsResolvePhone> | undefined, b: TLContactsResolvePhone | PlainMessage<TLContactsResolvePhone> | undefined): boolean {
    return proto3.util.equals(TLContactsResolvePhone, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsExportContactToken
 */
export class TLContactsExportContactToken extends Message<TLContactsExportContactToken> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLContactsExportContactToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsExportContactToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsExportContactToken {
    return new TLContactsExportContactToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsExportContactToken {
    return new TLContactsExportContactToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsExportContactToken {
    return new TLContactsExportContactToken().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsExportContactToken | PlainMessage<TLContactsExportContactToken> | undefined, b: TLContactsExportContactToken | PlainMessage<TLContactsExportContactToken> | undefined): boolean {
    return proto3.util.equals(TLContactsExportContactToken, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsImportContactToken
 */
export class TLContactsImportContactToken extends Message<TLContactsImportContactToken> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string token = 3;
   */
  token = "";

  constructor(data?: PartialMessage<TLContactsImportContactToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsImportContactToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsImportContactToken {
    return new TLContactsImportContactToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsImportContactToken {
    return new TLContactsImportContactToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsImportContactToken {
    return new TLContactsImportContactToken().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsImportContactToken | PlainMessage<TLContactsImportContactToken> | undefined, b: TLContactsImportContactToken | PlainMessage<TLContactsImportContactToken> | undefined): boolean {
    return proto3.util.equals(TLContactsImportContactToken, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsEditCloseFriends
 */
export class TLContactsEditCloseFriends extends Message<TLContactsEditCloseFriends> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 id = 3;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<TLContactsEditCloseFriends>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsEditCloseFriends";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsEditCloseFriends {
    return new TLContactsEditCloseFriends().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsEditCloseFriends {
    return new TLContactsEditCloseFriends().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsEditCloseFriends {
    return new TLContactsEditCloseFriends().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsEditCloseFriends | PlainMessage<TLContactsEditCloseFriends> | undefined, b: TLContactsEditCloseFriends | PlainMessage<TLContactsEditCloseFriends> | undefined): boolean {
    return proto3.util.equals(TLContactsEditCloseFriends, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsSetBlocked
 */
export class TLContactsSetBlocked extends Message<TLContactsSetBlocked> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool my_stories_from = 3;
   */
  myStoriesFrom = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer id = 4;
   */
  id: InputPeer[] = [];

  /**
   * @generated from field: int32 limit = 5;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLContactsSetBlocked>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsSetBlocked";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "my_stories_from", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "id", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsSetBlocked {
    return new TLContactsSetBlocked().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsSetBlocked {
    return new TLContactsSetBlocked().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsSetBlocked {
    return new TLContactsSetBlocked().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsSetBlocked | PlainMessage<TLContactsSetBlocked> | undefined, b: TLContactsSetBlocked | PlainMessage<TLContactsSetBlocked> | undefined): boolean {
    return proto3.util.equals(TLContactsSetBlocked, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessages
 */
export class TLMessagesGetMessages extends Message<TLMessagesGetMessages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputMessage id_VECTORINPUTMESSAGE = 3;
   */
  idVECTORINPUTMESSAGE: InputMessage[] = [];

  /**
   * @generated from field: int32 id_VECTORINT32 = 4;
   */
  idVECTORINT32 = 0;

  constructor(data?: PartialMessage<TLMessagesGetMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id_VECTORINPUTMESSAGE", kind: "message", T: InputMessage, repeated: true },
    { no: 4, name: "id_VECTORINT32", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetMessages {
    return new TLMessagesGetMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetMessages {
    return new TLMessagesGetMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetMessages {
    return new TLMessagesGetMessages().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetMessages | PlainMessage<TLMessagesGetMessages> | undefined, b: TLMessagesGetMessages | PlainMessage<TLMessagesGetMessages> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetMessages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDialogs
 */
export class TLMessagesGetDialogs extends Message<TLMessagesGetDialogs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool exclude_pinned = 3;
   */
  excludePinned = false;

  /**
   * @generated from field: repeated google.protobuf.Int32Value folder_id = 4;
   */
  folderId: Int32Value[] = [];

  /**
   * @generated from field: int32 offset_date = 5;
   */
  offsetDate = 0;

  /**
   * @generated from field: int32 offset_id = 6;
   */
  offsetId = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer offset_peer = 7;
   */
  offsetPeer: InputPeer[] = [];

  /**
   * @generated from field: int32 limit = 8;
   */
  limit = 0;

  /**
   * @generated from field: int64 hash = 9;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetDialogs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDialogs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "exclude_pinned", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "folder_id", kind: "message", T: Int32Value, repeated: true },
    { no: 5, name: "offset_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "offset_peer", kind: "message", T: InputPeer, repeated: true },
    { no: 8, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetDialogs {
    return new TLMessagesGetDialogs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetDialogs {
    return new TLMessagesGetDialogs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetDialogs {
    return new TLMessagesGetDialogs().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetDialogs | PlainMessage<TLMessagesGetDialogs> | undefined, b: TLMessagesGetDialogs | PlainMessage<TLMessagesGetDialogs> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetDialogs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetHistory
 */
export class TLMessagesGetHistory extends Message<TLMessagesGetHistory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 offset_id = 4;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 offset_date = 5;
   */
  offsetDate = 0;

  /**
   * @generated from field: int32 add_offset = 6;
   */
  addOffset = 0;

  /**
   * @generated from field: int32 limit = 7;
   */
  limit = 0;

  /**
   * @generated from field: int32 max_id = 8;
   */
  maxId = 0;

  /**
   * @generated from field: int32 min_id = 9;
   */
  minId = 0;

  /**
   * @generated from field: int64 hash = 10;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "offset_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "add_offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "min_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetHistory {
    return new TLMessagesGetHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetHistory {
    return new TLMessagesGetHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetHistory {
    return new TLMessagesGetHistory().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetHistory | PlainMessage<TLMessagesGetHistory> | undefined, b: TLMessagesGetHistory | PlainMessage<TLMessagesGetHistory> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetHistory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSearch
 */
export class TLMessagesSearch extends Message<TLMessagesSearch> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: string q = 4;
   */
  q = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer from_id = 5;
   */
  fromId: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 6;
   */
  topMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessagesFilter filter = 7;
   */
  filter: MessagesFilter[] = [];

  /**
   * @generated from field: int32 min_date = 8;
   */
  minDate = 0;

  /**
   * @generated from field: int32 max_date = 9;
   */
  maxDate = 0;

  /**
   * @generated from field: int32 offset_id = 10;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 add_offset = 11;
   */
  addOffset = 0;

  /**
   * @generated from field: int32 limit = 12;
   */
  limit = 0;

  /**
   * @generated from field: int32 max_id = 13;
   */
  maxId = 0;

  /**
   * @generated from field: int32 min_id = 14;
   */
  minId = 0;

  /**
   * @generated from field: int64 hash = 15;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesSearch>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSearch";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "q", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "from_id", kind: "message", T: InputPeer, repeated: true },
    { no: 6, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 7, name: "filter", kind: "message", T: MessagesFilter, repeated: true },
    { no: 8, name: "min_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "max_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "add_offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "min_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSearch {
    return new TLMessagesSearch().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSearch {
    return new TLMessagesSearch().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSearch {
    return new TLMessagesSearch().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSearch | PlainMessage<TLMessagesSearch> | undefined, b: TLMessagesSearch | PlainMessage<TLMessagesSearch> | undefined): boolean {
    return proto3.util.equals(TLMessagesSearch, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadHistory
 */
export class TLMessagesReadHistory extends Message<TLMessagesReadHistory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 max_id = 4;
   */
  maxId = 0;

  constructor(data?: PartialMessage<TLMessagesReadHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReadHistory {
    return new TLMessagesReadHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReadHistory {
    return new TLMessagesReadHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReadHistory {
    return new TLMessagesReadHistory().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReadHistory | PlainMessage<TLMessagesReadHistory> | undefined, b: TLMessagesReadHistory | PlainMessage<TLMessagesReadHistory> | undefined): boolean {
    return proto3.util.equals(TLMessagesReadHistory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteHistory
 */
export class TLMessagesDeleteHistory extends Message<TLMessagesDeleteHistory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool just_clear = 3;
   */
  justClear = false;

  /**
   * @generated from field: bool revoke = 4;
   */
  revoke = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 5;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 max_id = 6;
   */
  maxId = 0;

  /**
   * @generated from field: repeated google.protobuf.Int32Value min_date = 7;
   */
  minDate: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value max_date = 8;
   */
  maxDate: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesDeleteHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "just_clear", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "revoke", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 6, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "min_date", kind: "message", T: Int32Value, repeated: true },
    { no: 8, name: "max_date", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesDeleteHistory {
    return new TLMessagesDeleteHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesDeleteHistory {
    return new TLMessagesDeleteHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesDeleteHistory {
    return new TLMessagesDeleteHistory().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesDeleteHistory | PlainMessage<TLMessagesDeleteHistory> | undefined, b: TLMessagesDeleteHistory | PlainMessage<TLMessagesDeleteHistory> | undefined): boolean {
    return proto3.util.equals(TLMessagesDeleteHistory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteMessages
 */
export class TLMessagesDeleteMessages extends Message<TLMessagesDeleteMessages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool revoke = 3;
   */
  revoke = false;

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<TLMessagesDeleteMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "revoke", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesDeleteMessages {
    return new TLMessagesDeleteMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesDeleteMessages {
    return new TLMessagesDeleteMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesDeleteMessages {
    return new TLMessagesDeleteMessages().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesDeleteMessages | PlainMessage<TLMessagesDeleteMessages> | undefined, b: TLMessagesDeleteMessages | PlainMessage<TLMessagesDeleteMessages> | undefined): boolean {
    return proto3.util.equals(TLMessagesDeleteMessages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReceivedMessages
 */
export class TLMessagesReceivedMessages extends Message<TLMessagesReceivedMessages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 max_id = 3;
   */
  maxId = 0;

  constructor(data?: PartialMessage<TLMessagesReceivedMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReceivedMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReceivedMessages {
    return new TLMessagesReceivedMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReceivedMessages {
    return new TLMessagesReceivedMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReceivedMessages {
    return new TLMessagesReceivedMessages().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReceivedMessages | PlainMessage<TLMessagesReceivedMessages> | undefined, b: TLMessagesReceivedMessages | PlainMessage<TLMessagesReceivedMessages> | undefined): boolean {
    return proto3.util.equals(TLMessagesReceivedMessages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetTyping
 */
export class TLMessagesSetTyping extends Message<TLMessagesSetTyping> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 4;
   */
  topMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.SendMessageAction action = 5;
   */
  action: SendMessageAction[] = [];

  constructor(data?: PartialMessage<TLMessagesSetTyping>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetTyping";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 5, name: "action", kind: "message", T: SendMessageAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetTyping {
    return new TLMessagesSetTyping().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetTyping {
    return new TLMessagesSetTyping().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetTyping {
    return new TLMessagesSetTyping().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetTyping | PlainMessage<TLMessagesSetTyping> | undefined, b: TLMessagesSetTyping | PlainMessage<TLMessagesSetTyping> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetTyping, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendMessage
 */
export class TLMessagesSendMessage extends Message<TLMessagesSendMessage> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool no_webpage = 3;
   */
  noWebpage = false;

  /**
   * @generated from field: bool silent = 4;
   */
  silent = false;

  /**
   * @generated from field: bool background = 5;
   */
  background = false;

  /**
   * @generated from field: bool clear_draft = 6;
   */
  clearDraft = false;

  /**
   * @generated from field: bool noforwards = 7;
   */
  noforwards = false;

  /**
   * @generated from field: bool update_stickersets_order = 8;
   */
  updateStickersetsOrder = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 9;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputReplyTo reply_to = 10;
   */
  replyTo: InputReplyTo[] = [];

  /**
   * @generated from field: string message = 11;
   */
  message = "";

  /**
   * @generated from field: int64 random_id = 12;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ReplyMarkup reply_markup = 13;
   */
  replyMarkup: ReplyMarkup[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessageEntity entities = 14;
   */
  entities: MessageEntity[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value schedule_date = 15;
   */
  scheduleDate: Int32Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer send_as = 16;
   */
  sendAs: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value reply_to_msg_id = 17;
   */
  replyToMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 18;
   */
  topMsgId: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesSendMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "no_webpage", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "silent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "background", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "clear_draft", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "noforwards", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "update_stickersets_order", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 10, name: "reply_to", kind: "message", T: InputReplyTo, repeated: true },
    { no: 11, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "reply_markup", kind: "message", T: ReplyMarkup, repeated: true },
    { no: 14, name: "entities", kind: "message", T: MessageEntity, repeated: true },
    { no: 15, name: "schedule_date", kind: "message", T: Int32Value, repeated: true },
    { no: 16, name: "send_as", kind: "message", T: InputPeer, repeated: true },
    { no: 17, name: "reply_to_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 18, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendMessage {
    return new TLMessagesSendMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendMessage {
    return new TLMessagesSendMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendMessage {
    return new TLMessagesSendMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendMessage | PlainMessage<TLMessagesSendMessage> | undefined, b: TLMessagesSendMessage | PlainMessage<TLMessagesSendMessage> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendMessage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendMedia
 */
export class TLMessagesSendMedia extends Message<TLMessagesSendMedia> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool silent = 3;
   */
  silent = false;

  /**
   * @generated from field: bool background = 4;
   */
  background = false;

  /**
   * @generated from field: bool clear_draft = 5;
   */
  clearDraft = false;

  /**
   * @generated from field: bool noforwards = 6;
   */
  noforwards = false;

  /**
   * @generated from field: bool update_stickersets_order = 7;
   */
  updateStickersetsOrder = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 8;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputReplyTo reply_to = 9;
   */
  replyTo: InputReplyTo[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputMedia media = 10;
   */
  media: InputMedia[] = [];

  /**
   * @generated from field: string message = 11;
   */
  message = "";

  /**
   * @generated from field: int64 random_id = 12;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ReplyMarkup reply_markup = 13;
   */
  replyMarkup: ReplyMarkup[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessageEntity entities = 14;
   */
  entities: MessageEntity[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value schedule_date = 15;
   */
  scheduleDate: Int32Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer send_as = 16;
   */
  sendAs: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value reply_to_msg_id = 17;
   */
  replyToMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 18;
   */
  topMsgId: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesSendMedia>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendMedia";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "silent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "background", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "clear_draft", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "noforwards", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "update_stickersets_order", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 9, name: "reply_to", kind: "message", T: InputReplyTo, repeated: true },
    { no: 10, name: "media", kind: "message", T: InputMedia, repeated: true },
    { no: 11, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "reply_markup", kind: "message", T: ReplyMarkup, repeated: true },
    { no: 14, name: "entities", kind: "message", T: MessageEntity, repeated: true },
    { no: 15, name: "schedule_date", kind: "message", T: Int32Value, repeated: true },
    { no: 16, name: "send_as", kind: "message", T: InputPeer, repeated: true },
    { no: 17, name: "reply_to_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 18, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendMedia {
    return new TLMessagesSendMedia().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendMedia {
    return new TLMessagesSendMedia().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendMedia {
    return new TLMessagesSendMedia().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendMedia | PlainMessage<TLMessagesSendMedia> | undefined, b: TLMessagesSendMedia | PlainMessage<TLMessagesSendMedia> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendMedia, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesForwardMessages
 */
export class TLMessagesForwardMessages extends Message<TLMessagesForwardMessages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool silent = 3;
   */
  silent = false;

  /**
   * @generated from field: bool background = 4;
   */
  background = false;

  /**
   * @generated from field: bool with_my_score = 5;
   */
  withMyScore = false;

  /**
   * @generated from field: bool drop_author = 6;
   */
  dropAuthor = false;

  /**
   * @generated from field: bool drop_media_captions = 7;
   */
  dropMediaCaptions = false;

  /**
   * @generated from field: bool noforwards = 8;
   */
  noforwards = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer from_peer = 9;
   */
  fromPeer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 10;
   */
  id = 0;

  /**
   * @generated from field: int64 random_id = 11;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer to_peer = 12;
   */
  toPeer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 13;
   */
  topMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value schedule_date = 14;
   */
  scheduleDate: Int32Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer send_as = 15;
   */
  sendAs: InputPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesForwardMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesForwardMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "silent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "background", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "with_my_score", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "drop_author", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "drop_media_captions", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "noforwards", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "from_peer", kind: "message", T: InputPeer, repeated: true },
    { no: 10, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "to_peer", kind: "message", T: InputPeer, repeated: true },
    { no: 13, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 14, name: "schedule_date", kind: "message", T: Int32Value, repeated: true },
    { no: 15, name: "send_as", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesForwardMessages {
    return new TLMessagesForwardMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesForwardMessages {
    return new TLMessagesForwardMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesForwardMessages {
    return new TLMessagesForwardMessages().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesForwardMessages | PlainMessage<TLMessagesForwardMessages> | undefined, b: TLMessagesForwardMessages | PlainMessage<TLMessagesForwardMessages> | undefined): boolean {
    return proto3.util.equals(TLMessagesForwardMessages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReportSpam
 */
export class TLMessagesReportSpam extends Message<TLMessagesReportSpam> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesReportSpam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReportSpam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReportSpam {
    return new TLMessagesReportSpam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReportSpam {
    return new TLMessagesReportSpam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReportSpam {
    return new TLMessagesReportSpam().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReportSpam | PlainMessage<TLMessagesReportSpam> | undefined, b: TLMessagesReportSpam | PlainMessage<TLMessagesReportSpam> | undefined): boolean {
    return proto3.util.equals(TLMessagesReportSpam, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetPeerSettings
 */
export class TLMessagesGetPeerSettings extends Message<TLMessagesGetPeerSettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesGetPeerSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetPeerSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetPeerSettings {
    return new TLMessagesGetPeerSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetPeerSettings {
    return new TLMessagesGetPeerSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetPeerSettings {
    return new TLMessagesGetPeerSettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetPeerSettings | PlainMessage<TLMessagesGetPeerSettings> | undefined, b: TLMessagesGetPeerSettings | PlainMessage<TLMessagesGetPeerSettings> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetPeerSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReport
 */
export class TLMessagesReport extends Message<TLMessagesReport> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ReportReason reason = 5;
   */
  reason: ReportReason[] = [];

  /**
   * @generated from field: string message = 6;
   */
  message = "";

  constructor(data?: PartialMessage<TLMessagesReport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "reason", kind: "message", T: ReportReason, repeated: true },
    { no: 6, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReport {
    return new TLMessagesReport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReport {
    return new TLMessagesReport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReport {
    return new TLMessagesReport().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReport | PlainMessage<TLMessagesReport> | undefined, b: TLMessagesReport | PlainMessage<TLMessagesReport> | undefined): boolean {
    return proto3.util.equals(TLMessagesReport, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetChats
 */
export class TLMessagesGetChats extends Message<TLMessagesGetChats> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 id = 3;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetChats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetChats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetChats {
    return new TLMessagesGetChats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetChats {
    return new TLMessagesGetChats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetChats {
    return new TLMessagesGetChats().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetChats | PlainMessage<TLMessagesGetChats> | undefined, b: TLMessagesGetChats | PlainMessage<TLMessagesGetChats> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetChats, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetFullChat
 */
export class TLMessagesGetFullChat extends Message<TLMessagesGetFullChat> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 chat_id = 3;
   */
  chatId = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetFullChat>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetFullChat";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chat_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetFullChat {
    return new TLMessagesGetFullChat().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetFullChat {
    return new TLMessagesGetFullChat().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetFullChat {
    return new TLMessagesGetFullChat().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetFullChat | PlainMessage<TLMessagesGetFullChat> | undefined, b: TLMessagesGetFullChat | PlainMessage<TLMessagesGetFullChat> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetFullChat, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditChatTitle
 */
export class TLMessagesEditChatTitle extends Message<TLMessagesEditChatTitle> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 chat_id = 3;
   */
  chatId = protoInt64.zero;

  /**
   * @generated from field: string title = 4;
   */
  title = "";

  constructor(data?: PartialMessage<TLMessagesEditChatTitle>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditChatTitle";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chat_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesEditChatTitle {
    return new TLMessagesEditChatTitle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesEditChatTitle {
    return new TLMessagesEditChatTitle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesEditChatTitle {
    return new TLMessagesEditChatTitle().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesEditChatTitle | PlainMessage<TLMessagesEditChatTitle> | undefined, b: TLMessagesEditChatTitle | PlainMessage<TLMessagesEditChatTitle> | undefined): boolean {
    return proto3.util.equals(TLMessagesEditChatTitle, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditChatPhoto
 */
export class TLMessagesEditChatPhoto extends Message<TLMessagesEditChatPhoto> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 chat_id = 3;
   */
  chatId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChatPhoto photo = 4;
   */
  photo: InputChatPhoto[] = [];

  constructor(data?: PartialMessage<TLMessagesEditChatPhoto>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditChatPhoto";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chat_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "photo", kind: "message", T: InputChatPhoto, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesEditChatPhoto {
    return new TLMessagesEditChatPhoto().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesEditChatPhoto {
    return new TLMessagesEditChatPhoto().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesEditChatPhoto {
    return new TLMessagesEditChatPhoto().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesEditChatPhoto | PlainMessage<TLMessagesEditChatPhoto> | undefined, b: TLMessagesEditChatPhoto | PlainMessage<TLMessagesEditChatPhoto> | undefined): boolean {
    return proto3.util.equals(TLMessagesEditChatPhoto, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesAddChatUser
 */
export class TLMessagesAddChatUser extends Message<TLMessagesAddChatUser> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 chat_id = 3;
   */
  chatId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 4;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: int32 fwd_limit = 5;
   */
  fwdLimit = 0;

  constructor(data?: PartialMessage<TLMessagesAddChatUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesAddChatUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chat_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 5, name: "fwd_limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesAddChatUser {
    return new TLMessagesAddChatUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesAddChatUser {
    return new TLMessagesAddChatUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesAddChatUser {
    return new TLMessagesAddChatUser().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesAddChatUser | PlainMessage<TLMessagesAddChatUser> | undefined, b: TLMessagesAddChatUser | PlainMessage<TLMessagesAddChatUser> | undefined): boolean {
    return proto3.util.equals(TLMessagesAddChatUser, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteChatUser
 */
export class TLMessagesDeleteChatUser extends Message<TLMessagesDeleteChatUser> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool revoke_history = 3;
   */
  revokeHistory = false;

  /**
   * @generated from field: int64 chat_id = 4;
   */
  chatId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 5;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLMessagesDeleteChatUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteChatUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "revoke_history", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "chat_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesDeleteChatUser {
    return new TLMessagesDeleteChatUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesDeleteChatUser {
    return new TLMessagesDeleteChatUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesDeleteChatUser {
    return new TLMessagesDeleteChatUser().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesDeleteChatUser | PlainMessage<TLMessagesDeleteChatUser> | undefined, b: TLMessagesDeleteChatUser | PlainMessage<TLMessagesDeleteChatUser> | undefined): boolean {
    return proto3.util.equals(TLMessagesDeleteChatUser, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesCreateChat
 */
export class TLMessagesCreateChat extends Message<TLMessagesCreateChat> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser users = 3;
   */
  users: InputUser[] = [];

  /**
   * @generated from field: string title = 4;
   */
  title = "";

  /**
   * @generated from field: repeated google.protobuf.Int32Value ttl_period = 5;
   */
  ttlPeriod: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesCreateChat>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesCreateChat";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "users", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "ttl_period", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesCreateChat {
    return new TLMessagesCreateChat().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesCreateChat {
    return new TLMessagesCreateChat().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesCreateChat {
    return new TLMessagesCreateChat().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesCreateChat | PlainMessage<TLMessagesCreateChat> | undefined, b: TLMessagesCreateChat | PlainMessage<TLMessagesCreateChat> | undefined): boolean {
    return proto3.util.equals(TLMessagesCreateChat, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDhConfig
 */
export class TLMessagesGetDhConfig extends Message<TLMessagesGetDhConfig> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 version = 3;
   */
  version = 0;

  /**
   * @generated from field: int32 random_length = 4;
   */
  randomLength = 0;

  constructor(data?: PartialMessage<TLMessagesGetDhConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDhConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "random_length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetDhConfig {
    return new TLMessagesGetDhConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetDhConfig {
    return new TLMessagesGetDhConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetDhConfig {
    return new TLMessagesGetDhConfig().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetDhConfig | PlainMessage<TLMessagesGetDhConfig> | undefined, b: TLMessagesGetDhConfig | PlainMessage<TLMessagesGetDhConfig> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetDhConfig, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesRequestEncryption
 */
export class TLMessagesRequestEncryption extends Message<TLMessagesRequestEncryption> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 3;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: int32 random_id = 4;
   */
  randomId = 0;

  /**
   * @generated from field: bytes g_a = 5;
   */
  gA = new Uint8Array(0);

  constructor(data?: PartialMessage<TLMessagesRequestEncryption>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesRequestEncryption";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "random_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "g_a", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesRequestEncryption {
    return new TLMessagesRequestEncryption().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesRequestEncryption {
    return new TLMessagesRequestEncryption().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesRequestEncryption {
    return new TLMessagesRequestEncryption().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesRequestEncryption | PlainMessage<TLMessagesRequestEncryption> | undefined, b: TLMessagesRequestEncryption | PlainMessage<TLMessagesRequestEncryption> | undefined): boolean {
    return proto3.util.equals(TLMessagesRequestEncryption, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesAcceptEncryption
 */
export class TLMessagesAcceptEncryption extends Message<TLMessagesAcceptEncryption> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputEncryptedChat peer = 3;
   */
  peer: InputEncryptedChat[] = [];

  /**
   * @generated from field: bytes g_b = 4;
   */
  gB = new Uint8Array(0);

  /**
   * @generated from field: int64 key_fingerprint = 5;
   */
  keyFingerprint = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesAcceptEncryption>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesAcceptEncryption";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputEncryptedChat, repeated: true },
    { no: 4, name: "g_b", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "key_fingerprint", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesAcceptEncryption {
    return new TLMessagesAcceptEncryption().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesAcceptEncryption {
    return new TLMessagesAcceptEncryption().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesAcceptEncryption {
    return new TLMessagesAcceptEncryption().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesAcceptEncryption | PlainMessage<TLMessagesAcceptEncryption> | undefined, b: TLMessagesAcceptEncryption | PlainMessage<TLMessagesAcceptEncryption> | undefined): boolean {
    return proto3.util.equals(TLMessagesAcceptEncryption, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesDiscardEncryption
 */
export class TLMessagesDiscardEncryption extends Message<TLMessagesDiscardEncryption> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool delete_history = 3;
   */
  deleteHistory = false;

  /**
   * @generated from field: int32 chat_id = 4;
   */
  chatId = 0;

  constructor(data?: PartialMessage<TLMessagesDiscardEncryption>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesDiscardEncryption";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "delete_history", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "chat_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesDiscardEncryption {
    return new TLMessagesDiscardEncryption().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesDiscardEncryption {
    return new TLMessagesDiscardEncryption().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesDiscardEncryption {
    return new TLMessagesDiscardEncryption().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesDiscardEncryption | PlainMessage<TLMessagesDiscardEncryption> | undefined, b: TLMessagesDiscardEncryption | PlainMessage<TLMessagesDiscardEncryption> | undefined): boolean {
    return proto3.util.equals(TLMessagesDiscardEncryption, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetEncryptedTyping
 */
export class TLMessagesSetEncryptedTyping extends Message<TLMessagesSetEncryptedTyping> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputEncryptedChat peer = 3;
   */
  peer: InputEncryptedChat[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool typing = 4;
   */
  typing: Bool[] = [];

  constructor(data?: PartialMessage<TLMessagesSetEncryptedTyping>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetEncryptedTyping";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputEncryptedChat, repeated: true },
    { no: 4, name: "typing", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetEncryptedTyping {
    return new TLMessagesSetEncryptedTyping().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetEncryptedTyping {
    return new TLMessagesSetEncryptedTyping().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetEncryptedTyping {
    return new TLMessagesSetEncryptedTyping().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetEncryptedTyping | PlainMessage<TLMessagesSetEncryptedTyping> | undefined, b: TLMessagesSetEncryptedTyping | PlainMessage<TLMessagesSetEncryptedTyping> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetEncryptedTyping, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadEncryptedHistory
 */
export class TLMessagesReadEncryptedHistory extends Message<TLMessagesReadEncryptedHistory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputEncryptedChat peer = 3;
   */
  peer: InputEncryptedChat[] = [];

  /**
   * @generated from field: int32 max_date = 4;
   */
  maxDate = 0;

  constructor(data?: PartialMessage<TLMessagesReadEncryptedHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadEncryptedHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputEncryptedChat, repeated: true },
    { no: 4, name: "max_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReadEncryptedHistory {
    return new TLMessagesReadEncryptedHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReadEncryptedHistory {
    return new TLMessagesReadEncryptedHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReadEncryptedHistory {
    return new TLMessagesReadEncryptedHistory().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReadEncryptedHistory | PlainMessage<TLMessagesReadEncryptedHistory> | undefined, b: TLMessagesReadEncryptedHistory | PlainMessage<TLMessagesReadEncryptedHistory> | undefined): boolean {
    return proto3.util.equals(TLMessagesReadEncryptedHistory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendEncrypted
 */
export class TLMessagesSendEncrypted extends Message<TLMessagesSendEncrypted> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool silent = 3;
   */
  silent = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputEncryptedChat peer = 4;
   */
  peer: InputEncryptedChat[] = [];

  /**
   * @generated from field: int64 random_id = 5;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: bytes data = 6;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<TLMessagesSendEncrypted>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendEncrypted";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "silent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputEncryptedChat, repeated: true },
    { no: 5, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendEncrypted {
    return new TLMessagesSendEncrypted().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendEncrypted {
    return new TLMessagesSendEncrypted().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendEncrypted {
    return new TLMessagesSendEncrypted().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendEncrypted | PlainMessage<TLMessagesSendEncrypted> | undefined, b: TLMessagesSendEncrypted | PlainMessage<TLMessagesSendEncrypted> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendEncrypted, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendEncryptedFile
 */
export class TLMessagesSendEncryptedFile extends Message<TLMessagesSendEncryptedFile> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool silent = 3;
   */
  silent = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputEncryptedChat peer = 4;
   */
  peer: InputEncryptedChat[] = [];

  /**
   * @generated from field: int64 random_id = 5;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: bytes data = 6;
   */
  data = new Uint8Array(0);

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputEncryptedFile file = 7;
   */
  file: InputEncryptedFile[] = [];

  constructor(data?: PartialMessage<TLMessagesSendEncryptedFile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendEncryptedFile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "silent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputEncryptedChat, repeated: true },
    { no: 5, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "file", kind: "message", T: InputEncryptedFile, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendEncryptedFile {
    return new TLMessagesSendEncryptedFile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendEncryptedFile {
    return new TLMessagesSendEncryptedFile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendEncryptedFile {
    return new TLMessagesSendEncryptedFile().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendEncryptedFile | PlainMessage<TLMessagesSendEncryptedFile> | undefined, b: TLMessagesSendEncryptedFile | PlainMessage<TLMessagesSendEncryptedFile> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendEncryptedFile, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendEncryptedService
 */
export class TLMessagesSendEncryptedService extends Message<TLMessagesSendEncryptedService> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputEncryptedChat peer = 3;
   */
  peer: InputEncryptedChat[] = [];

  /**
   * @generated from field: int64 random_id = 4;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: bytes data = 5;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<TLMessagesSendEncryptedService>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendEncryptedService";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputEncryptedChat, repeated: true },
    { no: 4, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendEncryptedService {
    return new TLMessagesSendEncryptedService().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendEncryptedService {
    return new TLMessagesSendEncryptedService().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendEncryptedService {
    return new TLMessagesSendEncryptedService().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendEncryptedService | PlainMessage<TLMessagesSendEncryptedService> | undefined, b: TLMessagesSendEncryptedService | PlainMessage<TLMessagesSendEncryptedService> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendEncryptedService, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReceivedQueue
 */
export class TLMessagesReceivedQueue extends Message<TLMessagesReceivedQueue> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 max_qts = 3;
   */
  maxQts = 0;

  constructor(data?: PartialMessage<TLMessagesReceivedQueue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReceivedQueue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "max_qts", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReceivedQueue {
    return new TLMessagesReceivedQueue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReceivedQueue {
    return new TLMessagesReceivedQueue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReceivedQueue {
    return new TLMessagesReceivedQueue().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReceivedQueue | PlainMessage<TLMessagesReceivedQueue> | undefined, b: TLMessagesReceivedQueue | PlainMessage<TLMessagesReceivedQueue> | undefined): boolean {
    return proto3.util.equals(TLMessagesReceivedQueue, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReportEncryptedSpam
 */
export class TLMessagesReportEncryptedSpam extends Message<TLMessagesReportEncryptedSpam> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputEncryptedChat peer = 3;
   */
  peer: InputEncryptedChat[] = [];

  constructor(data?: PartialMessage<TLMessagesReportEncryptedSpam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReportEncryptedSpam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputEncryptedChat, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReportEncryptedSpam {
    return new TLMessagesReportEncryptedSpam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReportEncryptedSpam {
    return new TLMessagesReportEncryptedSpam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReportEncryptedSpam {
    return new TLMessagesReportEncryptedSpam().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReportEncryptedSpam | PlainMessage<TLMessagesReportEncryptedSpam> | undefined, b: TLMessagesReportEncryptedSpam | PlainMessage<TLMessagesReportEncryptedSpam> | undefined): boolean {
    return proto3.util.equals(TLMessagesReportEncryptedSpam, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadMessageContents
 */
export class TLMessagesReadMessageContents extends Message<TLMessagesReadMessageContents> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 id = 3;
   */
  id = 0;

  constructor(data?: PartialMessage<TLMessagesReadMessageContents>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadMessageContents";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReadMessageContents {
    return new TLMessagesReadMessageContents().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReadMessageContents {
    return new TLMessagesReadMessageContents().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReadMessageContents {
    return new TLMessagesReadMessageContents().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReadMessageContents | PlainMessage<TLMessagesReadMessageContents> | undefined, b: TLMessagesReadMessageContents | PlainMessage<TLMessagesReadMessageContents> | undefined): boolean {
    return proto3.util.equals(TLMessagesReadMessageContents, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetStickers
 */
export class TLMessagesGetStickers extends Message<TLMessagesGetStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string emoticon = 3;
   */
  emoticon = "";

  /**
   * @generated from field: int64 hash = 4;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "emoticon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetStickers {
    return new TLMessagesGetStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetStickers {
    return new TLMessagesGetStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetStickers {
    return new TLMessagesGetStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetStickers | PlainMessage<TLMessagesGetStickers> | undefined, b: TLMessagesGetStickers | PlainMessage<TLMessagesGetStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAllStickers
 */
export class TLMessagesGetAllStickers extends Message<TLMessagesGetAllStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetAllStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAllStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetAllStickers {
    return new TLMessagesGetAllStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetAllStickers {
    return new TLMessagesGetAllStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetAllStickers {
    return new TLMessagesGetAllStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetAllStickers | PlainMessage<TLMessagesGetAllStickers> | undefined, b: TLMessagesGetAllStickers | PlainMessage<TLMessagesGetAllStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetAllStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetWebPagePreview
 */
export class TLMessagesGetWebPagePreview extends Message<TLMessagesGetWebPagePreview> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string message = 3;
   */
  message = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessageEntity entities = 4;
   */
  entities: MessageEntity[] = [];

  constructor(data?: PartialMessage<TLMessagesGetWebPagePreview>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetWebPagePreview";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "entities", kind: "message", T: MessageEntity, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetWebPagePreview {
    return new TLMessagesGetWebPagePreview().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetWebPagePreview {
    return new TLMessagesGetWebPagePreview().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetWebPagePreview {
    return new TLMessagesGetWebPagePreview().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetWebPagePreview | PlainMessage<TLMessagesGetWebPagePreview> | undefined, b: TLMessagesGetWebPagePreview | PlainMessage<TLMessagesGetWebPagePreview> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetWebPagePreview, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesExportChatInvite
 */
export class TLMessagesExportChatInvite extends Message<TLMessagesExportChatInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool legacy_revoke_permanent = 3;
   */
  legacyRevokePermanent = false;

  /**
   * @generated from field: bool request_needed = 4;
   */
  requestNeeded = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 5;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value expire_date = 6;
   */
  expireDate: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value usage_limit = 7;
   */
  usageLimit: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue title = 8;
   */
  title: StringValue[] = [];

  constructor(data?: PartialMessage<TLMessagesExportChatInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesExportChatInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "legacy_revoke_permanent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "request_needed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 6, name: "expire_date", kind: "message", T: Int32Value, repeated: true },
    { no: 7, name: "usage_limit", kind: "message", T: Int32Value, repeated: true },
    { no: 8, name: "title", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesExportChatInvite {
    return new TLMessagesExportChatInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesExportChatInvite {
    return new TLMessagesExportChatInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesExportChatInvite {
    return new TLMessagesExportChatInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesExportChatInvite | PlainMessage<TLMessagesExportChatInvite> | undefined, b: TLMessagesExportChatInvite | PlainMessage<TLMessagesExportChatInvite> | undefined): boolean {
    return proto3.util.equals(TLMessagesExportChatInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesCheckChatInvite
 */
export class TLMessagesCheckChatInvite extends Message<TLMessagesCheckChatInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string hash = 3;
   */
  hash = "";

  constructor(data?: PartialMessage<TLMessagesCheckChatInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesCheckChatInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesCheckChatInvite {
    return new TLMessagesCheckChatInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesCheckChatInvite {
    return new TLMessagesCheckChatInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesCheckChatInvite {
    return new TLMessagesCheckChatInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesCheckChatInvite | PlainMessage<TLMessagesCheckChatInvite> | undefined, b: TLMessagesCheckChatInvite | PlainMessage<TLMessagesCheckChatInvite> | undefined): boolean {
    return proto3.util.equals(TLMessagesCheckChatInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesImportChatInvite
 */
export class TLMessagesImportChatInvite extends Message<TLMessagesImportChatInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string hash = 3;
   */
  hash = "";

  constructor(data?: PartialMessage<TLMessagesImportChatInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesImportChatInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesImportChatInvite {
    return new TLMessagesImportChatInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesImportChatInvite {
    return new TLMessagesImportChatInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesImportChatInvite {
    return new TLMessagesImportChatInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesImportChatInvite | PlainMessage<TLMessagesImportChatInvite> | undefined, b: TLMessagesImportChatInvite | PlainMessage<TLMessagesImportChatInvite> | undefined): boolean {
    return proto3.util.equals(TLMessagesImportChatInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetStickerSet
 */
export class TLMessagesGetStickerSet extends Message<TLMessagesGetStickerSet> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickerSet stickerset = 3;
   */
  stickerset: InputStickerSet[] = [];

  /**
   * @generated from field: int32 hash = 4;
   */
  hash = 0;

  constructor(data?: PartialMessage<TLMessagesGetStickerSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetStickerSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "stickerset", kind: "message", T: InputStickerSet, repeated: true },
    { no: 4, name: "hash", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetStickerSet {
    return new TLMessagesGetStickerSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetStickerSet {
    return new TLMessagesGetStickerSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetStickerSet {
    return new TLMessagesGetStickerSet().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetStickerSet | PlainMessage<TLMessagesGetStickerSet> | undefined, b: TLMessagesGetStickerSet | PlainMessage<TLMessagesGetStickerSet> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetStickerSet, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesInstallStickerSet
 */
export class TLMessagesInstallStickerSet extends Message<TLMessagesInstallStickerSet> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickerSet stickerset = 3;
   */
  stickerset: InputStickerSet[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool archived = 4;
   */
  archived: Bool[] = [];

  constructor(data?: PartialMessage<TLMessagesInstallStickerSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesInstallStickerSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "stickerset", kind: "message", T: InputStickerSet, repeated: true },
    { no: 4, name: "archived", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesInstallStickerSet {
    return new TLMessagesInstallStickerSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesInstallStickerSet {
    return new TLMessagesInstallStickerSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesInstallStickerSet {
    return new TLMessagesInstallStickerSet().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesInstallStickerSet | PlainMessage<TLMessagesInstallStickerSet> | undefined, b: TLMessagesInstallStickerSet | PlainMessage<TLMessagesInstallStickerSet> | undefined): boolean {
    return proto3.util.equals(TLMessagesInstallStickerSet, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesUninstallStickerSet
 */
export class TLMessagesUninstallStickerSet extends Message<TLMessagesUninstallStickerSet> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickerSet stickerset = 3;
   */
  stickerset: InputStickerSet[] = [];

  constructor(data?: PartialMessage<TLMessagesUninstallStickerSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesUninstallStickerSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "stickerset", kind: "message", T: InputStickerSet, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesUninstallStickerSet {
    return new TLMessagesUninstallStickerSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesUninstallStickerSet {
    return new TLMessagesUninstallStickerSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesUninstallStickerSet {
    return new TLMessagesUninstallStickerSet().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesUninstallStickerSet | PlainMessage<TLMessagesUninstallStickerSet> | undefined, b: TLMessagesUninstallStickerSet | PlainMessage<TLMessagesUninstallStickerSet> | undefined): boolean {
    return proto3.util.equals(TLMessagesUninstallStickerSet, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesStartBot
 */
export class TLMessagesStartBot extends Message<TLMessagesStartBot> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 3;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int64 random_id = 5;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: string start_param = 6;
   */
  startParam = "";

  constructor(data?: PartialMessage<TLMessagesStartBot>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesStartBot";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "start_param", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesStartBot {
    return new TLMessagesStartBot().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesStartBot {
    return new TLMessagesStartBot().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesStartBot {
    return new TLMessagesStartBot().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesStartBot | PlainMessage<TLMessagesStartBot> | undefined, b: TLMessagesStartBot | PlainMessage<TLMessagesStartBot> | undefined): boolean {
    return proto3.util.equals(TLMessagesStartBot, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessagesViews
 */
export class TLMessagesGetMessagesViews extends Message<TLMessagesGetMessagesViews> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool increment = 5;
   */
  increment: Bool[] = [];

  constructor(data?: PartialMessage<TLMessagesGetMessagesViews>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessagesViews";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "increment", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetMessagesViews {
    return new TLMessagesGetMessagesViews().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetMessagesViews {
    return new TLMessagesGetMessagesViews().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetMessagesViews {
    return new TLMessagesGetMessagesViews().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetMessagesViews | PlainMessage<TLMessagesGetMessagesViews> | undefined, b: TLMessagesGetMessagesViews | PlainMessage<TLMessagesGetMessagesViews> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetMessagesViews, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditChatAdmin
 */
export class TLMessagesEditChatAdmin extends Message<TLMessagesEditChatAdmin> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 chat_id = 3;
   */
  chatId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 4;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool is_admin = 5;
   */
  isAdmin: Bool[] = [];

  constructor(data?: PartialMessage<TLMessagesEditChatAdmin>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditChatAdmin";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chat_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 5, name: "is_admin", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesEditChatAdmin {
    return new TLMessagesEditChatAdmin().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesEditChatAdmin {
    return new TLMessagesEditChatAdmin().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesEditChatAdmin {
    return new TLMessagesEditChatAdmin().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesEditChatAdmin | PlainMessage<TLMessagesEditChatAdmin> | undefined, b: TLMessagesEditChatAdmin | PlainMessage<TLMessagesEditChatAdmin> | undefined): boolean {
    return proto3.util.equals(TLMessagesEditChatAdmin, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesMigrateChat
 */
export class TLMessagesMigrateChat extends Message<TLMessagesMigrateChat> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 chat_id = 3;
   */
  chatId = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesMigrateChat>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesMigrateChat";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chat_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesMigrateChat {
    return new TLMessagesMigrateChat().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesMigrateChat {
    return new TLMessagesMigrateChat().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesMigrateChat {
    return new TLMessagesMigrateChat().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesMigrateChat | PlainMessage<TLMessagesMigrateChat> | undefined, b: TLMessagesMigrateChat | PlainMessage<TLMessagesMigrateChat> | undefined): boolean {
    return proto3.util.equals(TLMessagesMigrateChat, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSearchGlobal
 */
export class TLMessagesSearchGlobal extends Message<TLMessagesSearchGlobal> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated google.protobuf.Int32Value folder_id = 3;
   */
  folderId: Int32Value[] = [];

  /**
   * @generated from field: string q = 4;
   */
  q = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessagesFilter filter = 5;
   */
  filter: MessagesFilter[] = [];

  /**
   * @generated from field: int32 min_date = 6;
   */
  minDate = 0;

  /**
   * @generated from field: int32 max_date = 7;
   */
  maxDate = 0;

  /**
   * @generated from field: int32 offset_rate = 8;
   */
  offsetRate = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer offset_peer = 9;
   */
  offsetPeer: InputPeer[] = [];

  /**
   * @generated from field: int32 offset_id = 10;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 limit = 11;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLMessagesSearchGlobal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSearchGlobal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "folder_id", kind: "message", T: Int32Value, repeated: true },
    { no: 4, name: "q", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "filter", kind: "message", T: MessagesFilter, repeated: true },
    { no: 6, name: "min_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "max_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "offset_rate", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "offset_peer", kind: "message", T: InputPeer, repeated: true },
    { no: 10, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSearchGlobal {
    return new TLMessagesSearchGlobal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSearchGlobal {
    return new TLMessagesSearchGlobal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSearchGlobal {
    return new TLMessagesSearchGlobal().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSearchGlobal | PlainMessage<TLMessagesSearchGlobal> | undefined, b: TLMessagesSearchGlobal | PlainMessage<TLMessagesSearchGlobal> | undefined): boolean {
    return proto3.util.equals(TLMessagesSearchGlobal, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReorderStickerSets
 */
export class TLMessagesReorderStickerSets extends Message<TLMessagesReorderStickerSets> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool masks = 3;
   */
  masks = false;

  /**
   * @generated from field: bool emojis = 4;
   */
  emojis = false;

  /**
   * @generated from field: int64 order = 5;
   */
  order = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesReorderStickerSets>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReorderStickerSets";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "masks", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "emojis", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "order", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReorderStickerSets {
    return new TLMessagesReorderStickerSets().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReorderStickerSets {
    return new TLMessagesReorderStickerSets().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReorderStickerSets {
    return new TLMessagesReorderStickerSets().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReorderStickerSets | PlainMessage<TLMessagesReorderStickerSets> | undefined, b: TLMessagesReorderStickerSets | PlainMessage<TLMessagesReorderStickerSets> | undefined): boolean {
    return proto3.util.equals(TLMessagesReorderStickerSets, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDocumentByHash
 */
export class TLMessagesGetDocumentByHash extends Message<TLMessagesGetDocumentByHash> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bytes sha256 = 3;
   */
  sha256 = new Uint8Array(0);

  /**
   * @generated from field: int64 size2_INT64 = 4;
   */
  size2INT64 = protoInt64.zero;

  /**
   * @generated from field: string mime_type = 5;
   */
  mimeType = "";

  /**
   * @generated from field: int32 size2_INT32 = 6;
   */
  size2INT32 = 0;

  constructor(data?: PartialMessage<TLMessagesGetDocumentByHash>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDocumentByHash";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "sha256", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "size2_INT64", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "mime_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "size2_INT32", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetDocumentByHash {
    return new TLMessagesGetDocumentByHash().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetDocumentByHash {
    return new TLMessagesGetDocumentByHash().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetDocumentByHash {
    return new TLMessagesGetDocumentByHash().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetDocumentByHash | PlainMessage<TLMessagesGetDocumentByHash> | undefined, b: TLMessagesGetDocumentByHash | PlainMessage<TLMessagesGetDocumentByHash> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetDocumentByHash, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSavedGifs
 */
export class TLMessagesGetSavedGifs extends Message<TLMessagesGetSavedGifs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetSavedGifs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSavedGifs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetSavedGifs {
    return new TLMessagesGetSavedGifs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetSavedGifs {
    return new TLMessagesGetSavedGifs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetSavedGifs {
    return new TLMessagesGetSavedGifs().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetSavedGifs | PlainMessage<TLMessagesGetSavedGifs> | undefined, b: TLMessagesGetSavedGifs | PlainMessage<TLMessagesGetSavedGifs> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetSavedGifs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSaveGif
 */
export class TLMessagesSaveGif extends Message<TLMessagesSaveGif> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDocument id = 3;
   */
  id: InputDocument[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool unsave = 4;
   */
  unsave: Bool[] = [];

  constructor(data?: PartialMessage<TLMessagesSaveGif>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSaveGif";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputDocument, repeated: true },
    { no: 4, name: "unsave", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSaveGif {
    return new TLMessagesSaveGif().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSaveGif {
    return new TLMessagesSaveGif().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSaveGif {
    return new TLMessagesSaveGif().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSaveGif | PlainMessage<TLMessagesSaveGif> | undefined, b: TLMessagesSaveGif | PlainMessage<TLMessagesSaveGif> | undefined): boolean {
    return proto3.util.equals(TLMessagesSaveGif, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetInlineBotResults
 */
export class TLMessagesGetInlineBotResults extends Message<TLMessagesGetInlineBotResults> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 3;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGeoPoint geo_point = 5;
   */
  geoPoint: InputGeoPoint[] = [];

  /**
   * @generated from field: string query = 6;
   */
  query = "";

  /**
   * @generated from field: string offset = 7;
   */
  offset = "";

  constructor(data?: PartialMessage<TLMessagesGetInlineBotResults>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetInlineBotResults";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "geo_point", kind: "message", T: InputGeoPoint, repeated: true },
    { no: 6, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "offset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetInlineBotResults {
    return new TLMessagesGetInlineBotResults().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetInlineBotResults {
    return new TLMessagesGetInlineBotResults().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetInlineBotResults {
    return new TLMessagesGetInlineBotResults().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetInlineBotResults | PlainMessage<TLMessagesGetInlineBotResults> | undefined, b: TLMessagesGetInlineBotResults | PlainMessage<TLMessagesGetInlineBotResults> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetInlineBotResults, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetInlineBotResults
 */
export class TLMessagesSetInlineBotResults extends Message<TLMessagesSetInlineBotResults> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool gallery = 3;
   */
  gallery = false;

  /**
   * @generated from field: bool private = 4;
   */
  private = false;

  /**
   * @generated from field: int64 query_id = 5;
   */
  queryId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputBotInlineResult results = 6;
   */
  results: InputBotInlineResult[] = [];

  /**
   * @generated from field: int32 cache_time = 7;
   */
  cacheTime = 0;

  /**
   * @generated from field: repeated google.protobuf.StringValue next_offset = 8;
   */
  nextOffset: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InlineBotSwitchPM switch_pm = 9;
   */
  switchPm: InlineBotSwitchPM[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InlineBotWebView switch_webview = 10;
   */
  switchWebview: InlineBotWebView[] = [];

  constructor(data?: PartialMessage<TLMessagesSetInlineBotResults>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetInlineBotResults";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "gallery", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "private", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "query_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "results", kind: "message", T: InputBotInlineResult, repeated: true },
    { no: 7, name: "cache_time", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "next_offset", kind: "message", T: StringValue, repeated: true },
    { no: 9, name: "switch_pm", kind: "message", T: InlineBotSwitchPM, repeated: true },
    { no: 10, name: "switch_webview", kind: "message", T: InlineBotWebView, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetInlineBotResults {
    return new TLMessagesSetInlineBotResults().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetInlineBotResults {
    return new TLMessagesSetInlineBotResults().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetInlineBotResults {
    return new TLMessagesSetInlineBotResults().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetInlineBotResults | PlainMessage<TLMessagesSetInlineBotResults> | undefined, b: TLMessagesSetInlineBotResults | PlainMessage<TLMessagesSetInlineBotResults> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetInlineBotResults, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendInlineBotResult
 */
export class TLMessagesSendInlineBotResult extends Message<TLMessagesSendInlineBotResult> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool silent = 3;
   */
  silent = false;

  /**
   * @generated from field: bool background = 4;
   */
  background = false;

  /**
   * @generated from field: bool clear_draft = 5;
   */
  clearDraft = false;

  /**
   * @generated from field: bool hide_via = 6;
   */
  hideVia = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 7;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputReplyTo reply_to = 8;
   */
  replyTo: InputReplyTo[] = [];

  /**
   * @generated from field: int64 random_id = 9;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: int64 query_id = 10;
   */
  queryId = protoInt64.zero;

  /**
   * @generated from field: string id = 11;
   */
  id = "";

  /**
   * @generated from field: repeated google.protobuf.Int32Value schedule_date = 12;
   */
  scheduleDate: Int32Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer send_as = 13;
   */
  sendAs: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value reply_to_msg_id = 14;
   */
  replyToMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 15;
   */
  topMsgId: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesSendInlineBotResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendInlineBotResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "silent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "background", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "clear_draft", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "hide_via", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 8, name: "reply_to", kind: "message", T: InputReplyTo, repeated: true },
    { no: 9, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "query_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "schedule_date", kind: "message", T: Int32Value, repeated: true },
    { no: 13, name: "send_as", kind: "message", T: InputPeer, repeated: true },
    { no: 14, name: "reply_to_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 15, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendInlineBotResult {
    return new TLMessagesSendInlineBotResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendInlineBotResult {
    return new TLMessagesSendInlineBotResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendInlineBotResult {
    return new TLMessagesSendInlineBotResult().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendInlineBotResult | PlainMessage<TLMessagesSendInlineBotResult> | undefined, b: TLMessagesSendInlineBotResult | PlainMessage<TLMessagesSendInlineBotResult> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendInlineBotResult, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessageEditData
 */
export class TLMessagesGetMessageEditData extends Message<TLMessagesGetMessageEditData> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<TLMessagesGetMessageEditData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessageEditData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetMessageEditData {
    return new TLMessagesGetMessageEditData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetMessageEditData {
    return new TLMessagesGetMessageEditData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetMessageEditData {
    return new TLMessagesGetMessageEditData().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetMessageEditData | PlainMessage<TLMessagesGetMessageEditData> | undefined, b: TLMessagesGetMessageEditData | PlainMessage<TLMessagesGetMessageEditData> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetMessageEditData, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditMessage
 */
export class TLMessagesEditMessage extends Message<TLMessagesEditMessage> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool no_webpage = 3;
   */
  noWebpage = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 5;
   */
  id = 0;

  /**
   * @generated from field: repeated google.protobuf.StringValue message = 6;
   */
  message: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputMedia media = 7;
   */
  media: InputMedia[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ReplyMarkup reply_markup = 8;
   */
  replyMarkup: ReplyMarkup[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessageEntity entities = 9;
   */
  entities: MessageEntity[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value schedule_date = 10;
   */
  scheduleDate: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesEditMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "no_webpage", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "message", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "media", kind: "message", T: InputMedia, repeated: true },
    { no: 8, name: "reply_markup", kind: "message", T: ReplyMarkup, repeated: true },
    { no: 9, name: "entities", kind: "message", T: MessageEntity, repeated: true },
    { no: 10, name: "schedule_date", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesEditMessage {
    return new TLMessagesEditMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesEditMessage {
    return new TLMessagesEditMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesEditMessage {
    return new TLMessagesEditMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesEditMessage | PlainMessage<TLMessagesEditMessage> | undefined, b: TLMessagesEditMessage | PlainMessage<TLMessagesEditMessage> | undefined): boolean {
    return proto3.util.equals(TLMessagesEditMessage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditInlineBotMessage
 */
export class TLMessagesEditInlineBotMessage extends Message<TLMessagesEditInlineBotMessage> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool no_webpage = 3;
   */
  noWebpage = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputBotInlineMessageID id = 4;
   */
  id: InputBotInlineMessageID[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue message = 5;
   */
  message: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputMedia media = 6;
   */
  media: InputMedia[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ReplyMarkup reply_markup = 7;
   */
  replyMarkup: ReplyMarkup[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessageEntity entities = 8;
   */
  entities: MessageEntity[] = [];

  constructor(data?: PartialMessage<TLMessagesEditInlineBotMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditInlineBotMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "no_webpage", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "id", kind: "message", T: InputBotInlineMessageID, repeated: true },
    { no: 5, name: "message", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "media", kind: "message", T: InputMedia, repeated: true },
    { no: 7, name: "reply_markup", kind: "message", T: ReplyMarkup, repeated: true },
    { no: 8, name: "entities", kind: "message", T: MessageEntity, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesEditInlineBotMessage {
    return new TLMessagesEditInlineBotMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesEditInlineBotMessage {
    return new TLMessagesEditInlineBotMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesEditInlineBotMessage {
    return new TLMessagesEditInlineBotMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesEditInlineBotMessage | PlainMessage<TLMessagesEditInlineBotMessage> | undefined, b: TLMessagesEditInlineBotMessage | PlainMessage<TLMessagesEditInlineBotMessage> | undefined): boolean {
    return proto3.util.equals(TLMessagesEditInlineBotMessage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetBotCallbackAnswer
 */
export class TLMessagesGetBotCallbackAnswer extends Message<TLMessagesGetBotCallbackAnswer> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool game = 3;
   */
  game = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 5;
   */
  msgId = 0;

  /**
   * @generated from field: bytes data = 6;
   */
  data = new Uint8Array(0);

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputCheckPasswordSRP password = 7;
   */
  password: InputCheckPasswordSRP[] = [];

  constructor(data?: PartialMessage<TLMessagesGetBotCallbackAnswer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetBotCallbackAnswer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "game", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "password", kind: "message", T: InputCheckPasswordSRP, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetBotCallbackAnswer {
    return new TLMessagesGetBotCallbackAnswer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetBotCallbackAnswer {
    return new TLMessagesGetBotCallbackAnswer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetBotCallbackAnswer {
    return new TLMessagesGetBotCallbackAnswer().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetBotCallbackAnswer | PlainMessage<TLMessagesGetBotCallbackAnswer> | undefined, b: TLMessagesGetBotCallbackAnswer | PlainMessage<TLMessagesGetBotCallbackAnswer> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetBotCallbackAnswer, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetBotCallbackAnswer
 */
export class TLMessagesSetBotCallbackAnswer extends Message<TLMessagesSetBotCallbackAnswer> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool alert = 3;
   */
  alert = false;

  /**
   * @generated from field: int64 query_id = 4;
   */
  queryId = protoInt64.zero;

  /**
   * @generated from field: repeated google.protobuf.StringValue message = 5;
   */
  message: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue url = 6;
   */
  url: StringValue[] = [];

  /**
   * @generated from field: int32 cache_time = 7;
   */
  cacheTime = 0;

  constructor(data?: PartialMessage<TLMessagesSetBotCallbackAnswer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetBotCallbackAnswer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "alert", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "query_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "message", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "url", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "cache_time", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetBotCallbackAnswer {
    return new TLMessagesSetBotCallbackAnswer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetBotCallbackAnswer {
    return new TLMessagesSetBotCallbackAnswer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetBotCallbackAnswer {
    return new TLMessagesSetBotCallbackAnswer().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetBotCallbackAnswer | PlainMessage<TLMessagesSetBotCallbackAnswer> | undefined, b: TLMessagesSetBotCallbackAnswer | PlainMessage<TLMessagesSetBotCallbackAnswer> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetBotCallbackAnswer, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetPeerDialogs
 */
export class TLMessagesGetPeerDialogs extends Message<TLMessagesGetPeerDialogs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDialogPeer peers = 3;
   */
  peers: InputDialogPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesGetPeerDialogs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetPeerDialogs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peers", kind: "message", T: InputDialogPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetPeerDialogs {
    return new TLMessagesGetPeerDialogs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetPeerDialogs {
    return new TLMessagesGetPeerDialogs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetPeerDialogs {
    return new TLMessagesGetPeerDialogs().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetPeerDialogs | PlainMessage<TLMessagesGetPeerDialogs> | undefined, b: TLMessagesGetPeerDialogs | PlainMessage<TLMessagesGetPeerDialogs> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetPeerDialogs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSaveDraft
 */
export class TLMessagesSaveDraft extends Message<TLMessagesSaveDraft> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool no_webpage = 3;
   */
  noWebpage = false;

  /**
   * @generated from field: repeated google.protobuf.Int32Value reply_to_msg_id = 4;
   */
  replyToMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 5;
   */
  topMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 6;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: string message = 7;
   */
  message = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessageEntity entities = 8;
   */
  entities: MessageEntity[] = [];

  constructor(data?: PartialMessage<TLMessagesSaveDraft>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSaveDraft";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "no_webpage", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "reply_to_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 5, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 6, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 7, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "entities", kind: "message", T: MessageEntity, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSaveDraft {
    return new TLMessagesSaveDraft().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSaveDraft {
    return new TLMessagesSaveDraft().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSaveDraft {
    return new TLMessagesSaveDraft().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSaveDraft | PlainMessage<TLMessagesSaveDraft> | undefined, b: TLMessagesSaveDraft | PlainMessage<TLMessagesSaveDraft> | undefined): boolean {
    return proto3.util.equals(TLMessagesSaveDraft, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAllDrafts
 */
export class TLMessagesGetAllDrafts extends Message<TLMessagesGetAllDrafts> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLMessagesGetAllDrafts>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAllDrafts";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetAllDrafts {
    return new TLMessagesGetAllDrafts().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetAllDrafts {
    return new TLMessagesGetAllDrafts().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetAllDrafts {
    return new TLMessagesGetAllDrafts().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetAllDrafts | PlainMessage<TLMessagesGetAllDrafts> | undefined, b: TLMessagesGetAllDrafts | PlainMessage<TLMessagesGetAllDrafts> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetAllDrafts, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetFeaturedStickers
 */
export class TLMessagesGetFeaturedStickers extends Message<TLMessagesGetFeaturedStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetFeaturedStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetFeaturedStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetFeaturedStickers {
    return new TLMessagesGetFeaturedStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetFeaturedStickers {
    return new TLMessagesGetFeaturedStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetFeaturedStickers {
    return new TLMessagesGetFeaturedStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetFeaturedStickers | PlainMessage<TLMessagesGetFeaturedStickers> | undefined, b: TLMessagesGetFeaturedStickers | PlainMessage<TLMessagesGetFeaturedStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetFeaturedStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadFeaturedStickers
 */
export class TLMessagesReadFeaturedStickers extends Message<TLMessagesReadFeaturedStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 id = 3;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesReadFeaturedStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadFeaturedStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReadFeaturedStickers {
    return new TLMessagesReadFeaturedStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReadFeaturedStickers {
    return new TLMessagesReadFeaturedStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReadFeaturedStickers {
    return new TLMessagesReadFeaturedStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReadFeaturedStickers | PlainMessage<TLMessagesReadFeaturedStickers> | undefined, b: TLMessagesReadFeaturedStickers | PlainMessage<TLMessagesReadFeaturedStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesReadFeaturedStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetRecentStickers
 */
export class TLMessagesGetRecentStickers extends Message<TLMessagesGetRecentStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool attached = 3;
   */
  attached = false;

  /**
   * @generated from field: int64 hash = 4;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetRecentStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetRecentStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "attached", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetRecentStickers {
    return new TLMessagesGetRecentStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetRecentStickers {
    return new TLMessagesGetRecentStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetRecentStickers {
    return new TLMessagesGetRecentStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetRecentStickers | PlainMessage<TLMessagesGetRecentStickers> | undefined, b: TLMessagesGetRecentStickers | PlainMessage<TLMessagesGetRecentStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetRecentStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSaveRecentSticker
 */
export class TLMessagesSaveRecentSticker extends Message<TLMessagesSaveRecentSticker> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool attached = 3;
   */
  attached = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDocument id = 4;
   */
  id: InputDocument[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool unsave = 5;
   */
  unsave: Bool[] = [];

  constructor(data?: PartialMessage<TLMessagesSaveRecentSticker>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSaveRecentSticker";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "attached", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "id", kind: "message", T: InputDocument, repeated: true },
    { no: 5, name: "unsave", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSaveRecentSticker {
    return new TLMessagesSaveRecentSticker().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSaveRecentSticker {
    return new TLMessagesSaveRecentSticker().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSaveRecentSticker {
    return new TLMessagesSaveRecentSticker().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSaveRecentSticker | PlainMessage<TLMessagesSaveRecentSticker> | undefined, b: TLMessagesSaveRecentSticker | PlainMessage<TLMessagesSaveRecentSticker> | undefined): boolean {
    return proto3.util.equals(TLMessagesSaveRecentSticker, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesClearRecentStickers
 */
export class TLMessagesClearRecentStickers extends Message<TLMessagesClearRecentStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool attached = 3;
   */
  attached = false;

  constructor(data?: PartialMessage<TLMessagesClearRecentStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesClearRecentStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "attached", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesClearRecentStickers {
    return new TLMessagesClearRecentStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesClearRecentStickers {
    return new TLMessagesClearRecentStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesClearRecentStickers {
    return new TLMessagesClearRecentStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesClearRecentStickers | PlainMessage<TLMessagesClearRecentStickers> | undefined, b: TLMessagesClearRecentStickers | PlainMessage<TLMessagesClearRecentStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesClearRecentStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetArchivedStickers
 */
export class TLMessagesGetArchivedStickers extends Message<TLMessagesGetArchivedStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool masks = 3;
   */
  masks = false;

  /**
   * @generated from field: bool emojis = 4;
   */
  emojis = false;

  /**
   * @generated from field: int64 offset_id = 5;
   */
  offsetId = protoInt64.zero;

  /**
   * @generated from field: int32 limit = 6;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLMessagesGetArchivedStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetArchivedStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "masks", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "emojis", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "offset_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetArchivedStickers {
    return new TLMessagesGetArchivedStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetArchivedStickers {
    return new TLMessagesGetArchivedStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetArchivedStickers {
    return new TLMessagesGetArchivedStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetArchivedStickers | PlainMessage<TLMessagesGetArchivedStickers> | undefined, b: TLMessagesGetArchivedStickers | PlainMessage<TLMessagesGetArchivedStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetArchivedStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMaskStickers
 */
export class TLMessagesGetMaskStickers extends Message<TLMessagesGetMaskStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetMaskStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMaskStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetMaskStickers {
    return new TLMessagesGetMaskStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetMaskStickers {
    return new TLMessagesGetMaskStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetMaskStickers {
    return new TLMessagesGetMaskStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetMaskStickers | PlainMessage<TLMessagesGetMaskStickers> | undefined, b: TLMessagesGetMaskStickers | PlainMessage<TLMessagesGetMaskStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetMaskStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAttachedStickers
 */
export class TLMessagesGetAttachedStickers extends Message<TLMessagesGetAttachedStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickeredMedia media = 3;
   */
  media: InputStickeredMedia[] = [];

  constructor(data?: PartialMessage<TLMessagesGetAttachedStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAttachedStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "media", kind: "message", T: InputStickeredMedia, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetAttachedStickers {
    return new TLMessagesGetAttachedStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetAttachedStickers {
    return new TLMessagesGetAttachedStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetAttachedStickers {
    return new TLMessagesGetAttachedStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetAttachedStickers | PlainMessage<TLMessagesGetAttachedStickers> | undefined, b: TLMessagesGetAttachedStickers | PlainMessage<TLMessagesGetAttachedStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetAttachedStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetGameScore
 */
export class TLMessagesSetGameScore extends Message<TLMessagesSetGameScore> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool edit_message = 3;
   */
  editMessage = false;

  /**
   * @generated from field: bool force = 4;
   */
  force = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 5;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 6;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 7;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: int32 score = 8;
   */
  score = 0;

  constructor(data?: PartialMessage<TLMessagesSetGameScore>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetGameScore";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "edit_message", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 6, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 8, name: "score", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetGameScore {
    return new TLMessagesSetGameScore().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetGameScore {
    return new TLMessagesSetGameScore().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetGameScore {
    return new TLMessagesSetGameScore().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetGameScore | PlainMessage<TLMessagesSetGameScore> | undefined, b: TLMessagesSetGameScore | PlainMessage<TLMessagesSetGameScore> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetGameScore, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetInlineGameScore
 */
export class TLMessagesSetInlineGameScore extends Message<TLMessagesSetInlineGameScore> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool edit_message = 3;
   */
  editMessage = false;

  /**
   * @generated from field: bool force = 4;
   */
  force = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputBotInlineMessageID id = 5;
   */
  id: InputBotInlineMessageID[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 6;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: int32 score = 7;
   */
  score = 0;

  constructor(data?: PartialMessage<TLMessagesSetInlineGameScore>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetInlineGameScore";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "edit_message", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "id", kind: "message", T: InputBotInlineMessageID, repeated: true },
    { no: 6, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 7, name: "score", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetInlineGameScore {
    return new TLMessagesSetInlineGameScore().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetInlineGameScore {
    return new TLMessagesSetInlineGameScore().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetInlineGameScore {
    return new TLMessagesSetInlineGameScore().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetInlineGameScore | PlainMessage<TLMessagesSetInlineGameScore> | undefined, b: TLMessagesSetInlineGameScore | PlainMessage<TLMessagesSetInlineGameScore> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetInlineGameScore, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetGameHighScores
 */
export class TLMessagesGetGameHighScores extends Message<TLMessagesGetGameHighScores> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 5;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLMessagesGetGameHighScores>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetGameHighScores";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetGameHighScores {
    return new TLMessagesGetGameHighScores().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetGameHighScores {
    return new TLMessagesGetGameHighScores().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetGameHighScores {
    return new TLMessagesGetGameHighScores().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetGameHighScores | PlainMessage<TLMessagesGetGameHighScores> | undefined, b: TLMessagesGetGameHighScores | PlainMessage<TLMessagesGetGameHighScores> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetGameHighScores, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetInlineGameHighScores
 */
export class TLMessagesGetInlineGameHighScores extends Message<TLMessagesGetInlineGameHighScores> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputBotInlineMessageID id = 3;
   */
  id: InputBotInlineMessageID[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 4;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLMessagesGetInlineGameHighScores>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetInlineGameHighScores";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputBotInlineMessageID, repeated: true },
    { no: 4, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetInlineGameHighScores {
    return new TLMessagesGetInlineGameHighScores().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetInlineGameHighScores {
    return new TLMessagesGetInlineGameHighScores().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetInlineGameHighScores {
    return new TLMessagesGetInlineGameHighScores().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetInlineGameHighScores | PlainMessage<TLMessagesGetInlineGameHighScores> | undefined, b: TLMessagesGetInlineGameHighScores | PlainMessage<TLMessagesGetInlineGameHighScores> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetInlineGameHighScores, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetCommonChats
 */
export class TLMessagesGetCommonChats extends Message<TLMessagesGetCommonChats> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 3;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: int64 max_id = 4;
   */
  maxId = protoInt64.zero;

  /**
   * @generated from field: int32 limit = 5;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLMessagesGetCommonChats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetCommonChats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "max_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetCommonChats {
    return new TLMessagesGetCommonChats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetCommonChats {
    return new TLMessagesGetCommonChats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetCommonChats {
    return new TLMessagesGetCommonChats().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetCommonChats | PlainMessage<TLMessagesGetCommonChats> | undefined, b: TLMessagesGetCommonChats | PlainMessage<TLMessagesGetCommonChats> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetCommonChats, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetWebPage8D9692A3
 */
export class TLMessagesGetWebPage8D9692A3 extends Message<TLMessagesGetWebPage8D9692A3> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string url = 3;
   */
  url = "";

  /**
   * @generated from field: int32 hash = 4;
   */
  hash = 0;

  constructor(data?: PartialMessage<TLMessagesGetWebPage8D9692A3>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetWebPage8D9692A3";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "hash", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetWebPage8D9692A3 {
    return new TLMessagesGetWebPage8D9692A3().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetWebPage8D9692A3 {
    return new TLMessagesGetWebPage8D9692A3().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetWebPage8D9692A3 {
    return new TLMessagesGetWebPage8D9692A3().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetWebPage8D9692A3 | PlainMessage<TLMessagesGetWebPage8D9692A3> | undefined, b: TLMessagesGetWebPage8D9692A3 | PlainMessage<TLMessagesGetWebPage8D9692A3> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetWebPage8D9692A3, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesToggleDialogPin
 */
export class TLMessagesToggleDialogPin extends Message<TLMessagesToggleDialogPin> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool pinned = 3;
   */
  pinned = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDialogPeer peer = 4;
   */
  peer: InputDialogPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesToggleDialogPin>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesToggleDialogPin";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "pinned", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputDialogPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesToggleDialogPin {
    return new TLMessagesToggleDialogPin().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesToggleDialogPin {
    return new TLMessagesToggleDialogPin().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesToggleDialogPin {
    return new TLMessagesToggleDialogPin().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesToggleDialogPin | PlainMessage<TLMessagesToggleDialogPin> | undefined, b: TLMessagesToggleDialogPin | PlainMessage<TLMessagesToggleDialogPin> | undefined): boolean {
    return proto3.util.equals(TLMessagesToggleDialogPin, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReorderPinnedDialogs
 */
export class TLMessagesReorderPinnedDialogs extends Message<TLMessagesReorderPinnedDialogs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool force = 3;
   */
  force = false;

  /**
   * @generated from field: int32 folder_id = 4;
   */
  folderId = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDialogPeer order = 5;
   */
  order: InputDialogPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesReorderPinnedDialogs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReorderPinnedDialogs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "folder_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "order", kind: "message", T: InputDialogPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReorderPinnedDialogs {
    return new TLMessagesReorderPinnedDialogs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReorderPinnedDialogs {
    return new TLMessagesReorderPinnedDialogs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReorderPinnedDialogs {
    return new TLMessagesReorderPinnedDialogs().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReorderPinnedDialogs | PlainMessage<TLMessagesReorderPinnedDialogs> | undefined, b: TLMessagesReorderPinnedDialogs | PlainMessage<TLMessagesReorderPinnedDialogs> | undefined): boolean {
    return proto3.util.equals(TLMessagesReorderPinnedDialogs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetPinnedDialogs
 */
export class TLMessagesGetPinnedDialogs extends Message<TLMessagesGetPinnedDialogs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 folder_id = 3;
   */
  folderId = 0;

  constructor(data?: PartialMessage<TLMessagesGetPinnedDialogs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetPinnedDialogs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "folder_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetPinnedDialogs {
    return new TLMessagesGetPinnedDialogs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetPinnedDialogs {
    return new TLMessagesGetPinnedDialogs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetPinnedDialogs {
    return new TLMessagesGetPinnedDialogs().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetPinnedDialogs | PlainMessage<TLMessagesGetPinnedDialogs> | undefined, b: TLMessagesGetPinnedDialogs | PlainMessage<TLMessagesGetPinnedDialogs> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetPinnedDialogs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetBotShippingResults
 */
export class TLMessagesSetBotShippingResults extends Message<TLMessagesSetBotShippingResults> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 query_id = 3;
   */
  queryId = protoInt64.zero;

  /**
   * @generated from field: repeated google.protobuf.StringValue error = 4;
   */
  error: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ShippingOption shipping_options = 5;
   */
  shippingOptions: ShippingOption[] = [];

  constructor(data?: PartialMessage<TLMessagesSetBotShippingResults>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetBotShippingResults";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "query_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "error", kind: "message", T: StringValue, repeated: true },
    { no: 5, name: "shipping_options", kind: "message", T: ShippingOption, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetBotShippingResults {
    return new TLMessagesSetBotShippingResults().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetBotShippingResults {
    return new TLMessagesSetBotShippingResults().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetBotShippingResults {
    return new TLMessagesSetBotShippingResults().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetBotShippingResults | PlainMessage<TLMessagesSetBotShippingResults> | undefined, b: TLMessagesSetBotShippingResults | PlainMessage<TLMessagesSetBotShippingResults> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetBotShippingResults, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetBotPrecheckoutResults
 */
export class TLMessagesSetBotPrecheckoutResults extends Message<TLMessagesSetBotPrecheckoutResults> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  /**
   * @generated from field: int64 query_id = 4;
   */
  queryId = protoInt64.zero;

  /**
   * @generated from field: repeated google.protobuf.StringValue error = 5;
   */
  error: StringValue[] = [];

  constructor(data?: PartialMessage<TLMessagesSetBotPrecheckoutResults>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetBotPrecheckoutResults";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "query_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "error", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetBotPrecheckoutResults {
    return new TLMessagesSetBotPrecheckoutResults().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetBotPrecheckoutResults {
    return new TLMessagesSetBotPrecheckoutResults().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetBotPrecheckoutResults {
    return new TLMessagesSetBotPrecheckoutResults().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetBotPrecheckoutResults | PlainMessage<TLMessagesSetBotPrecheckoutResults> | undefined, b: TLMessagesSetBotPrecheckoutResults | PlainMessage<TLMessagesSetBotPrecheckoutResults> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetBotPrecheckoutResults, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesUploadMedia
 */
export class TLMessagesUploadMedia extends Message<TLMessagesUploadMedia> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputMedia media = 4;
   */
  media: InputMedia[] = [];

  constructor(data?: PartialMessage<TLMessagesUploadMedia>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesUploadMedia";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "media", kind: "message", T: InputMedia, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesUploadMedia {
    return new TLMessagesUploadMedia().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesUploadMedia {
    return new TLMessagesUploadMedia().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesUploadMedia {
    return new TLMessagesUploadMedia().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesUploadMedia | PlainMessage<TLMessagesUploadMedia> | undefined, b: TLMessagesUploadMedia | PlainMessage<TLMessagesUploadMedia> | undefined): boolean {
    return proto3.util.equals(TLMessagesUploadMedia, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendScreenshotNotification
 */
export class TLMessagesSendScreenshotNotification extends Message<TLMessagesSendScreenshotNotification> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputReplyTo reply_to = 4;
   */
  replyTo: InputReplyTo[] = [];

  /**
   * @generated from field: int64 random_id = 5;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: int32 reply_to_msg_id = 6;
   */
  replyToMsgId = 0;

  constructor(data?: PartialMessage<TLMessagesSendScreenshotNotification>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendScreenshotNotification";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "reply_to", kind: "message", T: InputReplyTo, repeated: true },
    { no: 5, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "reply_to_msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendScreenshotNotification {
    return new TLMessagesSendScreenshotNotification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendScreenshotNotification {
    return new TLMessagesSendScreenshotNotification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendScreenshotNotification {
    return new TLMessagesSendScreenshotNotification().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendScreenshotNotification | PlainMessage<TLMessagesSendScreenshotNotification> | undefined, b: TLMessagesSendScreenshotNotification | PlainMessage<TLMessagesSendScreenshotNotification> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendScreenshotNotification, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetFavedStickers
 */
export class TLMessagesGetFavedStickers extends Message<TLMessagesGetFavedStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetFavedStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetFavedStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetFavedStickers {
    return new TLMessagesGetFavedStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetFavedStickers {
    return new TLMessagesGetFavedStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetFavedStickers {
    return new TLMessagesGetFavedStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetFavedStickers | PlainMessage<TLMessagesGetFavedStickers> | undefined, b: TLMessagesGetFavedStickers | PlainMessage<TLMessagesGetFavedStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetFavedStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesFaveSticker
 */
export class TLMessagesFaveSticker extends Message<TLMessagesFaveSticker> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDocument id = 3;
   */
  id: InputDocument[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool unfave = 4;
   */
  unfave: Bool[] = [];

  constructor(data?: PartialMessage<TLMessagesFaveSticker>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesFaveSticker";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputDocument, repeated: true },
    { no: 4, name: "unfave", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesFaveSticker {
    return new TLMessagesFaveSticker().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesFaveSticker {
    return new TLMessagesFaveSticker().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesFaveSticker {
    return new TLMessagesFaveSticker().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesFaveSticker | PlainMessage<TLMessagesFaveSticker> | undefined, b: TLMessagesFaveSticker | PlainMessage<TLMessagesFaveSticker> | undefined): boolean {
    return proto3.util.equals(TLMessagesFaveSticker, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetUnreadMentions
 */
export class TLMessagesGetUnreadMentions extends Message<TLMessagesGetUnreadMentions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 4;
   */
  topMsgId: Int32Value[] = [];

  /**
   * @generated from field: int32 offset_id = 5;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 add_offset = 6;
   */
  addOffset = 0;

  /**
   * @generated from field: int32 limit = 7;
   */
  limit = 0;

  /**
   * @generated from field: int32 max_id = 8;
   */
  maxId = 0;

  /**
   * @generated from field: int32 min_id = 9;
   */
  minId = 0;

  constructor(data?: PartialMessage<TLMessagesGetUnreadMentions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetUnreadMentions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 5, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "add_offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "min_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetUnreadMentions {
    return new TLMessagesGetUnreadMentions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetUnreadMentions {
    return new TLMessagesGetUnreadMentions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetUnreadMentions {
    return new TLMessagesGetUnreadMentions().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetUnreadMentions | PlainMessage<TLMessagesGetUnreadMentions> | undefined, b: TLMessagesGetUnreadMentions | PlainMessage<TLMessagesGetUnreadMentions> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetUnreadMentions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadMentions
 */
export class TLMessagesReadMentions extends Message<TLMessagesReadMentions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 4;
   */
  topMsgId: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesReadMentions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadMentions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReadMentions {
    return new TLMessagesReadMentions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReadMentions {
    return new TLMessagesReadMentions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReadMentions {
    return new TLMessagesReadMentions().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReadMentions | PlainMessage<TLMessagesReadMentions> | undefined, b: TLMessagesReadMentions | PlainMessage<TLMessagesReadMentions> | undefined): boolean {
    return proto3.util.equals(TLMessagesReadMentions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetRecentLocations
 */
export class TLMessagesGetRecentLocations extends Message<TLMessagesGetRecentLocations> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  /**
   * @generated from field: int64 hash = 5;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetRecentLocations>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetRecentLocations";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetRecentLocations {
    return new TLMessagesGetRecentLocations().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetRecentLocations {
    return new TLMessagesGetRecentLocations().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetRecentLocations {
    return new TLMessagesGetRecentLocations().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetRecentLocations | PlainMessage<TLMessagesGetRecentLocations> | undefined, b: TLMessagesGetRecentLocations | PlainMessage<TLMessagesGetRecentLocations> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetRecentLocations, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendMultiMedia
 */
export class TLMessagesSendMultiMedia extends Message<TLMessagesSendMultiMedia> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool silent = 3;
   */
  silent = false;

  /**
   * @generated from field: bool background = 4;
   */
  background = false;

  /**
   * @generated from field: bool clear_draft = 5;
   */
  clearDraft = false;

  /**
   * @generated from field: bool noforwards = 6;
   */
  noforwards = false;

  /**
   * @generated from field: bool update_stickersets_order = 7;
   */
  updateStickersetsOrder = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 8;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputReplyTo reply_to = 9;
   */
  replyTo: InputReplyTo[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputSingleMedia multi_media = 10;
   */
  multiMedia: InputSingleMedia[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value schedule_date = 11;
   */
  scheduleDate: Int32Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer send_as = 12;
   */
  sendAs: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value reply_to_msg_id = 13;
   */
  replyToMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 14;
   */
  topMsgId: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesSendMultiMedia>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendMultiMedia";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "silent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "background", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "clear_draft", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "noforwards", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "update_stickersets_order", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 9, name: "reply_to", kind: "message", T: InputReplyTo, repeated: true },
    { no: 10, name: "multi_media", kind: "message", T: InputSingleMedia, repeated: true },
    { no: 11, name: "schedule_date", kind: "message", T: Int32Value, repeated: true },
    { no: 12, name: "send_as", kind: "message", T: InputPeer, repeated: true },
    { no: 13, name: "reply_to_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 14, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendMultiMedia {
    return new TLMessagesSendMultiMedia().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendMultiMedia {
    return new TLMessagesSendMultiMedia().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendMultiMedia {
    return new TLMessagesSendMultiMedia().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendMultiMedia | PlainMessage<TLMessagesSendMultiMedia> | undefined, b: TLMessagesSendMultiMedia | PlainMessage<TLMessagesSendMultiMedia> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendMultiMedia, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesUploadEncryptedFile
 */
export class TLMessagesUploadEncryptedFile extends Message<TLMessagesUploadEncryptedFile> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputEncryptedChat peer = 3;
   */
  peer: InputEncryptedChat[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputEncryptedFile file = 4;
   */
  file: InputEncryptedFile[] = [];

  constructor(data?: PartialMessage<TLMessagesUploadEncryptedFile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesUploadEncryptedFile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputEncryptedChat, repeated: true },
    { no: 4, name: "file", kind: "message", T: InputEncryptedFile, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesUploadEncryptedFile {
    return new TLMessagesUploadEncryptedFile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesUploadEncryptedFile {
    return new TLMessagesUploadEncryptedFile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesUploadEncryptedFile {
    return new TLMessagesUploadEncryptedFile().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesUploadEncryptedFile | PlainMessage<TLMessagesUploadEncryptedFile> | undefined, b: TLMessagesUploadEncryptedFile | PlainMessage<TLMessagesUploadEncryptedFile> | undefined): boolean {
    return proto3.util.equals(TLMessagesUploadEncryptedFile, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSearchStickerSets
 */
export class TLMessagesSearchStickerSets extends Message<TLMessagesSearchStickerSets> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool exclude_featured = 3;
   */
  excludeFeatured = false;

  /**
   * @generated from field: string q = 4;
   */
  q = "";

  /**
   * @generated from field: int64 hash = 5;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesSearchStickerSets>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSearchStickerSets";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "exclude_featured", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "q", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSearchStickerSets {
    return new TLMessagesSearchStickerSets().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSearchStickerSets {
    return new TLMessagesSearchStickerSets().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSearchStickerSets {
    return new TLMessagesSearchStickerSets().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSearchStickerSets | PlainMessage<TLMessagesSearchStickerSets> | undefined, b: TLMessagesSearchStickerSets | PlainMessage<TLMessagesSearchStickerSets> | undefined): boolean {
    return proto3.util.equals(TLMessagesSearchStickerSets, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSplitRanges
 */
export class TLMessagesGetSplitRanges extends Message<TLMessagesGetSplitRanges> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLMessagesGetSplitRanges>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSplitRanges";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetSplitRanges {
    return new TLMessagesGetSplitRanges().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetSplitRanges {
    return new TLMessagesGetSplitRanges().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetSplitRanges {
    return new TLMessagesGetSplitRanges().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetSplitRanges | PlainMessage<TLMessagesGetSplitRanges> | undefined, b: TLMessagesGetSplitRanges | PlainMessage<TLMessagesGetSplitRanges> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetSplitRanges, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesMarkDialogUnread
 */
export class TLMessagesMarkDialogUnread extends Message<TLMessagesMarkDialogUnread> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool unread = 3;
   */
  unread = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDialogPeer peer = 4;
   */
  peer: InputDialogPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesMarkDialogUnread>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesMarkDialogUnread";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "unread", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputDialogPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesMarkDialogUnread {
    return new TLMessagesMarkDialogUnread().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesMarkDialogUnread {
    return new TLMessagesMarkDialogUnread().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesMarkDialogUnread {
    return new TLMessagesMarkDialogUnread().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesMarkDialogUnread | PlainMessage<TLMessagesMarkDialogUnread> | undefined, b: TLMessagesMarkDialogUnread | PlainMessage<TLMessagesMarkDialogUnread> | undefined): boolean {
    return proto3.util.equals(TLMessagesMarkDialogUnread, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDialogUnreadMarks
 */
export class TLMessagesGetDialogUnreadMarks extends Message<TLMessagesGetDialogUnreadMarks> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLMessagesGetDialogUnreadMarks>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDialogUnreadMarks";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetDialogUnreadMarks {
    return new TLMessagesGetDialogUnreadMarks().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetDialogUnreadMarks {
    return new TLMessagesGetDialogUnreadMarks().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetDialogUnreadMarks {
    return new TLMessagesGetDialogUnreadMarks().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetDialogUnreadMarks | PlainMessage<TLMessagesGetDialogUnreadMarks> | undefined, b: TLMessagesGetDialogUnreadMarks | PlainMessage<TLMessagesGetDialogUnreadMarks> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetDialogUnreadMarks, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesClearAllDrafts
 */
export class TLMessagesClearAllDrafts extends Message<TLMessagesClearAllDrafts> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLMessagesClearAllDrafts>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesClearAllDrafts";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesClearAllDrafts {
    return new TLMessagesClearAllDrafts().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesClearAllDrafts {
    return new TLMessagesClearAllDrafts().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesClearAllDrafts {
    return new TLMessagesClearAllDrafts().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesClearAllDrafts | PlainMessage<TLMessagesClearAllDrafts> | undefined, b: TLMessagesClearAllDrafts | PlainMessage<TLMessagesClearAllDrafts> | undefined): boolean {
    return proto3.util.equals(TLMessagesClearAllDrafts, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesUpdatePinnedMessage
 */
export class TLMessagesUpdatePinnedMessage extends Message<TLMessagesUpdatePinnedMessage> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool silent = 3;
   */
  silent = false;

  /**
   * @generated from field: bool unpin = 4;
   */
  unpin = false;

  /**
   * @generated from field: bool pm_oneside = 5;
   */
  pmOneside = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 6;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 7;
   */
  id = 0;

  constructor(data?: PartialMessage<TLMessagesUpdatePinnedMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesUpdatePinnedMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "silent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "unpin", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "pm_oneside", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 7, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesUpdatePinnedMessage {
    return new TLMessagesUpdatePinnedMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesUpdatePinnedMessage {
    return new TLMessagesUpdatePinnedMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesUpdatePinnedMessage {
    return new TLMessagesUpdatePinnedMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesUpdatePinnedMessage | PlainMessage<TLMessagesUpdatePinnedMessage> | undefined, b: TLMessagesUpdatePinnedMessage | PlainMessage<TLMessagesUpdatePinnedMessage> | undefined): boolean {
    return proto3.util.equals(TLMessagesUpdatePinnedMessage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendVote
 */
export class TLMessagesSendVote extends Message<TLMessagesSendVote> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  /**
   * @generated from field: bytes options = 5;
   */
  options = new Uint8Array(0);

  constructor(data?: PartialMessage<TLMessagesSendVote>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendVote";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "options", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendVote {
    return new TLMessagesSendVote().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendVote {
    return new TLMessagesSendVote().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendVote {
    return new TLMessagesSendVote().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendVote | PlainMessage<TLMessagesSendVote> | undefined, b: TLMessagesSendVote | PlainMessage<TLMessagesSendVote> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendVote, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetPollResults
 */
export class TLMessagesGetPollResults extends Message<TLMessagesGetPollResults> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLMessagesGetPollResults>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetPollResults";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetPollResults {
    return new TLMessagesGetPollResults().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetPollResults {
    return new TLMessagesGetPollResults().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetPollResults {
    return new TLMessagesGetPollResults().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetPollResults | PlainMessage<TLMessagesGetPollResults> | undefined, b: TLMessagesGetPollResults | PlainMessage<TLMessagesGetPollResults> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetPollResults, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetOnlines
 */
export class TLMessagesGetOnlines extends Message<TLMessagesGetOnlines> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesGetOnlines>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetOnlines";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetOnlines {
    return new TLMessagesGetOnlines().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetOnlines {
    return new TLMessagesGetOnlines().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetOnlines {
    return new TLMessagesGetOnlines().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetOnlines | PlainMessage<TLMessagesGetOnlines> | undefined, b: TLMessagesGetOnlines | PlainMessage<TLMessagesGetOnlines> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetOnlines, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditChatAbout
 */
export class TLMessagesEditChatAbout extends Message<TLMessagesEditChatAbout> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: string about = 4;
   */
  about = "";

  constructor(data?: PartialMessage<TLMessagesEditChatAbout>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditChatAbout";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "about", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesEditChatAbout {
    return new TLMessagesEditChatAbout().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesEditChatAbout {
    return new TLMessagesEditChatAbout().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesEditChatAbout {
    return new TLMessagesEditChatAbout().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesEditChatAbout | PlainMessage<TLMessagesEditChatAbout> | undefined, b: TLMessagesEditChatAbout | PlainMessage<TLMessagesEditChatAbout> | undefined): boolean {
    return proto3.util.equals(TLMessagesEditChatAbout, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditChatDefaultBannedRights
 */
export class TLMessagesEditChatDefaultBannedRights extends Message<TLMessagesEditChatDefaultBannedRights> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ChatBannedRights banned_rights = 4;
   */
  bannedRights: ChatBannedRights[] = [];

  constructor(data?: PartialMessage<TLMessagesEditChatDefaultBannedRights>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditChatDefaultBannedRights";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "banned_rights", kind: "message", T: ChatBannedRights, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesEditChatDefaultBannedRights {
    return new TLMessagesEditChatDefaultBannedRights().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesEditChatDefaultBannedRights {
    return new TLMessagesEditChatDefaultBannedRights().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesEditChatDefaultBannedRights {
    return new TLMessagesEditChatDefaultBannedRights().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesEditChatDefaultBannedRights | PlainMessage<TLMessagesEditChatDefaultBannedRights> | undefined, b: TLMessagesEditChatDefaultBannedRights | PlainMessage<TLMessagesEditChatDefaultBannedRights> | undefined): boolean {
    return proto3.util.equals(TLMessagesEditChatDefaultBannedRights, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiKeywords
 */
export class TLMessagesGetEmojiKeywords extends Message<TLMessagesGetEmojiKeywords> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string lang_code = 3;
   */
  langCode = "";

  constructor(data?: PartialMessage<TLMessagesGetEmojiKeywords>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiKeywords";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetEmojiKeywords {
    return new TLMessagesGetEmojiKeywords().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiKeywords {
    return new TLMessagesGetEmojiKeywords().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiKeywords {
    return new TLMessagesGetEmojiKeywords().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetEmojiKeywords | PlainMessage<TLMessagesGetEmojiKeywords> | undefined, b: TLMessagesGetEmojiKeywords | PlainMessage<TLMessagesGetEmojiKeywords> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetEmojiKeywords, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiKeywordsDifference
 */
export class TLMessagesGetEmojiKeywordsDifference extends Message<TLMessagesGetEmojiKeywordsDifference> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string lang_code = 3;
   */
  langCode = "";

  /**
   * @generated from field: int32 from_version = 4;
   */
  fromVersion = 0;

  constructor(data?: PartialMessage<TLMessagesGetEmojiKeywordsDifference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiKeywordsDifference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "from_version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetEmojiKeywordsDifference {
    return new TLMessagesGetEmojiKeywordsDifference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiKeywordsDifference {
    return new TLMessagesGetEmojiKeywordsDifference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiKeywordsDifference {
    return new TLMessagesGetEmojiKeywordsDifference().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetEmojiKeywordsDifference | PlainMessage<TLMessagesGetEmojiKeywordsDifference> | undefined, b: TLMessagesGetEmojiKeywordsDifference | PlainMessage<TLMessagesGetEmojiKeywordsDifference> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetEmojiKeywordsDifference, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiKeywordsLanguages
 */
export class TLMessagesGetEmojiKeywordsLanguages extends Message<TLMessagesGetEmojiKeywordsLanguages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string lang_codes = 3;
   */
  langCodes = "";

  constructor(data?: PartialMessage<TLMessagesGetEmojiKeywordsLanguages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiKeywordsLanguages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "lang_codes", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetEmojiKeywordsLanguages {
    return new TLMessagesGetEmojiKeywordsLanguages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiKeywordsLanguages {
    return new TLMessagesGetEmojiKeywordsLanguages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiKeywordsLanguages {
    return new TLMessagesGetEmojiKeywordsLanguages().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetEmojiKeywordsLanguages | PlainMessage<TLMessagesGetEmojiKeywordsLanguages> | undefined, b: TLMessagesGetEmojiKeywordsLanguages | PlainMessage<TLMessagesGetEmojiKeywordsLanguages> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetEmojiKeywordsLanguages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiURL
 */
export class TLMessagesGetEmojiURL extends Message<TLMessagesGetEmojiURL> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string lang_code = 3;
   */
  langCode = "";

  constructor(data?: PartialMessage<TLMessagesGetEmojiURL>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiURL";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetEmojiURL {
    return new TLMessagesGetEmojiURL().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiURL {
    return new TLMessagesGetEmojiURL().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiURL {
    return new TLMessagesGetEmojiURL().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetEmojiURL | PlainMessage<TLMessagesGetEmojiURL> | undefined, b: TLMessagesGetEmojiURL | PlainMessage<TLMessagesGetEmojiURL> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetEmojiURL, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSearchCounters
 */
export class TLMessagesGetSearchCounters extends Message<TLMessagesGetSearchCounters> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 4;
   */
  topMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessagesFilter filters = 5;
   */
  filters: MessagesFilter[] = [];

  constructor(data?: PartialMessage<TLMessagesGetSearchCounters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSearchCounters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 5, name: "filters", kind: "message", T: MessagesFilter, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetSearchCounters {
    return new TLMessagesGetSearchCounters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetSearchCounters {
    return new TLMessagesGetSearchCounters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetSearchCounters {
    return new TLMessagesGetSearchCounters().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetSearchCounters | PlainMessage<TLMessagesGetSearchCounters> | undefined, b: TLMessagesGetSearchCounters | PlainMessage<TLMessagesGetSearchCounters> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetSearchCounters, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesRequestUrlAuth
 */
export class TLMessagesRequestUrlAuth extends Message<TLMessagesRequestUrlAuth> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value msg_id = 4;
   */
  msgId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value button_id = 5;
   */
  buttonId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue url = 6;
   */
  url: StringValue[] = [];

  constructor(data?: PartialMessage<TLMessagesRequestUrlAuth>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesRequestUrlAuth";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 5, name: "button_id", kind: "message", T: Int32Value, repeated: true },
    { no: 6, name: "url", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesRequestUrlAuth {
    return new TLMessagesRequestUrlAuth().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesRequestUrlAuth {
    return new TLMessagesRequestUrlAuth().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesRequestUrlAuth {
    return new TLMessagesRequestUrlAuth().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesRequestUrlAuth | PlainMessage<TLMessagesRequestUrlAuth> | undefined, b: TLMessagesRequestUrlAuth | PlainMessage<TLMessagesRequestUrlAuth> | undefined): boolean {
    return proto3.util.equals(TLMessagesRequestUrlAuth, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesAcceptUrlAuth
 */
export class TLMessagesAcceptUrlAuth extends Message<TLMessagesAcceptUrlAuth> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool write_allowed = 3;
   */
  writeAllowed = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value msg_id = 5;
   */
  msgId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value button_id = 6;
   */
  buttonId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue url = 7;
   */
  url: StringValue[] = [];

  constructor(data?: PartialMessage<TLMessagesAcceptUrlAuth>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesAcceptUrlAuth";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "write_allowed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 6, name: "button_id", kind: "message", T: Int32Value, repeated: true },
    { no: 7, name: "url", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesAcceptUrlAuth {
    return new TLMessagesAcceptUrlAuth().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesAcceptUrlAuth {
    return new TLMessagesAcceptUrlAuth().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesAcceptUrlAuth {
    return new TLMessagesAcceptUrlAuth().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesAcceptUrlAuth | PlainMessage<TLMessagesAcceptUrlAuth> | undefined, b: TLMessagesAcceptUrlAuth | PlainMessage<TLMessagesAcceptUrlAuth> | undefined): boolean {
    return proto3.util.equals(TLMessagesAcceptUrlAuth, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesHidePeerSettingsBar
 */
export class TLMessagesHidePeerSettingsBar extends Message<TLMessagesHidePeerSettingsBar> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesHidePeerSettingsBar>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesHidePeerSettingsBar";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesHidePeerSettingsBar {
    return new TLMessagesHidePeerSettingsBar().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesHidePeerSettingsBar {
    return new TLMessagesHidePeerSettingsBar().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesHidePeerSettingsBar {
    return new TLMessagesHidePeerSettingsBar().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesHidePeerSettingsBar | PlainMessage<TLMessagesHidePeerSettingsBar> | undefined, b: TLMessagesHidePeerSettingsBar | PlainMessage<TLMessagesHidePeerSettingsBar> | undefined): boolean {
    return proto3.util.equals(TLMessagesHidePeerSettingsBar, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetScheduledHistory
 */
export class TLMessagesGetScheduledHistory extends Message<TLMessagesGetScheduledHistory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int64 hash = 4;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetScheduledHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetScheduledHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetScheduledHistory {
    return new TLMessagesGetScheduledHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetScheduledHistory {
    return new TLMessagesGetScheduledHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetScheduledHistory {
    return new TLMessagesGetScheduledHistory().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetScheduledHistory | PlainMessage<TLMessagesGetScheduledHistory> | undefined, b: TLMessagesGetScheduledHistory | PlainMessage<TLMessagesGetScheduledHistory> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetScheduledHistory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetScheduledMessages
 */
export class TLMessagesGetScheduledMessages extends Message<TLMessagesGetScheduledMessages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<TLMessagesGetScheduledMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetScheduledMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetScheduledMessages {
    return new TLMessagesGetScheduledMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetScheduledMessages {
    return new TLMessagesGetScheduledMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetScheduledMessages {
    return new TLMessagesGetScheduledMessages().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetScheduledMessages | PlainMessage<TLMessagesGetScheduledMessages> | undefined, b: TLMessagesGetScheduledMessages | PlainMessage<TLMessagesGetScheduledMessages> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetScheduledMessages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendScheduledMessages
 */
export class TLMessagesSendScheduledMessages extends Message<TLMessagesSendScheduledMessages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<TLMessagesSendScheduledMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendScheduledMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendScheduledMessages {
    return new TLMessagesSendScheduledMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendScheduledMessages {
    return new TLMessagesSendScheduledMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendScheduledMessages {
    return new TLMessagesSendScheduledMessages().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendScheduledMessages | PlainMessage<TLMessagesSendScheduledMessages> | undefined, b: TLMessagesSendScheduledMessages | PlainMessage<TLMessagesSendScheduledMessages> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendScheduledMessages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteScheduledMessages
 */
export class TLMessagesDeleteScheduledMessages extends Message<TLMessagesDeleteScheduledMessages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<TLMessagesDeleteScheduledMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteScheduledMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesDeleteScheduledMessages {
    return new TLMessagesDeleteScheduledMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesDeleteScheduledMessages {
    return new TLMessagesDeleteScheduledMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesDeleteScheduledMessages {
    return new TLMessagesDeleteScheduledMessages().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesDeleteScheduledMessages | PlainMessage<TLMessagesDeleteScheduledMessages> | undefined, b: TLMessagesDeleteScheduledMessages | PlainMessage<TLMessagesDeleteScheduledMessages> | undefined): boolean {
    return proto3.util.equals(TLMessagesDeleteScheduledMessages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetPollVotes
 */
export class TLMessagesGetPollVotes extends Message<TLMessagesGetPollVotes> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: bytes option = 5;
   */
  option = new Uint8Array(0);

  /**
   * @generated from field: repeated google.protobuf.StringValue offset = 6;
   */
  offset: StringValue[] = [];

  /**
   * @generated from field: int32 limit = 7;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLMessagesGetPollVotes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetPollVotes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "option", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "offset", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetPollVotes {
    return new TLMessagesGetPollVotes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetPollVotes {
    return new TLMessagesGetPollVotes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetPollVotes {
    return new TLMessagesGetPollVotes().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetPollVotes | PlainMessage<TLMessagesGetPollVotes> | undefined, b: TLMessagesGetPollVotes | PlainMessage<TLMessagesGetPollVotes> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetPollVotes, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesToggleStickerSets
 */
export class TLMessagesToggleStickerSets extends Message<TLMessagesToggleStickerSets> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool uninstall = 3;
   */
  uninstall = false;

  /**
   * @generated from field: bool archive = 4;
   */
  archive = false;

  /**
   * @generated from field: bool unarchive = 5;
   */
  unarchive = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickerSet stickersets = 6;
   */
  stickersets: InputStickerSet[] = [];

  constructor(data?: PartialMessage<TLMessagesToggleStickerSets>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesToggleStickerSets";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "uninstall", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "archive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "unarchive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "stickersets", kind: "message", T: InputStickerSet, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesToggleStickerSets {
    return new TLMessagesToggleStickerSets().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesToggleStickerSets {
    return new TLMessagesToggleStickerSets().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesToggleStickerSets {
    return new TLMessagesToggleStickerSets().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesToggleStickerSets | PlainMessage<TLMessagesToggleStickerSets> | undefined, b: TLMessagesToggleStickerSets | PlainMessage<TLMessagesToggleStickerSets> | undefined): boolean {
    return proto3.util.equals(TLMessagesToggleStickerSets, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDialogFilters
 */
export class TLMessagesGetDialogFilters extends Message<TLMessagesGetDialogFilters> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLMessagesGetDialogFilters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDialogFilters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetDialogFilters {
    return new TLMessagesGetDialogFilters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetDialogFilters {
    return new TLMessagesGetDialogFilters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetDialogFilters {
    return new TLMessagesGetDialogFilters().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetDialogFilters | PlainMessage<TLMessagesGetDialogFilters> | undefined, b: TLMessagesGetDialogFilters | PlainMessage<TLMessagesGetDialogFilters> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetDialogFilters, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSuggestedDialogFilters
 */
export class TLMessagesGetSuggestedDialogFilters extends Message<TLMessagesGetSuggestedDialogFilters> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLMessagesGetSuggestedDialogFilters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSuggestedDialogFilters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetSuggestedDialogFilters {
    return new TLMessagesGetSuggestedDialogFilters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetSuggestedDialogFilters {
    return new TLMessagesGetSuggestedDialogFilters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetSuggestedDialogFilters {
    return new TLMessagesGetSuggestedDialogFilters().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetSuggestedDialogFilters | PlainMessage<TLMessagesGetSuggestedDialogFilters> | undefined, b: TLMessagesGetSuggestedDialogFilters | PlainMessage<TLMessagesGetSuggestedDialogFilters> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetSuggestedDialogFilters, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesUpdateDialogFilter
 */
export class TLMessagesUpdateDialogFilter extends Message<TLMessagesUpdateDialogFilter> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 id = 3;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DialogFilter filter = 4;
   */
  filter: DialogFilter[] = [];

  constructor(data?: PartialMessage<TLMessagesUpdateDialogFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesUpdateDialogFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "filter", kind: "message", T: DialogFilter, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesUpdateDialogFilter {
    return new TLMessagesUpdateDialogFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesUpdateDialogFilter {
    return new TLMessagesUpdateDialogFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesUpdateDialogFilter {
    return new TLMessagesUpdateDialogFilter().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesUpdateDialogFilter | PlainMessage<TLMessagesUpdateDialogFilter> | undefined, b: TLMessagesUpdateDialogFilter | PlainMessage<TLMessagesUpdateDialogFilter> | undefined): boolean {
    return proto3.util.equals(TLMessagesUpdateDialogFilter, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesUpdateDialogFiltersOrder
 */
export class TLMessagesUpdateDialogFiltersOrder extends Message<TLMessagesUpdateDialogFiltersOrder> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 order = 3;
   */
  order = 0;

  constructor(data?: PartialMessage<TLMessagesUpdateDialogFiltersOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesUpdateDialogFiltersOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "order", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesUpdateDialogFiltersOrder {
    return new TLMessagesUpdateDialogFiltersOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesUpdateDialogFiltersOrder {
    return new TLMessagesUpdateDialogFiltersOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesUpdateDialogFiltersOrder {
    return new TLMessagesUpdateDialogFiltersOrder().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesUpdateDialogFiltersOrder | PlainMessage<TLMessagesUpdateDialogFiltersOrder> | undefined, b: TLMessagesUpdateDialogFiltersOrder | PlainMessage<TLMessagesUpdateDialogFiltersOrder> | undefined): boolean {
    return proto3.util.equals(TLMessagesUpdateDialogFiltersOrder, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetOldFeaturedStickers
 */
export class TLMessagesGetOldFeaturedStickers extends Message<TLMessagesGetOldFeaturedStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 offset = 3;
   */
  offset = 0;

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  /**
   * @generated from field: int64 hash = 5;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetOldFeaturedStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetOldFeaturedStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetOldFeaturedStickers {
    return new TLMessagesGetOldFeaturedStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetOldFeaturedStickers {
    return new TLMessagesGetOldFeaturedStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetOldFeaturedStickers {
    return new TLMessagesGetOldFeaturedStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetOldFeaturedStickers | PlainMessage<TLMessagesGetOldFeaturedStickers> | undefined, b: TLMessagesGetOldFeaturedStickers | PlainMessage<TLMessagesGetOldFeaturedStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetOldFeaturedStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetReplies
 */
export class TLMessagesGetReplies extends Message<TLMessagesGetReplies> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  /**
   * @generated from field: int32 offset_id = 5;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 offset_date = 6;
   */
  offsetDate = 0;

  /**
   * @generated from field: int32 add_offset = 7;
   */
  addOffset = 0;

  /**
   * @generated from field: int32 limit = 8;
   */
  limit = 0;

  /**
   * @generated from field: int32 max_id = 9;
   */
  maxId = 0;

  /**
   * @generated from field: int32 min_id = 10;
   */
  minId = 0;

  /**
   * @generated from field: int64 hash = 11;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetReplies>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetReplies";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "offset_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "add_offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "min_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetReplies {
    return new TLMessagesGetReplies().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetReplies {
    return new TLMessagesGetReplies().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetReplies {
    return new TLMessagesGetReplies().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetReplies | PlainMessage<TLMessagesGetReplies> | undefined, b: TLMessagesGetReplies | PlainMessage<TLMessagesGetReplies> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetReplies, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDiscussionMessage
 */
export class TLMessagesGetDiscussionMessage extends Message<TLMessagesGetDiscussionMessage> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLMessagesGetDiscussionMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDiscussionMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetDiscussionMessage {
    return new TLMessagesGetDiscussionMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetDiscussionMessage {
    return new TLMessagesGetDiscussionMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetDiscussionMessage {
    return new TLMessagesGetDiscussionMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetDiscussionMessage | PlainMessage<TLMessagesGetDiscussionMessage> | undefined, b: TLMessagesGetDiscussionMessage | PlainMessage<TLMessagesGetDiscussionMessage> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetDiscussionMessage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadDiscussion
 */
export class TLMessagesReadDiscussion extends Message<TLMessagesReadDiscussion> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  /**
   * @generated from field: int32 read_max_id = 5;
   */
  readMaxId = 0;

  constructor(data?: PartialMessage<TLMessagesReadDiscussion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadDiscussion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "read_max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReadDiscussion {
    return new TLMessagesReadDiscussion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReadDiscussion {
    return new TLMessagesReadDiscussion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReadDiscussion {
    return new TLMessagesReadDiscussion().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReadDiscussion | PlainMessage<TLMessagesReadDiscussion> | undefined, b: TLMessagesReadDiscussion | PlainMessage<TLMessagesReadDiscussion> | undefined): boolean {
    return proto3.util.equals(TLMessagesReadDiscussion, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesUnpinAllMessages
 */
export class TLMessagesUnpinAllMessages extends Message<TLMessagesUnpinAllMessages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 4;
   */
  topMsgId: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesUnpinAllMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesUnpinAllMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesUnpinAllMessages {
    return new TLMessagesUnpinAllMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesUnpinAllMessages {
    return new TLMessagesUnpinAllMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesUnpinAllMessages {
    return new TLMessagesUnpinAllMessages().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesUnpinAllMessages | PlainMessage<TLMessagesUnpinAllMessages> | undefined, b: TLMessagesUnpinAllMessages | PlainMessage<TLMessagesUnpinAllMessages> | undefined): boolean {
    return proto3.util.equals(TLMessagesUnpinAllMessages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteChat
 */
export class TLMessagesDeleteChat extends Message<TLMessagesDeleteChat> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 chat_id = 3;
   */
  chatId = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesDeleteChat>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteChat";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chat_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesDeleteChat {
    return new TLMessagesDeleteChat().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesDeleteChat {
    return new TLMessagesDeleteChat().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesDeleteChat {
    return new TLMessagesDeleteChat().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesDeleteChat | PlainMessage<TLMessagesDeleteChat> | undefined, b: TLMessagesDeleteChat | PlainMessage<TLMessagesDeleteChat> | undefined): boolean {
    return proto3.util.equals(TLMessagesDeleteChat, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeletePhoneCallHistory
 */
export class TLMessagesDeletePhoneCallHistory extends Message<TLMessagesDeletePhoneCallHistory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool revoke = 3;
   */
  revoke = false;

  constructor(data?: PartialMessage<TLMessagesDeletePhoneCallHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeletePhoneCallHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "revoke", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesDeletePhoneCallHistory {
    return new TLMessagesDeletePhoneCallHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesDeletePhoneCallHistory {
    return new TLMessagesDeletePhoneCallHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesDeletePhoneCallHistory {
    return new TLMessagesDeletePhoneCallHistory().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesDeletePhoneCallHistory | PlainMessage<TLMessagesDeletePhoneCallHistory> | undefined, b: TLMessagesDeletePhoneCallHistory | PlainMessage<TLMessagesDeletePhoneCallHistory> | undefined): boolean {
    return proto3.util.equals(TLMessagesDeletePhoneCallHistory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesCheckHistoryImport
 */
export class TLMessagesCheckHistoryImport extends Message<TLMessagesCheckHistoryImport> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string import_head = 3;
   */
  importHead = "";

  constructor(data?: PartialMessage<TLMessagesCheckHistoryImport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesCheckHistoryImport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "import_head", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesCheckHistoryImport {
    return new TLMessagesCheckHistoryImport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesCheckHistoryImport {
    return new TLMessagesCheckHistoryImport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesCheckHistoryImport {
    return new TLMessagesCheckHistoryImport().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesCheckHistoryImport | PlainMessage<TLMessagesCheckHistoryImport> | undefined, b: TLMessagesCheckHistoryImport | PlainMessage<TLMessagesCheckHistoryImport> | undefined): boolean {
    return proto3.util.equals(TLMessagesCheckHistoryImport, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesInitHistoryImport
 */
export class TLMessagesInitHistoryImport extends Message<TLMessagesInitHistoryImport> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFile file = 4;
   */
  file: InputFile[] = [];

  /**
   * @generated from field: int32 media_count = 5;
   */
  mediaCount = 0;

  constructor(data?: PartialMessage<TLMessagesInitHistoryImport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesInitHistoryImport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "file", kind: "message", T: InputFile, repeated: true },
    { no: 5, name: "media_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesInitHistoryImport {
    return new TLMessagesInitHistoryImport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesInitHistoryImport {
    return new TLMessagesInitHistoryImport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesInitHistoryImport {
    return new TLMessagesInitHistoryImport().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesInitHistoryImport | PlainMessage<TLMessagesInitHistoryImport> | undefined, b: TLMessagesInitHistoryImport | PlainMessage<TLMessagesInitHistoryImport> | undefined): boolean {
    return proto3.util.equals(TLMessagesInitHistoryImport, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesUploadImportedMedia
 */
export class TLMessagesUploadImportedMedia extends Message<TLMessagesUploadImportedMedia> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int64 import_id = 4;
   */
  importId = protoInt64.zero;

  /**
   * @generated from field: string file_name = 5;
   */
  fileName = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputMedia media = 6;
   */
  media: InputMedia[] = [];

  constructor(data?: PartialMessage<TLMessagesUploadImportedMedia>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesUploadImportedMedia";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "import_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "file_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "media", kind: "message", T: InputMedia, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesUploadImportedMedia {
    return new TLMessagesUploadImportedMedia().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesUploadImportedMedia {
    return new TLMessagesUploadImportedMedia().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesUploadImportedMedia {
    return new TLMessagesUploadImportedMedia().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesUploadImportedMedia | PlainMessage<TLMessagesUploadImportedMedia> | undefined, b: TLMessagesUploadImportedMedia | PlainMessage<TLMessagesUploadImportedMedia> | undefined): boolean {
    return proto3.util.equals(TLMessagesUploadImportedMedia, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesStartHistoryImport
 */
export class TLMessagesStartHistoryImport extends Message<TLMessagesStartHistoryImport> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int64 import_id = 4;
   */
  importId = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesStartHistoryImport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesStartHistoryImport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "import_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesStartHistoryImport {
    return new TLMessagesStartHistoryImport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesStartHistoryImport {
    return new TLMessagesStartHistoryImport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesStartHistoryImport {
    return new TLMessagesStartHistoryImport().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesStartHistoryImport | PlainMessage<TLMessagesStartHistoryImport> | undefined, b: TLMessagesStartHistoryImport | PlainMessage<TLMessagesStartHistoryImport> | undefined): boolean {
    return proto3.util.equals(TLMessagesStartHistoryImport, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetExportedChatInvites
 */
export class TLMessagesGetExportedChatInvites extends Message<TLMessagesGetExportedChatInvites> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool revoked = 3;
   */
  revoked = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser admin_id = 5;
   */
  adminId: InputUser[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value offset_date = 6;
   */
  offsetDate: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue offset_link = 7;
   */
  offsetLink: StringValue[] = [];

  /**
   * @generated from field: int32 limit = 8;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLMessagesGetExportedChatInvites>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetExportedChatInvites";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "revoked", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "admin_id", kind: "message", T: InputUser, repeated: true },
    { no: 6, name: "offset_date", kind: "message", T: Int32Value, repeated: true },
    { no: 7, name: "offset_link", kind: "message", T: StringValue, repeated: true },
    { no: 8, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetExportedChatInvites {
    return new TLMessagesGetExportedChatInvites().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetExportedChatInvites {
    return new TLMessagesGetExportedChatInvites().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetExportedChatInvites {
    return new TLMessagesGetExportedChatInvites().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetExportedChatInvites | PlainMessage<TLMessagesGetExportedChatInvites> | undefined, b: TLMessagesGetExportedChatInvites | PlainMessage<TLMessagesGetExportedChatInvites> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetExportedChatInvites, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetExportedChatInvite
 */
export class TLMessagesGetExportedChatInvite extends Message<TLMessagesGetExportedChatInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: string link = 4;
   */
  link = "";

  constructor(data?: PartialMessage<TLMessagesGetExportedChatInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetExportedChatInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetExportedChatInvite {
    return new TLMessagesGetExportedChatInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetExportedChatInvite {
    return new TLMessagesGetExportedChatInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetExportedChatInvite {
    return new TLMessagesGetExportedChatInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetExportedChatInvite | PlainMessage<TLMessagesGetExportedChatInvite> | undefined, b: TLMessagesGetExportedChatInvite | PlainMessage<TLMessagesGetExportedChatInvite> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetExportedChatInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditExportedChatInvite
 */
export class TLMessagesEditExportedChatInvite extends Message<TLMessagesEditExportedChatInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool revoked = 3;
   */
  revoked = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: string link = 5;
   */
  link = "";

  /**
   * @generated from field: repeated google.protobuf.Int32Value expire_date = 6;
   */
  expireDate: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value usage_limit = 7;
   */
  usageLimit: Int32Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool request_needed = 8;
   */
  requestNeeded: Bool[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue title = 9;
   */
  title: StringValue[] = [];

  constructor(data?: PartialMessage<TLMessagesEditExportedChatInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesEditExportedChatInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "revoked", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "expire_date", kind: "message", T: Int32Value, repeated: true },
    { no: 7, name: "usage_limit", kind: "message", T: Int32Value, repeated: true },
    { no: 8, name: "request_needed", kind: "message", T: Bool, repeated: true },
    { no: 9, name: "title", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesEditExportedChatInvite {
    return new TLMessagesEditExportedChatInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesEditExportedChatInvite {
    return new TLMessagesEditExportedChatInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesEditExportedChatInvite {
    return new TLMessagesEditExportedChatInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesEditExportedChatInvite | PlainMessage<TLMessagesEditExportedChatInvite> | undefined, b: TLMessagesEditExportedChatInvite | PlainMessage<TLMessagesEditExportedChatInvite> | undefined): boolean {
    return proto3.util.equals(TLMessagesEditExportedChatInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteRevokedExportedChatInvites
 */
export class TLMessagesDeleteRevokedExportedChatInvites extends Message<TLMessagesDeleteRevokedExportedChatInvites> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser admin_id = 4;
   */
  adminId: InputUser[] = [];

  constructor(data?: PartialMessage<TLMessagesDeleteRevokedExportedChatInvites>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteRevokedExportedChatInvites";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "admin_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesDeleteRevokedExportedChatInvites {
    return new TLMessagesDeleteRevokedExportedChatInvites().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesDeleteRevokedExportedChatInvites {
    return new TLMessagesDeleteRevokedExportedChatInvites().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesDeleteRevokedExportedChatInvites {
    return new TLMessagesDeleteRevokedExportedChatInvites().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesDeleteRevokedExportedChatInvites | PlainMessage<TLMessagesDeleteRevokedExportedChatInvites> | undefined, b: TLMessagesDeleteRevokedExportedChatInvites | PlainMessage<TLMessagesDeleteRevokedExportedChatInvites> | undefined): boolean {
    return proto3.util.equals(TLMessagesDeleteRevokedExportedChatInvites, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteExportedChatInvite
 */
export class TLMessagesDeleteExportedChatInvite extends Message<TLMessagesDeleteExportedChatInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: string link = 4;
   */
  link = "";

  constructor(data?: PartialMessage<TLMessagesDeleteExportedChatInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesDeleteExportedChatInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesDeleteExportedChatInvite {
    return new TLMessagesDeleteExportedChatInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesDeleteExportedChatInvite {
    return new TLMessagesDeleteExportedChatInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesDeleteExportedChatInvite {
    return new TLMessagesDeleteExportedChatInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesDeleteExportedChatInvite | PlainMessage<TLMessagesDeleteExportedChatInvite> | undefined, b: TLMessagesDeleteExportedChatInvite | PlainMessage<TLMessagesDeleteExportedChatInvite> | undefined): boolean {
    return proto3.util.equals(TLMessagesDeleteExportedChatInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAdminsWithInvites
 */
export class TLMessagesGetAdminsWithInvites extends Message<TLMessagesGetAdminsWithInvites> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesGetAdminsWithInvites>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAdminsWithInvites";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetAdminsWithInvites {
    return new TLMessagesGetAdminsWithInvites().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetAdminsWithInvites {
    return new TLMessagesGetAdminsWithInvites().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetAdminsWithInvites {
    return new TLMessagesGetAdminsWithInvites().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetAdminsWithInvites | PlainMessage<TLMessagesGetAdminsWithInvites> | undefined, b: TLMessagesGetAdminsWithInvites | PlainMessage<TLMessagesGetAdminsWithInvites> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetAdminsWithInvites, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetChatInviteImporters
 */
export class TLMessagesGetChatInviteImporters extends Message<TLMessagesGetChatInviteImporters> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool requested = 3;
   */
  requested = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue link = 5;
   */
  link: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue q = 6;
   */
  q: StringValue[] = [];

  /**
   * @generated from field: int32 offset_date = 7;
   */
  offsetDate = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser offset_user = 8;
   */
  offsetUser: InputUser[] = [];

  /**
   * @generated from field: int32 limit = 9;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLMessagesGetChatInviteImporters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetChatInviteImporters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "requested", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "link", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "q", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "offset_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "offset_user", kind: "message", T: InputUser, repeated: true },
    { no: 9, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetChatInviteImporters {
    return new TLMessagesGetChatInviteImporters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetChatInviteImporters {
    return new TLMessagesGetChatInviteImporters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetChatInviteImporters {
    return new TLMessagesGetChatInviteImporters().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetChatInviteImporters | PlainMessage<TLMessagesGetChatInviteImporters> | undefined, b: TLMessagesGetChatInviteImporters | PlainMessage<TLMessagesGetChatInviteImporters> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetChatInviteImporters, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetHistoryTTL
 */
export class TLMessagesSetHistoryTTL extends Message<TLMessagesSetHistoryTTL> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 period = 4;
   */
  period = 0;

  constructor(data?: PartialMessage<TLMessagesSetHistoryTTL>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetHistoryTTL";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "period", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetHistoryTTL {
    return new TLMessagesSetHistoryTTL().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetHistoryTTL {
    return new TLMessagesSetHistoryTTL().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetHistoryTTL {
    return new TLMessagesSetHistoryTTL().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetHistoryTTL | PlainMessage<TLMessagesSetHistoryTTL> | undefined, b: TLMessagesSetHistoryTTL | PlainMessage<TLMessagesSetHistoryTTL> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetHistoryTTL, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesCheckHistoryImportPeer
 */
export class TLMessagesCheckHistoryImportPeer extends Message<TLMessagesCheckHistoryImportPeer> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesCheckHistoryImportPeer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesCheckHistoryImportPeer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesCheckHistoryImportPeer {
    return new TLMessagesCheckHistoryImportPeer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesCheckHistoryImportPeer {
    return new TLMessagesCheckHistoryImportPeer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesCheckHistoryImportPeer {
    return new TLMessagesCheckHistoryImportPeer().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesCheckHistoryImportPeer | PlainMessage<TLMessagesCheckHistoryImportPeer> | undefined, b: TLMessagesCheckHistoryImportPeer | PlainMessage<TLMessagesCheckHistoryImportPeer> | undefined): boolean {
    return proto3.util.equals(TLMessagesCheckHistoryImportPeer, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetChatTheme
 */
export class TLMessagesSetChatTheme extends Message<TLMessagesSetChatTheme> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: string emoticon = 4;
   */
  emoticon = "";

  constructor(data?: PartialMessage<TLMessagesSetChatTheme>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetChatTheme";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "emoticon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetChatTheme {
    return new TLMessagesSetChatTheme().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetChatTheme {
    return new TLMessagesSetChatTheme().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetChatTheme {
    return new TLMessagesSetChatTheme().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetChatTheme | PlainMessage<TLMessagesSetChatTheme> | undefined, b: TLMessagesSetChatTheme | PlainMessage<TLMessagesSetChatTheme> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetChatTheme, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessageReadParticipants31C1C44F
 */
export class TLMessagesGetMessageReadParticipants31C1C44F extends Message<TLMessagesGetMessageReadParticipants31C1C44F> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLMessagesGetMessageReadParticipants31C1C44F>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessageReadParticipants31C1C44F";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetMessageReadParticipants31C1C44F {
    return new TLMessagesGetMessageReadParticipants31C1C44F().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetMessageReadParticipants31C1C44F {
    return new TLMessagesGetMessageReadParticipants31C1C44F().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetMessageReadParticipants31C1C44F {
    return new TLMessagesGetMessageReadParticipants31C1C44F().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetMessageReadParticipants31C1C44F | PlainMessage<TLMessagesGetMessageReadParticipants31C1C44F> | undefined, b: TLMessagesGetMessageReadParticipants31C1C44F | PlainMessage<TLMessagesGetMessageReadParticipants31C1C44F> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetMessageReadParticipants31C1C44F, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSearchResultsCalendar
 */
export class TLMessagesGetSearchResultsCalendar extends Message<TLMessagesGetSearchResultsCalendar> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessagesFilter filter = 4;
   */
  filter: MessagesFilter[] = [];

  /**
   * @generated from field: int32 offset_id = 5;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 offset_date = 6;
   */
  offsetDate = 0;

  constructor(data?: PartialMessage<TLMessagesGetSearchResultsCalendar>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSearchResultsCalendar";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "filter", kind: "message", T: MessagesFilter, repeated: true },
    { no: 5, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "offset_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetSearchResultsCalendar {
    return new TLMessagesGetSearchResultsCalendar().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetSearchResultsCalendar {
    return new TLMessagesGetSearchResultsCalendar().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetSearchResultsCalendar {
    return new TLMessagesGetSearchResultsCalendar().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetSearchResultsCalendar | PlainMessage<TLMessagesGetSearchResultsCalendar> | undefined, b: TLMessagesGetSearchResultsCalendar | PlainMessage<TLMessagesGetSearchResultsCalendar> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetSearchResultsCalendar, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSearchResultsPositions
 */
export class TLMessagesGetSearchResultsPositions extends Message<TLMessagesGetSearchResultsPositions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessagesFilter filter = 4;
   */
  filter: MessagesFilter[] = [];

  /**
   * @generated from field: int32 offset_id = 5;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 limit = 6;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLMessagesGetSearchResultsPositions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetSearchResultsPositions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "filter", kind: "message", T: MessagesFilter, repeated: true },
    { no: 5, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetSearchResultsPositions {
    return new TLMessagesGetSearchResultsPositions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetSearchResultsPositions {
    return new TLMessagesGetSearchResultsPositions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetSearchResultsPositions {
    return new TLMessagesGetSearchResultsPositions().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetSearchResultsPositions | PlainMessage<TLMessagesGetSearchResultsPositions> | undefined, b: TLMessagesGetSearchResultsPositions | PlainMessage<TLMessagesGetSearchResultsPositions> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetSearchResultsPositions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesHideChatJoinRequest
 */
export class TLMessagesHideChatJoinRequest extends Message<TLMessagesHideChatJoinRequest> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool approved = 3;
   */
  approved = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 5;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLMessagesHideChatJoinRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesHideChatJoinRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "approved", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesHideChatJoinRequest {
    return new TLMessagesHideChatJoinRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesHideChatJoinRequest {
    return new TLMessagesHideChatJoinRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesHideChatJoinRequest {
    return new TLMessagesHideChatJoinRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesHideChatJoinRequest | PlainMessage<TLMessagesHideChatJoinRequest> | undefined, b: TLMessagesHideChatJoinRequest | PlainMessage<TLMessagesHideChatJoinRequest> | undefined): boolean {
    return proto3.util.equals(TLMessagesHideChatJoinRequest, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesHideAllChatJoinRequests
 */
export class TLMessagesHideAllChatJoinRequests extends Message<TLMessagesHideAllChatJoinRequests> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool approved = 3;
   */
  approved = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue link = 5;
   */
  link: StringValue[] = [];

  constructor(data?: PartialMessage<TLMessagesHideAllChatJoinRequests>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesHideAllChatJoinRequests";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "approved", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "link", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesHideAllChatJoinRequests {
    return new TLMessagesHideAllChatJoinRequests().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesHideAllChatJoinRequests {
    return new TLMessagesHideAllChatJoinRequests().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesHideAllChatJoinRequests {
    return new TLMessagesHideAllChatJoinRequests().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesHideAllChatJoinRequests | PlainMessage<TLMessagesHideAllChatJoinRequests> | undefined, b: TLMessagesHideAllChatJoinRequests | PlainMessage<TLMessagesHideAllChatJoinRequests> | undefined): boolean {
    return proto3.util.equals(TLMessagesHideAllChatJoinRequests, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesToggleNoForwards
 */
export class TLMessagesToggleNoForwards extends Message<TLMessagesToggleNoForwards> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool enabled = 4;
   */
  enabled: Bool[] = [];

  constructor(data?: PartialMessage<TLMessagesToggleNoForwards>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesToggleNoForwards";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "enabled", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesToggleNoForwards {
    return new TLMessagesToggleNoForwards().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesToggleNoForwards {
    return new TLMessagesToggleNoForwards().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesToggleNoForwards {
    return new TLMessagesToggleNoForwards().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesToggleNoForwards | PlainMessage<TLMessagesToggleNoForwards> | undefined, b: TLMessagesToggleNoForwards | PlainMessage<TLMessagesToggleNoForwards> | undefined): boolean {
    return proto3.util.equals(TLMessagesToggleNoForwards, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSaveDefaultSendAs
 */
export class TLMessagesSaveDefaultSendAs extends Message<TLMessagesSaveDefaultSendAs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer send_as = 4;
   */
  sendAs: InputPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesSaveDefaultSendAs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSaveDefaultSendAs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "send_as", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSaveDefaultSendAs {
    return new TLMessagesSaveDefaultSendAs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSaveDefaultSendAs {
    return new TLMessagesSaveDefaultSendAs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSaveDefaultSendAs {
    return new TLMessagesSaveDefaultSendAs().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSaveDefaultSendAs | PlainMessage<TLMessagesSaveDefaultSendAs> | undefined, b: TLMessagesSaveDefaultSendAs | PlainMessage<TLMessagesSaveDefaultSendAs> | undefined): boolean {
    return proto3.util.equals(TLMessagesSaveDefaultSendAs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendReaction
 */
export class TLMessagesSendReaction extends Message<TLMessagesSendReaction> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool big = 3;
   */
  big = false;

  /**
   * @generated from field: bool add_to_recent = 4;
   */
  addToRecent = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 5;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 6;
   */
  msgId = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Reaction reaction_FLAGVECTORREACTION = 7;
   */
  reactionFLAGVECTORREACTION: Reaction[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue reaction_FLAGSTRING = 8;
   */
  reactionFLAGSTRING: StringValue[] = [];

  constructor(data?: PartialMessage<TLMessagesSendReaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendReaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "big", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "add_to_recent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 6, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "reaction_FLAGVECTORREACTION", kind: "message", T: Reaction, repeated: true },
    { no: 8, name: "reaction_FLAGSTRING", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendReaction {
    return new TLMessagesSendReaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendReaction {
    return new TLMessagesSendReaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendReaction {
    return new TLMessagesSendReaction().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendReaction | PlainMessage<TLMessagesSendReaction> | undefined, b: TLMessagesSendReaction | PlainMessage<TLMessagesSendReaction> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendReaction, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessagesReactions
 */
export class TLMessagesGetMessagesReactions extends Message<TLMessagesGetMessagesReactions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<TLMessagesGetMessagesReactions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessagesReactions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetMessagesReactions {
    return new TLMessagesGetMessagesReactions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetMessagesReactions {
    return new TLMessagesGetMessagesReactions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetMessagesReactions {
    return new TLMessagesGetMessagesReactions().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetMessagesReactions | PlainMessage<TLMessagesGetMessagesReactions> | undefined, b: TLMessagesGetMessagesReactions | PlainMessage<TLMessagesGetMessagesReactions> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetMessagesReactions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessageReactionsList
 */
export class TLMessagesGetMessageReactionsList extends Message<TLMessagesGetMessageReactionsList> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Reaction reaction_FLAGREACTION = 5;
   */
  reactionFLAGREACTION: Reaction[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue offset = 6;
   */
  offset: StringValue[] = [];

  /**
   * @generated from field: int32 limit = 7;
   */
  limit = 0;

  /**
   * @generated from field: repeated google.protobuf.StringValue reaction_FLAGSTRING = 8;
   */
  reactionFLAGSTRING: StringValue[] = [];

  constructor(data?: PartialMessage<TLMessagesGetMessageReactionsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessageReactionsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "reaction_FLAGREACTION", kind: "message", T: Reaction, repeated: true },
    { no: 6, name: "offset", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "reaction_FLAGSTRING", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetMessageReactionsList {
    return new TLMessagesGetMessageReactionsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetMessageReactionsList {
    return new TLMessagesGetMessageReactionsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetMessageReactionsList {
    return new TLMessagesGetMessageReactionsList().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetMessageReactionsList | PlainMessage<TLMessagesGetMessageReactionsList> | undefined, b: TLMessagesGetMessageReactionsList | PlainMessage<TLMessagesGetMessageReactionsList> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetMessageReactionsList, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetChatAvailableReactions
 */
export class TLMessagesSetChatAvailableReactions extends Message<TLMessagesSetChatAvailableReactions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ChatReactions available_reactions_CHATREACTIONS = 4;
   */
  availableReactionsCHATREACTIONS: ChatReactions[] = [];

  /**
   * @generated from field: string available_reactions_VECTORSTRING = 5;
   */
  availableReactionsVECTORSTRING = "";

  constructor(data?: PartialMessage<TLMessagesSetChatAvailableReactions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetChatAvailableReactions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "available_reactions_CHATREACTIONS", kind: "message", T: ChatReactions, repeated: true },
    { no: 5, name: "available_reactions_VECTORSTRING", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetChatAvailableReactions {
    return new TLMessagesSetChatAvailableReactions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetChatAvailableReactions {
    return new TLMessagesSetChatAvailableReactions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetChatAvailableReactions {
    return new TLMessagesSetChatAvailableReactions().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetChatAvailableReactions | PlainMessage<TLMessagesSetChatAvailableReactions> | undefined, b: TLMessagesSetChatAvailableReactions | PlainMessage<TLMessagesSetChatAvailableReactions> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetChatAvailableReactions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAvailableReactions
 */
export class TLMessagesGetAvailableReactions extends Message<TLMessagesGetAvailableReactions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 hash = 3;
   */
  hash = 0;

  constructor(data?: PartialMessage<TLMessagesGetAvailableReactions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAvailableReactions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetAvailableReactions {
    return new TLMessagesGetAvailableReactions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetAvailableReactions {
    return new TLMessagesGetAvailableReactions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetAvailableReactions {
    return new TLMessagesGetAvailableReactions().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetAvailableReactions | PlainMessage<TLMessagesGetAvailableReactions> | undefined, b: TLMessagesGetAvailableReactions | PlainMessage<TLMessagesGetAvailableReactions> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetAvailableReactions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetDefaultReaction
 */
export class TLMessagesSetDefaultReaction extends Message<TLMessagesSetDefaultReaction> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Reaction reaction_REACTION = 3;
   */
  reactionREACTION: Reaction[] = [];

  /**
   * @generated from field: string reaction_STRING = 4;
   */
  reactionSTRING = "";

  constructor(data?: PartialMessage<TLMessagesSetDefaultReaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetDefaultReaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "reaction_REACTION", kind: "message", T: Reaction, repeated: true },
    { no: 4, name: "reaction_STRING", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetDefaultReaction {
    return new TLMessagesSetDefaultReaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetDefaultReaction {
    return new TLMessagesSetDefaultReaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetDefaultReaction {
    return new TLMessagesSetDefaultReaction().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetDefaultReaction | PlainMessage<TLMessagesSetDefaultReaction> | undefined, b: TLMessagesSetDefaultReaction | PlainMessage<TLMessagesSetDefaultReaction> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetDefaultReaction, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesTranslateText
 */
export class TLMessagesTranslateText extends Message<TLMessagesTranslateText> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.TextWithEntities text_FLAGVECTORTEXTWITHENTITIES = 5;
   */
  textFLAGVECTORTEXTWITHENTITIES: TextWithEntities[] = [];

  /**
   * @generated from field: string to_lang = 6;
   */
  toLang = "";

  /**
   * @generated from field: repeated google.protobuf.Int32Value msg_id = 7;
   */
  msgId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue text_FLAGSTRING = 8;
   */
  textFLAGSTRING: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue from_lang = 9;
   */
  fromLang: StringValue[] = [];

  constructor(data?: PartialMessage<TLMessagesTranslateText>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesTranslateText";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "text_FLAGVECTORTEXTWITHENTITIES", kind: "message", T: TextWithEntities, repeated: true },
    { no: 6, name: "to_lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 8, name: "text_FLAGSTRING", kind: "message", T: StringValue, repeated: true },
    { no: 9, name: "from_lang", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesTranslateText {
    return new TLMessagesTranslateText().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesTranslateText {
    return new TLMessagesTranslateText().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesTranslateText {
    return new TLMessagesTranslateText().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesTranslateText | PlainMessage<TLMessagesTranslateText> | undefined, b: TLMessagesTranslateText | PlainMessage<TLMessagesTranslateText> | undefined): boolean {
    return proto3.util.equals(TLMessagesTranslateText, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetUnreadReactions
 */
export class TLMessagesGetUnreadReactions extends Message<TLMessagesGetUnreadReactions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 4;
   */
  topMsgId: Int32Value[] = [];

  /**
   * @generated from field: int32 offset_id = 5;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 add_offset = 6;
   */
  addOffset = 0;

  /**
   * @generated from field: int32 limit = 7;
   */
  limit = 0;

  /**
   * @generated from field: int32 max_id = 8;
   */
  maxId = 0;

  /**
   * @generated from field: int32 min_id = 9;
   */
  minId = 0;

  constructor(data?: PartialMessage<TLMessagesGetUnreadReactions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetUnreadReactions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 5, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "add_offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "min_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetUnreadReactions {
    return new TLMessagesGetUnreadReactions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetUnreadReactions {
    return new TLMessagesGetUnreadReactions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetUnreadReactions {
    return new TLMessagesGetUnreadReactions().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetUnreadReactions | PlainMessage<TLMessagesGetUnreadReactions> | undefined, b: TLMessagesGetUnreadReactions | PlainMessage<TLMessagesGetUnreadReactions> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetUnreadReactions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadReactions
 */
export class TLMessagesReadReactions extends Message<TLMessagesReadReactions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 4;
   */
  topMsgId: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesReadReactions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReadReactions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReadReactions {
    return new TLMessagesReadReactions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReadReactions {
    return new TLMessagesReadReactions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReadReactions {
    return new TLMessagesReadReactions().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReadReactions | PlainMessage<TLMessagesReadReactions> | undefined, b: TLMessagesReadReactions | PlainMessage<TLMessagesReadReactions> | undefined): boolean {
    return proto3.util.equals(TLMessagesReadReactions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSearchSentMedia
 */
export class TLMessagesSearchSentMedia extends Message<TLMessagesSearchSentMedia> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string q = 3;
   */
  q = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessagesFilter filter = 4;
   */
  filter: MessagesFilter[] = [];

  /**
   * @generated from field: int32 limit = 5;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLMessagesSearchSentMedia>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSearchSentMedia";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "q", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "message", T: MessagesFilter, repeated: true },
    { no: 5, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSearchSentMedia {
    return new TLMessagesSearchSentMedia().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSearchSentMedia {
    return new TLMessagesSearchSentMedia().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSearchSentMedia {
    return new TLMessagesSearchSentMedia().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSearchSentMedia | PlainMessage<TLMessagesSearchSentMedia> | undefined, b: TLMessagesSearchSentMedia | PlainMessage<TLMessagesSearchSentMedia> | undefined): boolean {
    return proto3.util.equals(TLMessagesSearchSentMedia, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAttachMenuBots
 */
export class TLMessagesGetAttachMenuBots extends Message<TLMessagesGetAttachMenuBots> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetAttachMenuBots>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAttachMenuBots";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetAttachMenuBots {
    return new TLMessagesGetAttachMenuBots().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetAttachMenuBots {
    return new TLMessagesGetAttachMenuBots().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetAttachMenuBots {
    return new TLMessagesGetAttachMenuBots().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetAttachMenuBots | PlainMessage<TLMessagesGetAttachMenuBots> | undefined, b: TLMessagesGetAttachMenuBots | PlainMessage<TLMessagesGetAttachMenuBots> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetAttachMenuBots, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAttachMenuBot
 */
export class TLMessagesGetAttachMenuBot extends Message<TLMessagesGetAttachMenuBot> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 3;
   */
  bot: InputUser[] = [];

  constructor(data?: PartialMessage<TLMessagesGetAttachMenuBot>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAttachMenuBot";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetAttachMenuBot {
    return new TLMessagesGetAttachMenuBot().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetAttachMenuBot {
    return new TLMessagesGetAttachMenuBot().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetAttachMenuBot {
    return new TLMessagesGetAttachMenuBot().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetAttachMenuBot | PlainMessage<TLMessagesGetAttachMenuBot> | undefined, b: TLMessagesGetAttachMenuBot | PlainMessage<TLMessagesGetAttachMenuBot> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetAttachMenuBot, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesToggleBotInAttachMenu
 */
export class TLMessagesToggleBotInAttachMenu extends Message<TLMessagesToggleBotInAttachMenu> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool write_allowed = 3;
   */
  writeAllowed = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 4;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool enabled = 5;
   */
  enabled: Bool[] = [];

  constructor(data?: PartialMessage<TLMessagesToggleBotInAttachMenu>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesToggleBotInAttachMenu";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "write_allowed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 5, name: "enabled", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesToggleBotInAttachMenu {
    return new TLMessagesToggleBotInAttachMenu().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesToggleBotInAttachMenu {
    return new TLMessagesToggleBotInAttachMenu().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesToggleBotInAttachMenu {
    return new TLMessagesToggleBotInAttachMenu().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesToggleBotInAttachMenu | PlainMessage<TLMessagesToggleBotInAttachMenu> | undefined, b: TLMessagesToggleBotInAttachMenu | PlainMessage<TLMessagesToggleBotInAttachMenu> | undefined): boolean {
    return proto3.util.equals(TLMessagesToggleBotInAttachMenu, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesRequestWebView
 */
export class TLMessagesRequestWebView extends Message<TLMessagesRequestWebView> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool from_bot_menu = 3;
   */
  fromBotMenu = false;

  /**
   * @generated from field: bool silent = 4;
   */
  silent = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 5;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 6;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue url = 7;
   */
  url: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue start_param = 8;
   */
  startParam: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON theme_params = 9;
   */
  themeParams: DataJSON[] = [];

  /**
   * @generated from field: string platform = 10;
   */
  platform = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputReplyTo reply_to = 11;
   */
  replyTo: InputReplyTo[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer send_as = 12;
   */
  sendAs: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value reply_to_msg_id = 13;
   */
  replyToMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 14;
   */
  topMsgId: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesRequestWebView>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesRequestWebView";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "from_bot_menu", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "silent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 6, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 7, name: "url", kind: "message", T: StringValue, repeated: true },
    { no: 8, name: "start_param", kind: "message", T: StringValue, repeated: true },
    { no: 9, name: "theme_params", kind: "message", T: DataJSON, repeated: true },
    { no: 10, name: "platform", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "reply_to", kind: "message", T: InputReplyTo, repeated: true },
    { no: 12, name: "send_as", kind: "message", T: InputPeer, repeated: true },
    { no: 13, name: "reply_to_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 14, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesRequestWebView {
    return new TLMessagesRequestWebView().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesRequestWebView {
    return new TLMessagesRequestWebView().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesRequestWebView {
    return new TLMessagesRequestWebView().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesRequestWebView | PlainMessage<TLMessagesRequestWebView> | undefined, b: TLMessagesRequestWebView | PlainMessage<TLMessagesRequestWebView> | undefined): boolean {
    return proto3.util.equals(TLMessagesRequestWebView, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesProlongWebView
 */
export class TLMessagesProlongWebView extends Message<TLMessagesProlongWebView> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool silent = 3;
   */
  silent = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 5;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: int64 query_id = 6;
   */
  queryId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputReplyTo reply_to = 7;
   */
  replyTo: InputReplyTo[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer send_as = 8;
   */
  sendAs: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value reply_to_msg_id = 9;
   */
  replyToMsgId: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value top_msg_id = 10;
   */
  topMsgId: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesProlongWebView>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesProlongWebView";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "silent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 6, name: "query_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "reply_to", kind: "message", T: InputReplyTo, repeated: true },
    { no: 8, name: "send_as", kind: "message", T: InputPeer, repeated: true },
    { no: 9, name: "reply_to_msg_id", kind: "message", T: Int32Value, repeated: true },
    { no: 10, name: "top_msg_id", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesProlongWebView {
    return new TLMessagesProlongWebView().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesProlongWebView {
    return new TLMessagesProlongWebView().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesProlongWebView {
    return new TLMessagesProlongWebView().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesProlongWebView | PlainMessage<TLMessagesProlongWebView> | undefined, b: TLMessagesProlongWebView | PlainMessage<TLMessagesProlongWebView> | undefined): boolean {
    return proto3.util.equals(TLMessagesProlongWebView, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesRequestSimpleWebView
 */
export class TLMessagesRequestSimpleWebView extends Message<TLMessagesRequestSimpleWebView> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool from_switch_webview = 3;
   */
  fromSwitchWebview = false;

  /**
   * @generated from field: bool from_side_menu = 4;
   */
  fromSideMenu = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 5;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue url_FLAGSTRING = 6;
   */
  urlFLAGSTRING: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue start_param = 7;
   */
  startParam: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON theme_params = 8;
   */
  themeParams: DataJSON[] = [];

  /**
   * @generated from field: string platform = 9;
   */
  platform = "";

  /**
   * @generated from field: string url_STRING = 10;
   */
  urlSTRING = "";

  constructor(data?: PartialMessage<TLMessagesRequestSimpleWebView>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesRequestSimpleWebView";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "from_switch_webview", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "from_side_menu", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 6, name: "url_FLAGSTRING", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "start_param", kind: "message", T: StringValue, repeated: true },
    { no: 8, name: "theme_params", kind: "message", T: DataJSON, repeated: true },
    { no: 9, name: "platform", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "url_STRING", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesRequestSimpleWebView {
    return new TLMessagesRequestSimpleWebView().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesRequestSimpleWebView {
    return new TLMessagesRequestSimpleWebView().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesRequestSimpleWebView {
    return new TLMessagesRequestSimpleWebView().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesRequestSimpleWebView | PlainMessage<TLMessagesRequestSimpleWebView> | undefined, b: TLMessagesRequestSimpleWebView | PlainMessage<TLMessagesRequestSimpleWebView> | undefined): boolean {
    return proto3.util.equals(TLMessagesRequestSimpleWebView, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendWebViewResultMessage
 */
export class TLMessagesSendWebViewResultMessage extends Message<TLMessagesSendWebViewResultMessage> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string bot_query_id = 3;
   */
  botQueryId = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputBotInlineResult result = 4;
   */
  result: InputBotInlineResult[] = [];

  constructor(data?: PartialMessage<TLMessagesSendWebViewResultMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendWebViewResultMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot_query_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "result", kind: "message", T: InputBotInlineResult, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendWebViewResultMessage {
    return new TLMessagesSendWebViewResultMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendWebViewResultMessage {
    return new TLMessagesSendWebViewResultMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendWebViewResultMessage {
    return new TLMessagesSendWebViewResultMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendWebViewResultMessage | PlainMessage<TLMessagesSendWebViewResultMessage> | undefined, b: TLMessagesSendWebViewResultMessage | PlainMessage<TLMessagesSendWebViewResultMessage> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendWebViewResultMessage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendWebViewData
 */
export class TLMessagesSendWebViewData extends Message<TLMessagesSendWebViewData> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 3;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: int64 random_id = 4;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: string button_text = 5;
   */
  buttonText = "";

  /**
   * @generated from field: string data = 6;
   */
  data = "";

  constructor(data?: PartialMessage<TLMessagesSendWebViewData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendWebViewData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "button_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendWebViewData {
    return new TLMessagesSendWebViewData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendWebViewData {
    return new TLMessagesSendWebViewData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendWebViewData {
    return new TLMessagesSendWebViewData().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendWebViewData | PlainMessage<TLMessagesSendWebViewData> | undefined, b: TLMessagesSendWebViewData | PlainMessage<TLMessagesSendWebViewData> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendWebViewData, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesTranscribeAudio
 */
export class TLMessagesTranscribeAudio extends Message<TLMessagesTranscribeAudio> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLMessagesTranscribeAudio>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesTranscribeAudio";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesTranscribeAudio {
    return new TLMessagesTranscribeAudio().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesTranscribeAudio {
    return new TLMessagesTranscribeAudio().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesTranscribeAudio {
    return new TLMessagesTranscribeAudio().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesTranscribeAudio | PlainMessage<TLMessagesTranscribeAudio> | undefined, b: TLMessagesTranscribeAudio | PlainMessage<TLMessagesTranscribeAudio> | undefined): boolean {
    return proto3.util.equals(TLMessagesTranscribeAudio, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesRateTranscribedAudio
 */
export class TLMessagesRateTranscribedAudio extends Message<TLMessagesRateTranscribedAudio> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  /**
   * @generated from field: int64 transcription_id = 5;
   */
  transcriptionId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool good = 6;
   */
  good: Bool[] = [];

  constructor(data?: PartialMessage<TLMessagesRateTranscribedAudio>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesRateTranscribedAudio";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "transcription_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "good", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesRateTranscribedAudio {
    return new TLMessagesRateTranscribedAudio().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesRateTranscribedAudio {
    return new TLMessagesRateTranscribedAudio().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesRateTranscribedAudio {
    return new TLMessagesRateTranscribedAudio().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesRateTranscribedAudio | PlainMessage<TLMessagesRateTranscribedAudio> | undefined, b: TLMessagesRateTranscribedAudio | PlainMessage<TLMessagesRateTranscribedAudio> | undefined): boolean {
    return proto3.util.equals(TLMessagesRateTranscribedAudio, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetCustomEmojiDocuments
 */
export class TLMessagesGetCustomEmojiDocuments extends Message<TLMessagesGetCustomEmojiDocuments> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 document_id = 3;
   */
  documentId = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetCustomEmojiDocuments>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetCustomEmojiDocuments";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "document_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetCustomEmojiDocuments {
    return new TLMessagesGetCustomEmojiDocuments().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetCustomEmojiDocuments {
    return new TLMessagesGetCustomEmojiDocuments().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetCustomEmojiDocuments {
    return new TLMessagesGetCustomEmojiDocuments().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetCustomEmojiDocuments | PlainMessage<TLMessagesGetCustomEmojiDocuments> | undefined, b: TLMessagesGetCustomEmojiDocuments | PlainMessage<TLMessagesGetCustomEmojiDocuments> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetCustomEmojiDocuments, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiStickers
 */
export class TLMessagesGetEmojiStickers extends Message<TLMessagesGetEmojiStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetEmojiStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetEmojiStickers {
    return new TLMessagesGetEmojiStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiStickers {
    return new TLMessagesGetEmojiStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiStickers {
    return new TLMessagesGetEmojiStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetEmojiStickers | PlainMessage<TLMessagesGetEmojiStickers> | undefined, b: TLMessagesGetEmojiStickers | PlainMessage<TLMessagesGetEmojiStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetEmojiStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetFeaturedEmojiStickers
 */
export class TLMessagesGetFeaturedEmojiStickers extends Message<TLMessagesGetFeaturedEmojiStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 hash = 3;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetFeaturedEmojiStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetFeaturedEmojiStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetFeaturedEmojiStickers {
    return new TLMessagesGetFeaturedEmojiStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetFeaturedEmojiStickers {
    return new TLMessagesGetFeaturedEmojiStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetFeaturedEmojiStickers {
    return new TLMessagesGetFeaturedEmojiStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetFeaturedEmojiStickers | PlainMessage<TLMessagesGetFeaturedEmojiStickers> | undefined, b: TLMessagesGetFeaturedEmojiStickers | PlainMessage<TLMessagesGetFeaturedEmojiStickers> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetFeaturedEmojiStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesReportReaction
 */
export class TLMessagesReportReaction extends Message<TLMessagesReportReaction> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer reaction_peer = 5;
   */
  reactionPeer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesReportReaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesReportReaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "reaction_peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesReportReaction {
    return new TLMessagesReportReaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesReportReaction {
    return new TLMessagesReportReaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesReportReaction {
    return new TLMessagesReportReaction().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesReportReaction | PlainMessage<TLMessagesReportReaction> | undefined, b: TLMessagesReportReaction | PlainMessage<TLMessagesReportReaction> | undefined): boolean {
    return proto3.util.equals(TLMessagesReportReaction, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetTopReactions
 */
export class TLMessagesGetTopReactions extends Message<TLMessagesGetTopReactions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 limit = 3;
   */
  limit = 0;

  /**
   * @generated from field: int64 hash = 4;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetTopReactions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetTopReactions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetTopReactions {
    return new TLMessagesGetTopReactions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetTopReactions {
    return new TLMessagesGetTopReactions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetTopReactions {
    return new TLMessagesGetTopReactions().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetTopReactions | PlainMessage<TLMessagesGetTopReactions> | undefined, b: TLMessagesGetTopReactions | PlainMessage<TLMessagesGetTopReactions> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetTopReactions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetRecentReactions
 */
export class TLMessagesGetRecentReactions extends Message<TLMessagesGetRecentReactions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 limit = 3;
   */
  limit = 0;

  /**
   * @generated from field: int64 hash = 4;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetRecentReactions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetRecentReactions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetRecentReactions {
    return new TLMessagesGetRecentReactions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetRecentReactions {
    return new TLMessagesGetRecentReactions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetRecentReactions {
    return new TLMessagesGetRecentReactions().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetRecentReactions | PlainMessage<TLMessagesGetRecentReactions> | undefined, b: TLMessagesGetRecentReactions | PlainMessage<TLMessagesGetRecentReactions> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetRecentReactions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesClearRecentReactions
 */
export class TLMessagesClearRecentReactions extends Message<TLMessagesClearRecentReactions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLMessagesClearRecentReactions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesClearRecentReactions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesClearRecentReactions {
    return new TLMessagesClearRecentReactions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesClearRecentReactions {
    return new TLMessagesClearRecentReactions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesClearRecentReactions {
    return new TLMessagesClearRecentReactions().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesClearRecentReactions | PlainMessage<TLMessagesClearRecentReactions> | undefined, b: TLMessagesClearRecentReactions | PlainMessage<TLMessagesClearRecentReactions> | undefined): boolean {
    return proto3.util.equals(TLMessagesClearRecentReactions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetExtendedMedia
 */
export class TLMessagesGetExtendedMedia extends Message<TLMessagesGetExtendedMedia> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<TLMessagesGetExtendedMedia>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetExtendedMedia";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetExtendedMedia {
    return new TLMessagesGetExtendedMedia().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetExtendedMedia {
    return new TLMessagesGetExtendedMedia().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetExtendedMedia {
    return new TLMessagesGetExtendedMedia().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetExtendedMedia | PlainMessage<TLMessagesGetExtendedMedia> | undefined, b: TLMessagesGetExtendedMedia | PlainMessage<TLMessagesGetExtendedMedia> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetExtendedMedia, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetDefaultHistoryTTL
 */
export class TLMessagesSetDefaultHistoryTTL extends Message<TLMessagesSetDefaultHistoryTTL> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 period = 3;
   */
  period = 0;

  constructor(data?: PartialMessage<TLMessagesSetDefaultHistoryTTL>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetDefaultHistoryTTL";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "period", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetDefaultHistoryTTL {
    return new TLMessagesSetDefaultHistoryTTL().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetDefaultHistoryTTL {
    return new TLMessagesSetDefaultHistoryTTL().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetDefaultHistoryTTL {
    return new TLMessagesSetDefaultHistoryTTL().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetDefaultHistoryTTL | PlainMessage<TLMessagesSetDefaultHistoryTTL> | undefined, b: TLMessagesSetDefaultHistoryTTL | PlainMessage<TLMessagesSetDefaultHistoryTTL> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetDefaultHistoryTTL, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDefaultHistoryTTL
 */
export class TLMessagesGetDefaultHistoryTTL extends Message<TLMessagesGetDefaultHistoryTTL> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLMessagesGetDefaultHistoryTTL>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetDefaultHistoryTTL";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetDefaultHistoryTTL {
    return new TLMessagesGetDefaultHistoryTTL().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetDefaultHistoryTTL {
    return new TLMessagesGetDefaultHistoryTTL().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetDefaultHistoryTTL {
    return new TLMessagesGetDefaultHistoryTTL().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetDefaultHistoryTTL | PlainMessage<TLMessagesGetDefaultHistoryTTL> | undefined, b: TLMessagesGetDefaultHistoryTTL | PlainMessage<TLMessagesGetDefaultHistoryTTL> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetDefaultHistoryTTL, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendBotRequestedPeer
 */
export class TLMessagesSendBotRequestedPeer extends Message<TLMessagesSendBotRequestedPeer> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  /**
   * @generated from field: int32 button_id = 5;
   */
  buttonId = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer requested_peer = 6;
   */
  requestedPeer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesSendBotRequestedPeer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSendBotRequestedPeer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "button_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "requested_peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSendBotRequestedPeer {
    return new TLMessagesSendBotRequestedPeer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSendBotRequestedPeer {
    return new TLMessagesSendBotRequestedPeer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSendBotRequestedPeer {
    return new TLMessagesSendBotRequestedPeer().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSendBotRequestedPeer | PlainMessage<TLMessagesSendBotRequestedPeer> | undefined, b: TLMessagesSendBotRequestedPeer | PlainMessage<TLMessagesSendBotRequestedPeer> | undefined): boolean {
    return proto3.util.equals(TLMessagesSendBotRequestedPeer, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiGroups
 */
export class TLMessagesGetEmojiGroups extends Message<TLMessagesGetEmojiGroups> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 hash = 3;
   */
  hash = 0;

  constructor(data?: PartialMessage<TLMessagesGetEmojiGroups>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiGroups";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetEmojiGroups {
    return new TLMessagesGetEmojiGroups().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiGroups {
    return new TLMessagesGetEmojiGroups().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiGroups {
    return new TLMessagesGetEmojiGroups().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetEmojiGroups | PlainMessage<TLMessagesGetEmojiGroups> | undefined, b: TLMessagesGetEmojiGroups | PlainMessage<TLMessagesGetEmojiGroups> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetEmojiGroups, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiStatusGroups
 */
export class TLMessagesGetEmojiStatusGroups extends Message<TLMessagesGetEmojiStatusGroups> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 hash = 3;
   */
  hash = 0;

  constructor(data?: PartialMessage<TLMessagesGetEmojiStatusGroups>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiStatusGroups";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetEmojiStatusGroups {
    return new TLMessagesGetEmojiStatusGroups().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiStatusGroups {
    return new TLMessagesGetEmojiStatusGroups().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiStatusGroups {
    return new TLMessagesGetEmojiStatusGroups().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetEmojiStatusGroups | PlainMessage<TLMessagesGetEmojiStatusGroups> | undefined, b: TLMessagesGetEmojiStatusGroups | PlainMessage<TLMessagesGetEmojiStatusGroups> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetEmojiStatusGroups, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiProfilePhotoGroups
 */
export class TLMessagesGetEmojiProfilePhotoGroups extends Message<TLMessagesGetEmojiProfilePhotoGroups> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 hash = 3;
   */
  hash = 0;

  constructor(data?: PartialMessage<TLMessagesGetEmojiProfilePhotoGroups>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetEmojiProfilePhotoGroups";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetEmojiProfilePhotoGroups {
    return new TLMessagesGetEmojiProfilePhotoGroups().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiProfilePhotoGroups {
    return new TLMessagesGetEmojiProfilePhotoGroups().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetEmojiProfilePhotoGroups {
    return new TLMessagesGetEmojiProfilePhotoGroups().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetEmojiProfilePhotoGroups | PlainMessage<TLMessagesGetEmojiProfilePhotoGroups> | undefined, b: TLMessagesGetEmojiProfilePhotoGroups | PlainMessage<TLMessagesGetEmojiProfilePhotoGroups> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetEmojiProfilePhotoGroups, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSearchCustomEmoji
 */
export class TLMessagesSearchCustomEmoji extends Message<TLMessagesSearchCustomEmoji> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string emoticon = 3;
   */
  emoticon = "";

  /**
   * @generated from field: int64 hash = 4;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesSearchCustomEmoji>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSearchCustomEmoji";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "emoticon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSearchCustomEmoji {
    return new TLMessagesSearchCustomEmoji().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSearchCustomEmoji {
    return new TLMessagesSearchCustomEmoji().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSearchCustomEmoji {
    return new TLMessagesSearchCustomEmoji().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSearchCustomEmoji | PlainMessage<TLMessagesSearchCustomEmoji> | undefined, b: TLMessagesSearchCustomEmoji | PlainMessage<TLMessagesSearchCustomEmoji> | undefined): boolean {
    return proto3.util.equals(TLMessagesSearchCustomEmoji, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesTogglePeerTranslations
 */
export class TLMessagesTogglePeerTranslations extends Message<TLMessagesTogglePeerTranslations> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool disabled = 3;
   */
  disabled = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLMessagesTogglePeerTranslations>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesTogglePeerTranslations";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "disabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesTogglePeerTranslations {
    return new TLMessagesTogglePeerTranslations().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesTogglePeerTranslations {
    return new TLMessagesTogglePeerTranslations().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesTogglePeerTranslations {
    return new TLMessagesTogglePeerTranslations().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesTogglePeerTranslations | PlainMessage<TLMessagesTogglePeerTranslations> | undefined, b: TLMessagesTogglePeerTranslations | PlainMessage<TLMessagesTogglePeerTranslations> | undefined): boolean {
    return proto3.util.equals(TLMessagesTogglePeerTranslations, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetBotApp
 */
export class TLMessagesGetBotApp extends Message<TLMessagesGetBotApp> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputBotApp app = 3;
   */
  app: InputBotApp[] = [];

  /**
   * @generated from field: int64 hash = 4;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetBotApp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetBotApp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "app", kind: "message", T: InputBotApp, repeated: true },
    { no: 4, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetBotApp {
    return new TLMessagesGetBotApp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetBotApp {
    return new TLMessagesGetBotApp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetBotApp {
    return new TLMessagesGetBotApp().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetBotApp | PlainMessage<TLMessagesGetBotApp> | undefined, b: TLMessagesGetBotApp | PlainMessage<TLMessagesGetBotApp> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetBotApp, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesRequestAppWebView
 */
export class TLMessagesRequestAppWebView extends Message<TLMessagesRequestAppWebView> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool write_allowed = 3;
   */
  writeAllowed = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputBotApp app = 5;
   */
  app: InputBotApp[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue start_param = 6;
   */
  startParam: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON theme_params = 7;
   */
  themeParams: DataJSON[] = [];

  /**
   * @generated from field: string platform = 8;
   */
  platform = "";

  constructor(data?: PartialMessage<TLMessagesRequestAppWebView>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesRequestAppWebView";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "write_allowed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "app", kind: "message", T: InputBotApp, repeated: true },
    { no: 6, name: "start_param", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "theme_params", kind: "message", T: DataJSON, repeated: true },
    { no: 8, name: "platform", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesRequestAppWebView {
    return new TLMessagesRequestAppWebView().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesRequestAppWebView {
    return new TLMessagesRequestAppWebView().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesRequestAppWebView {
    return new TLMessagesRequestAppWebView().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesRequestAppWebView | PlainMessage<TLMessagesRequestAppWebView> | undefined, b: TLMessagesRequestAppWebView | PlainMessage<TLMessagesRequestAppWebView> | undefined): boolean {
    return proto3.util.equals(TLMessagesRequestAppWebView, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetChatWallPaper
 */
export class TLMessagesSetChatWallPaper extends Message<TLMessagesSetChatWallPaper> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputWallPaper wallpaper = 4;
   */
  wallpaper: InputWallPaper[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.WallPaperSettings settings = 5;
   */
  settings: WallPaperSettings[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value id = 6;
   */
  id: Int32Value[] = [];

  constructor(data?: PartialMessage<TLMessagesSetChatWallPaper>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesSetChatWallPaper";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "wallpaper", kind: "message", T: InputWallPaper, repeated: true },
    { no: 5, name: "settings", kind: "message", T: WallPaperSettings, repeated: true },
    { no: 6, name: "id", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesSetChatWallPaper {
    return new TLMessagesSetChatWallPaper().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesSetChatWallPaper {
    return new TLMessagesSetChatWallPaper().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesSetChatWallPaper {
    return new TLMessagesSetChatWallPaper().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesSetChatWallPaper | PlainMessage<TLMessagesSetChatWallPaper> | undefined, b: TLMessagesSetChatWallPaper | PlainMessage<TLMessagesSetChatWallPaper> | undefined): boolean {
    return proto3.util.equals(TLMessagesSetChatWallPaper, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUpdatesGetState
 */
export class TLUpdatesGetState extends Message<TLUpdatesGetState> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLUpdatesGetState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUpdatesGetState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUpdatesGetState {
    return new TLUpdatesGetState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUpdatesGetState {
    return new TLUpdatesGetState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUpdatesGetState {
    return new TLUpdatesGetState().fromJsonString(jsonString, options);
  }

  static equals(a: TLUpdatesGetState | PlainMessage<TLUpdatesGetState> | undefined, b: TLUpdatesGetState | PlainMessage<TLUpdatesGetState> | undefined): boolean {
    return proto3.util.equals(TLUpdatesGetState, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUpdatesGetDifference
 */
export class TLUpdatesGetDifference extends Message<TLUpdatesGetDifference> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 pts = 3;
   */
  pts = 0;

  /**
   * @generated from field: repeated google.protobuf.Int32Value pts_limit = 4;
   */
  ptsLimit: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value pts_total_limit = 5;
   */
  ptsTotalLimit: Int32Value[] = [];

  /**
   * @generated from field: int32 date = 6;
   */
  date = 0;

  /**
   * @generated from field: int32 qts = 7;
   */
  qts = 0;

  /**
   * @generated from field: repeated google.protobuf.Int32Value qts_limit = 8;
   */
  qtsLimit: Int32Value[] = [];

  constructor(data?: PartialMessage<TLUpdatesGetDifference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUpdatesGetDifference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "pts", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "pts_limit", kind: "message", T: Int32Value, repeated: true },
    { no: 5, name: "pts_total_limit", kind: "message", T: Int32Value, repeated: true },
    { no: 6, name: "date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "qts", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "qts_limit", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUpdatesGetDifference {
    return new TLUpdatesGetDifference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUpdatesGetDifference {
    return new TLUpdatesGetDifference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUpdatesGetDifference {
    return new TLUpdatesGetDifference().fromJsonString(jsonString, options);
  }

  static equals(a: TLUpdatesGetDifference | PlainMessage<TLUpdatesGetDifference> | undefined, b: TLUpdatesGetDifference | PlainMessage<TLUpdatesGetDifference> | undefined): boolean {
    return proto3.util.equals(TLUpdatesGetDifference, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUpdatesGetChannelDifference
 */
export class TLUpdatesGetChannelDifference extends Message<TLUpdatesGetChannelDifference> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool force = 3;
   */
  force = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 4;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ChannelMessagesFilter filter = 5;
   */
  filter: ChannelMessagesFilter[] = [];

  /**
   * @generated from field: int32 pts = 6;
   */
  pts = 0;

  /**
   * @generated from field: int32 limit = 7;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLUpdatesGetChannelDifference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUpdatesGetChannelDifference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 5, name: "filter", kind: "message", T: ChannelMessagesFilter, repeated: true },
    { no: 6, name: "pts", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUpdatesGetChannelDifference {
    return new TLUpdatesGetChannelDifference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUpdatesGetChannelDifference {
    return new TLUpdatesGetChannelDifference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUpdatesGetChannelDifference {
    return new TLUpdatesGetChannelDifference().fromJsonString(jsonString, options);
  }

  static equals(a: TLUpdatesGetChannelDifference | PlainMessage<TLUpdatesGetChannelDifference> | undefined, b: TLUpdatesGetChannelDifference | PlainMessage<TLUpdatesGetChannelDifference> | undefined): boolean {
    return proto3.util.equals(TLUpdatesGetChannelDifference, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhotosUpdateProfilePhoto
 */
export class TLPhotosUpdateProfilePhoto extends Message<TLPhotosUpdateProfilePhoto> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool fallback = 3;
   */
  fallback = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 4;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPhoto id = 5;
   */
  id: InputPhoto[] = [];

  constructor(data?: PartialMessage<TLPhotosUpdateProfilePhoto>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhotosUpdateProfilePhoto";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "fallback", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 5, name: "id", kind: "message", T: InputPhoto, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhotosUpdateProfilePhoto {
    return new TLPhotosUpdateProfilePhoto().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhotosUpdateProfilePhoto {
    return new TLPhotosUpdateProfilePhoto().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhotosUpdateProfilePhoto {
    return new TLPhotosUpdateProfilePhoto().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhotosUpdateProfilePhoto | PlainMessage<TLPhotosUpdateProfilePhoto> | undefined, b: TLPhotosUpdateProfilePhoto | PlainMessage<TLPhotosUpdateProfilePhoto> | undefined): boolean {
    return proto3.util.equals(TLPhotosUpdateProfilePhoto, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhotosUploadProfilePhoto
 */
export class TLPhotosUploadProfilePhoto extends Message<TLPhotosUploadProfilePhoto> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool fallback = 3;
   */
  fallback = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 4;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFile file = 5;
   */
  file: InputFile[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFile video = 6;
   */
  video: InputFile[] = [];

  /**
   * @generated from field: repeated google.protobuf.DoubleValue video_start_ts = 7;
   */
  videoStartTs: DoubleValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.VideoSize video_emoji_markup = 8;
   */
  videoEmojiMarkup: VideoSize[] = [];

  constructor(data?: PartialMessage<TLPhotosUploadProfilePhoto>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhotosUploadProfilePhoto";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "fallback", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 5, name: "file", kind: "message", T: InputFile, repeated: true },
    { no: 6, name: "video", kind: "message", T: InputFile, repeated: true },
    { no: 7, name: "video_start_ts", kind: "message", T: DoubleValue, repeated: true },
    { no: 8, name: "video_emoji_markup", kind: "message", T: VideoSize, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhotosUploadProfilePhoto {
    return new TLPhotosUploadProfilePhoto().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhotosUploadProfilePhoto {
    return new TLPhotosUploadProfilePhoto().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhotosUploadProfilePhoto {
    return new TLPhotosUploadProfilePhoto().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhotosUploadProfilePhoto | PlainMessage<TLPhotosUploadProfilePhoto> | undefined, b: TLPhotosUploadProfilePhoto | PlainMessage<TLPhotosUploadProfilePhoto> | undefined): boolean {
    return proto3.util.equals(TLPhotosUploadProfilePhoto, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhotosDeletePhotos
 */
export class TLPhotosDeletePhotos extends Message<TLPhotosDeletePhotos> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPhoto id = 3;
   */
  id: InputPhoto[] = [];

  constructor(data?: PartialMessage<TLPhotosDeletePhotos>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhotosDeletePhotos";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputPhoto, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhotosDeletePhotos {
    return new TLPhotosDeletePhotos().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhotosDeletePhotos {
    return new TLPhotosDeletePhotos().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhotosDeletePhotos {
    return new TLPhotosDeletePhotos().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhotosDeletePhotos | PlainMessage<TLPhotosDeletePhotos> | undefined, b: TLPhotosDeletePhotos | PlainMessage<TLPhotosDeletePhotos> | undefined): boolean {
    return proto3.util.equals(TLPhotosDeletePhotos, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhotosGetUserPhotos
 */
export class TLPhotosGetUserPhotos extends Message<TLPhotosGetUserPhotos> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 3;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: int32 offset = 4;
   */
  offset = 0;

  /**
   * @generated from field: int64 max_id = 5;
   */
  maxId = protoInt64.zero;

  /**
   * @generated from field: int32 limit = 6;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLPhotosGetUserPhotos>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhotosGetUserPhotos";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "max_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhotosGetUserPhotos {
    return new TLPhotosGetUserPhotos().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhotosGetUserPhotos {
    return new TLPhotosGetUserPhotos().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhotosGetUserPhotos {
    return new TLPhotosGetUserPhotos().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhotosGetUserPhotos | PlainMessage<TLPhotosGetUserPhotos> | undefined, b: TLPhotosGetUserPhotos | PlainMessage<TLPhotosGetUserPhotos> | undefined): boolean {
    return proto3.util.equals(TLPhotosGetUserPhotos, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhotosUploadContactProfilePhoto
 */
export class TLPhotosUploadContactProfilePhoto extends Message<TLPhotosUploadContactProfilePhoto> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool suggest = 3;
   */
  suggest = false;

  /**
   * @generated from field: bool save = 4;
   */
  save = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 5;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFile file = 6;
   */
  file: InputFile[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFile video = 7;
   */
  video: InputFile[] = [];

  /**
   * @generated from field: repeated google.protobuf.DoubleValue video_start_ts = 8;
   */
  videoStartTs: DoubleValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.VideoSize video_emoji_markup = 9;
   */
  videoEmojiMarkup: VideoSize[] = [];

  constructor(data?: PartialMessage<TLPhotosUploadContactProfilePhoto>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhotosUploadContactProfilePhoto";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "suggest", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "save", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 6, name: "file", kind: "message", T: InputFile, repeated: true },
    { no: 7, name: "video", kind: "message", T: InputFile, repeated: true },
    { no: 8, name: "video_start_ts", kind: "message", T: DoubleValue, repeated: true },
    { no: 9, name: "video_emoji_markup", kind: "message", T: VideoSize, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhotosUploadContactProfilePhoto {
    return new TLPhotosUploadContactProfilePhoto().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhotosUploadContactProfilePhoto {
    return new TLPhotosUploadContactProfilePhoto().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhotosUploadContactProfilePhoto {
    return new TLPhotosUploadContactProfilePhoto().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhotosUploadContactProfilePhoto | PlainMessage<TLPhotosUploadContactProfilePhoto> | undefined, b: TLPhotosUploadContactProfilePhoto | PlainMessage<TLPhotosUploadContactProfilePhoto> | undefined): boolean {
    return proto3.util.equals(TLPhotosUploadContactProfilePhoto, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUploadSaveFilePart
 */
export class TLUploadSaveFilePart extends Message<TLUploadSaveFilePart> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 file_id = 3;
   */
  fileId = protoInt64.zero;

  /**
   * @generated from field: int32 file_part = 4;
   */
  filePart = 0;

  /**
   * @generated from field: bytes bytes = 5;
   */
  bytes = new Uint8Array(0);

  constructor(data?: PartialMessage<TLUploadSaveFilePart>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUploadSaveFilePart";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "file_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "file_part", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUploadSaveFilePart {
    return new TLUploadSaveFilePart().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUploadSaveFilePart {
    return new TLUploadSaveFilePart().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUploadSaveFilePart {
    return new TLUploadSaveFilePart().fromJsonString(jsonString, options);
  }

  static equals(a: TLUploadSaveFilePart | PlainMessage<TLUploadSaveFilePart> | undefined, b: TLUploadSaveFilePart | PlainMessage<TLUploadSaveFilePart> | undefined): boolean {
    return proto3.util.equals(TLUploadSaveFilePart, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUploadGetFile
 */
export class TLUploadGetFile extends Message<TLUploadGetFile> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool precise = 3;
   */
  precise = false;

  /**
   * @generated from field: bool cdn_supported = 4;
   */
  cdnSupported = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFileLocation location = 5;
   */
  location: InputFileLocation[] = [];

  /**
   * @generated from field: int64 offset_INT64 = 6;
   */
  offsetINT64 = protoInt64.zero;

  /**
   * @generated from field: int32 limit = 7;
   */
  limit = 0;

  /**
   * @generated from field: int32 offset_INT32 = 8;
   */
  offsetINT32 = 0;

  constructor(data?: PartialMessage<TLUploadGetFile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUploadGetFile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "precise", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "cdn_supported", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "location", kind: "message", T: InputFileLocation, repeated: true },
    { no: 6, name: "offset_INT64", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "offset_INT32", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUploadGetFile {
    return new TLUploadGetFile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUploadGetFile {
    return new TLUploadGetFile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUploadGetFile {
    return new TLUploadGetFile().fromJsonString(jsonString, options);
  }

  static equals(a: TLUploadGetFile | PlainMessage<TLUploadGetFile> | undefined, b: TLUploadGetFile | PlainMessage<TLUploadGetFile> | undefined): boolean {
    return proto3.util.equals(TLUploadGetFile, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUploadSaveBigFilePart
 */
export class TLUploadSaveBigFilePart extends Message<TLUploadSaveBigFilePart> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 file_id = 3;
   */
  fileId = protoInt64.zero;

  /**
   * @generated from field: int32 file_part = 4;
   */
  filePart = 0;

  /**
   * @generated from field: int32 file_total_parts = 5;
   */
  fileTotalParts = 0;

  /**
   * @generated from field: bytes bytes = 6;
   */
  bytes = new Uint8Array(0);

  constructor(data?: PartialMessage<TLUploadSaveBigFilePart>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUploadSaveBigFilePart";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "file_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "file_part", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "file_total_parts", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUploadSaveBigFilePart {
    return new TLUploadSaveBigFilePart().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUploadSaveBigFilePart {
    return new TLUploadSaveBigFilePart().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUploadSaveBigFilePart {
    return new TLUploadSaveBigFilePart().fromJsonString(jsonString, options);
  }

  static equals(a: TLUploadSaveBigFilePart | PlainMessage<TLUploadSaveBigFilePart> | undefined, b: TLUploadSaveBigFilePart | PlainMessage<TLUploadSaveBigFilePart> | undefined): boolean {
    return proto3.util.equals(TLUploadSaveBigFilePart, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUploadGetWebFile
 */
export class TLUploadGetWebFile extends Message<TLUploadGetWebFile> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputWebFileLocation location = 3;
   */
  location: InputWebFileLocation[] = [];

  /**
   * @generated from field: int32 offset = 4;
   */
  offset = 0;

  /**
   * @generated from field: int32 limit = 5;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLUploadGetWebFile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUploadGetWebFile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "location", kind: "message", T: InputWebFileLocation, repeated: true },
    { no: 4, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUploadGetWebFile {
    return new TLUploadGetWebFile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUploadGetWebFile {
    return new TLUploadGetWebFile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUploadGetWebFile {
    return new TLUploadGetWebFile().fromJsonString(jsonString, options);
  }

  static equals(a: TLUploadGetWebFile | PlainMessage<TLUploadGetWebFile> | undefined, b: TLUploadGetWebFile | PlainMessage<TLUploadGetWebFile> | undefined): boolean {
    return proto3.util.equals(TLUploadGetWebFile, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUploadGetCdnFile
 */
export class TLUploadGetCdnFile extends Message<TLUploadGetCdnFile> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bytes file_token = 3;
   */
  fileToken = new Uint8Array(0);

  /**
   * @generated from field: int64 offset_INT64 = 4;
   */
  offsetINT64 = protoInt64.zero;

  /**
   * @generated from field: int32 limit = 5;
   */
  limit = 0;

  /**
   * @generated from field: int32 offset_INT32 = 6;
   */
  offsetINT32 = 0;

  constructor(data?: PartialMessage<TLUploadGetCdnFile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUploadGetCdnFile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "file_token", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "offset_INT64", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "offset_INT32", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUploadGetCdnFile {
    return new TLUploadGetCdnFile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUploadGetCdnFile {
    return new TLUploadGetCdnFile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUploadGetCdnFile {
    return new TLUploadGetCdnFile().fromJsonString(jsonString, options);
  }

  static equals(a: TLUploadGetCdnFile | PlainMessage<TLUploadGetCdnFile> | undefined, b: TLUploadGetCdnFile | PlainMessage<TLUploadGetCdnFile> | undefined): boolean {
    return proto3.util.equals(TLUploadGetCdnFile, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUploadReuploadCdnFile
 */
export class TLUploadReuploadCdnFile extends Message<TLUploadReuploadCdnFile> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bytes file_token = 3;
   */
  fileToken = new Uint8Array(0);

  /**
   * @generated from field: bytes request_token = 4;
   */
  requestToken = new Uint8Array(0);

  constructor(data?: PartialMessage<TLUploadReuploadCdnFile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUploadReuploadCdnFile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "file_token", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "request_token", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUploadReuploadCdnFile {
    return new TLUploadReuploadCdnFile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUploadReuploadCdnFile {
    return new TLUploadReuploadCdnFile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUploadReuploadCdnFile {
    return new TLUploadReuploadCdnFile().fromJsonString(jsonString, options);
  }

  static equals(a: TLUploadReuploadCdnFile | PlainMessage<TLUploadReuploadCdnFile> | undefined, b: TLUploadReuploadCdnFile | PlainMessage<TLUploadReuploadCdnFile> | undefined): boolean {
    return proto3.util.equals(TLUploadReuploadCdnFile, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUploadGetCdnFileHashes
 */
export class TLUploadGetCdnFileHashes extends Message<TLUploadGetCdnFileHashes> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bytes file_token = 3;
   */
  fileToken = new Uint8Array(0);

  /**
   * @generated from field: int64 offset_INT64 = 4;
   */
  offsetINT64 = protoInt64.zero;

  /**
   * @generated from field: int32 offset_INT32 = 5;
   */
  offsetINT32 = 0;

  constructor(data?: PartialMessage<TLUploadGetCdnFileHashes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUploadGetCdnFileHashes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "file_token", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "offset_INT64", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "offset_INT32", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUploadGetCdnFileHashes {
    return new TLUploadGetCdnFileHashes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUploadGetCdnFileHashes {
    return new TLUploadGetCdnFileHashes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUploadGetCdnFileHashes {
    return new TLUploadGetCdnFileHashes().fromJsonString(jsonString, options);
  }

  static equals(a: TLUploadGetCdnFileHashes | PlainMessage<TLUploadGetCdnFileHashes> | undefined, b: TLUploadGetCdnFileHashes | PlainMessage<TLUploadGetCdnFileHashes> | undefined): boolean {
    return proto3.util.equals(TLUploadGetCdnFileHashes, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUploadGetFileHashes
 */
export class TLUploadGetFileHashes extends Message<TLUploadGetFileHashes> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFileLocation location = 3;
   */
  location: InputFileLocation[] = [];

  /**
   * @generated from field: int64 offset_INT64 = 4;
   */
  offsetINT64 = protoInt64.zero;

  /**
   * @generated from field: int32 offset_INT32 = 5;
   */
  offsetINT32 = 0;

  constructor(data?: PartialMessage<TLUploadGetFileHashes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUploadGetFileHashes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "location", kind: "message", T: InputFileLocation, repeated: true },
    { no: 4, name: "offset_INT64", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "offset_INT32", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUploadGetFileHashes {
    return new TLUploadGetFileHashes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUploadGetFileHashes {
    return new TLUploadGetFileHashes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUploadGetFileHashes {
    return new TLUploadGetFileHashes().fromJsonString(jsonString, options);
  }

  static equals(a: TLUploadGetFileHashes | PlainMessage<TLUploadGetFileHashes> | undefined, b: TLUploadGetFileHashes | PlainMessage<TLUploadGetFileHashes> | undefined): boolean {
    return proto3.util.equals(TLUploadGetFileHashes, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetConfig
 */
export class TLHelpGetConfig extends Message<TLHelpGetConfig> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLHelpGetConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetConfig {
    return new TLHelpGetConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetConfig {
    return new TLHelpGetConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetConfig {
    return new TLHelpGetConfig().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetConfig | PlainMessage<TLHelpGetConfig> | undefined, b: TLHelpGetConfig | PlainMessage<TLHelpGetConfig> | undefined): boolean {
    return proto3.util.equals(TLHelpGetConfig, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetNearestDc
 */
export class TLHelpGetNearestDc extends Message<TLHelpGetNearestDc> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLHelpGetNearestDc>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetNearestDc";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetNearestDc {
    return new TLHelpGetNearestDc().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetNearestDc {
    return new TLHelpGetNearestDc().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetNearestDc {
    return new TLHelpGetNearestDc().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetNearestDc | PlainMessage<TLHelpGetNearestDc> | undefined, b: TLHelpGetNearestDc | PlainMessage<TLHelpGetNearestDc> | undefined): boolean {
    return proto3.util.equals(TLHelpGetNearestDc, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetAppUpdate
 */
export class TLHelpGetAppUpdate extends Message<TLHelpGetAppUpdate> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string source = 3;
   */
  source = "";

  constructor(data?: PartialMessage<TLHelpGetAppUpdate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetAppUpdate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetAppUpdate {
    return new TLHelpGetAppUpdate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetAppUpdate {
    return new TLHelpGetAppUpdate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetAppUpdate {
    return new TLHelpGetAppUpdate().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetAppUpdate | PlainMessage<TLHelpGetAppUpdate> | undefined, b: TLHelpGetAppUpdate | PlainMessage<TLHelpGetAppUpdate> | undefined): boolean {
    return proto3.util.equals(TLHelpGetAppUpdate, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetInviteText
 */
export class TLHelpGetInviteText extends Message<TLHelpGetInviteText> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLHelpGetInviteText>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetInviteText";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetInviteText {
    return new TLHelpGetInviteText().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetInviteText {
    return new TLHelpGetInviteText().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetInviteText {
    return new TLHelpGetInviteText().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetInviteText | PlainMessage<TLHelpGetInviteText> | undefined, b: TLHelpGetInviteText | PlainMessage<TLHelpGetInviteText> | undefined): boolean {
    return proto3.util.equals(TLHelpGetInviteText, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetSupport
 */
export class TLHelpGetSupport extends Message<TLHelpGetSupport> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLHelpGetSupport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetSupport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetSupport {
    return new TLHelpGetSupport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetSupport {
    return new TLHelpGetSupport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetSupport {
    return new TLHelpGetSupport().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetSupport | PlainMessage<TLHelpGetSupport> | undefined, b: TLHelpGetSupport | PlainMessage<TLHelpGetSupport> | undefined): boolean {
    return proto3.util.equals(TLHelpGetSupport, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetAppChangelog
 */
export class TLHelpGetAppChangelog extends Message<TLHelpGetAppChangelog> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string prev_app_version = 3;
   */
  prevAppVersion = "";

  constructor(data?: PartialMessage<TLHelpGetAppChangelog>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetAppChangelog";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "prev_app_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetAppChangelog {
    return new TLHelpGetAppChangelog().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetAppChangelog {
    return new TLHelpGetAppChangelog().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetAppChangelog {
    return new TLHelpGetAppChangelog().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetAppChangelog | PlainMessage<TLHelpGetAppChangelog> | undefined, b: TLHelpGetAppChangelog | PlainMessage<TLHelpGetAppChangelog> | undefined): boolean {
    return proto3.util.equals(TLHelpGetAppChangelog, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpSetBotUpdatesStatus
 */
export class TLHelpSetBotUpdatesStatus extends Message<TLHelpSetBotUpdatesStatus> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 pending_updates_count = 3;
   */
  pendingUpdatesCount = 0;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<TLHelpSetBotUpdatesStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpSetBotUpdatesStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "pending_updates_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpSetBotUpdatesStatus {
    return new TLHelpSetBotUpdatesStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpSetBotUpdatesStatus {
    return new TLHelpSetBotUpdatesStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpSetBotUpdatesStatus {
    return new TLHelpSetBotUpdatesStatus().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpSetBotUpdatesStatus | PlainMessage<TLHelpSetBotUpdatesStatus> | undefined, b: TLHelpSetBotUpdatesStatus | PlainMessage<TLHelpSetBotUpdatesStatus> | undefined): boolean {
    return proto3.util.equals(TLHelpSetBotUpdatesStatus, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetCdnConfig
 */
export class TLHelpGetCdnConfig extends Message<TLHelpGetCdnConfig> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLHelpGetCdnConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetCdnConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetCdnConfig {
    return new TLHelpGetCdnConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetCdnConfig {
    return new TLHelpGetCdnConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetCdnConfig {
    return new TLHelpGetCdnConfig().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetCdnConfig | PlainMessage<TLHelpGetCdnConfig> | undefined, b: TLHelpGetCdnConfig | PlainMessage<TLHelpGetCdnConfig> | undefined): boolean {
    return proto3.util.equals(TLHelpGetCdnConfig, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetRecentMeUrls
 */
export class TLHelpGetRecentMeUrls extends Message<TLHelpGetRecentMeUrls> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string referer = 3;
   */
  referer = "";

  constructor(data?: PartialMessage<TLHelpGetRecentMeUrls>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetRecentMeUrls";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "referer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetRecentMeUrls {
    return new TLHelpGetRecentMeUrls().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetRecentMeUrls {
    return new TLHelpGetRecentMeUrls().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetRecentMeUrls {
    return new TLHelpGetRecentMeUrls().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetRecentMeUrls | PlainMessage<TLHelpGetRecentMeUrls> | undefined, b: TLHelpGetRecentMeUrls | PlainMessage<TLHelpGetRecentMeUrls> | undefined): boolean {
    return proto3.util.equals(TLHelpGetRecentMeUrls, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetTermsOfServiceUpdate
 */
export class TLHelpGetTermsOfServiceUpdate extends Message<TLHelpGetTermsOfServiceUpdate> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLHelpGetTermsOfServiceUpdate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetTermsOfServiceUpdate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetTermsOfServiceUpdate {
    return new TLHelpGetTermsOfServiceUpdate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetTermsOfServiceUpdate {
    return new TLHelpGetTermsOfServiceUpdate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetTermsOfServiceUpdate {
    return new TLHelpGetTermsOfServiceUpdate().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetTermsOfServiceUpdate | PlainMessage<TLHelpGetTermsOfServiceUpdate> | undefined, b: TLHelpGetTermsOfServiceUpdate | PlainMessage<TLHelpGetTermsOfServiceUpdate> | undefined): boolean {
    return proto3.util.equals(TLHelpGetTermsOfServiceUpdate, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpAcceptTermsOfService
 */
export class TLHelpAcceptTermsOfService extends Message<TLHelpAcceptTermsOfService> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON id = 3;
   */
  id: DataJSON[] = [];

  constructor(data?: PartialMessage<TLHelpAcceptTermsOfService>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpAcceptTermsOfService";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: DataJSON, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpAcceptTermsOfService {
    return new TLHelpAcceptTermsOfService().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpAcceptTermsOfService {
    return new TLHelpAcceptTermsOfService().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpAcceptTermsOfService {
    return new TLHelpAcceptTermsOfService().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpAcceptTermsOfService | PlainMessage<TLHelpAcceptTermsOfService> | undefined, b: TLHelpAcceptTermsOfService | PlainMessage<TLHelpAcceptTermsOfService> | undefined): boolean {
    return proto3.util.equals(TLHelpAcceptTermsOfService, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetDeepLinkInfo
 */
export class TLHelpGetDeepLinkInfo extends Message<TLHelpGetDeepLinkInfo> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string path = 3;
   */
  path = "";

  constructor(data?: PartialMessage<TLHelpGetDeepLinkInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetDeepLinkInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetDeepLinkInfo {
    return new TLHelpGetDeepLinkInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetDeepLinkInfo {
    return new TLHelpGetDeepLinkInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetDeepLinkInfo {
    return new TLHelpGetDeepLinkInfo().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetDeepLinkInfo | PlainMessage<TLHelpGetDeepLinkInfo> | undefined, b: TLHelpGetDeepLinkInfo | PlainMessage<TLHelpGetDeepLinkInfo> | undefined): boolean {
    return proto3.util.equals(TLHelpGetDeepLinkInfo, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetAppConfig61E3F854
 */
export class TLHelpGetAppConfig61E3F854 extends Message<TLHelpGetAppConfig61E3F854> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 hash = 3;
   */
  hash = 0;

  constructor(data?: PartialMessage<TLHelpGetAppConfig61E3F854>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetAppConfig61E3F854";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetAppConfig61E3F854 {
    return new TLHelpGetAppConfig61E3F854().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetAppConfig61E3F854 {
    return new TLHelpGetAppConfig61E3F854().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetAppConfig61E3F854 {
    return new TLHelpGetAppConfig61E3F854().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetAppConfig61E3F854 | PlainMessage<TLHelpGetAppConfig61E3F854> | undefined, b: TLHelpGetAppConfig61E3F854 | PlainMessage<TLHelpGetAppConfig61E3F854> | undefined): boolean {
    return proto3.util.equals(TLHelpGetAppConfig61E3F854, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpSaveAppLog
 */
export class TLHelpSaveAppLog extends Message<TLHelpSaveAppLog> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputAppEvent events = 3;
   */
  events: InputAppEvent[] = [];

  constructor(data?: PartialMessage<TLHelpSaveAppLog>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpSaveAppLog";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "events", kind: "message", T: InputAppEvent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpSaveAppLog {
    return new TLHelpSaveAppLog().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpSaveAppLog {
    return new TLHelpSaveAppLog().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpSaveAppLog {
    return new TLHelpSaveAppLog().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpSaveAppLog | PlainMessage<TLHelpSaveAppLog> | undefined, b: TLHelpSaveAppLog | PlainMessage<TLHelpSaveAppLog> | undefined): boolean {
    return proto3.util.equals(TLHelpSaveAppLog, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetPassportConfig
 */
export class TLHelpGetPassportConfig extends Message<TLHelpGetPassportConfig> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 hash = 3;
   */
  hash = 0;

  constructor(data?: PartialMessage<TLHelpGetPassportConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetPassportConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hash", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetPassportConfig {
    return new TLHelpGetPassportConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetPassportConfig {
    return new TLHelpGetPassportConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetPassportConfig {
    return new TLHelpGetPassportConfig().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetPassportConfig | PlainMessage<TLHelpGetPassportConfig> | undefined, b: TLHelpGetPassportConfig | PlainMessage<TLHelpGetPassportConfig> | undefined): boolean {
    return proto3.util.equals(TLHelpGetPassportConfig, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetSupportName
 */
export class TLHelpGetSupportName extends Message<TLHelpGetSupportName> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLHelpGetSupportName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetSupportName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetSupportName {
    return new TLHelpGetSupportName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetSupportName {
    return new TLHelpGetSupportName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetSupportName {
    return new TLHelpGetSupportName().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetSupportName | PlainMessage<TLHelpGetSupportName> | undefined, b: TLHelpGetSupportName | PlainMessage<TLHelpGetSupportName> | undefined): boolean {
    return proto3.util.equals(TLHelpGetSupportName, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetUserInfo
 */
export class TLHelpGetUserInfo extends Message<TLHelpGetUserInfo> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 3;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLHelpGetUserInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetUserInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetUserInfo {
    return new TLHelpGetUserInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetUserInfo {
    return new TLHelpGetUserInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetUserInfo {
    return new TLHelpGetUserInfo().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetUserInfo | PlainMessage<TLHelpGetUserInfo> | undefined, b: TLHelpGetUserInfo | PlainMessage<TLHelpGetUserInfo> | undefined): boolean {
    return proto3.util.equals(TLHelpGetUserInfo, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpEditUserInfo
 */
export class TLHelpEditUserInfo extends Message<TLHelpEditUserInfo> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 3;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessageEntity entities = 5;
   */
  entities: MessageEntity[] = [];

  constructor(data?: PartialMessage<TLHelpEditUserInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpEditUserInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "entities", kind: "message", T: MessageEntity, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpEditUserInfo {
    return new TLHelpEditUserInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpEditUserInfo {
    return new TLHelpEditUserInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpEditUserInfo {
    return new TLHelpEditUserInfo().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpEditUserInfo | PlainMessage<TLHelpEditUserInfo> | undefined, b: TLHelpEditUserInfo | PlainMessage<TLHelpEditUserInfo> | undefined): boolean {
    return proto3.util.equals(TLHelpEditUserInfo, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetPromoData
 */
export class TLHelpGetPromoData extends Message<TLHelpGetPromoData> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLHelpGetPromoData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetPromoData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetPromoData {
    return new TLHelpGetPromoData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetPromoData {
    return new TLHelpGetPromoData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetPromoData {
    return new TLHelpGetPromoData().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetPromoData | PlainMessage<TLHelpGetPromoData> | undefined, b: TLHelpGetPromoData | PlainMessage<TLHelpGetPromoData> | undefined): boolean {
    return proto3.util.equals(TLHelpGetPromoData, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpHidePromoData
 */
export class TLHelpHidePromoData extends Message<TLHelpHidePromoData> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLHelpHidePromoData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpHidePromoData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpHidePromoData {
    return new TLHelpHidePromoData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpHidePromoData {
    return new TLHelpHidePromoData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpHidePromoData {
    return new TLHelpHidePromoData().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpHidePromoData | PlainMessage<TLHelpHidePromoData> | undefined, b: TLHelpHidePromoData | PlainMessage<TLHelpHidePromoData> | undefined): boolean {
    return proto3.util.equals(TLHelpHidePromoData, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpDismissSuggestion
 */
export class TLHelpDismissSuggestion extends Message<TLHelpDismissSuggestion> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: string suggestion = 4;
   */
  suggestion = "";

  constructor(data?: PartialMessage<TLHelpDismissSuggestion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpDismissSuggestion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "suggestion", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpDismissSuggestion {
    return new TLHelpDismissSuggestion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpDismissSuggestion {
    return new TLHelpDismissSuggestion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpDismissSuggestion {
    return new TLHelpDismissSuggestion().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpDismissSuggestion | PlainMessage<TLHelpDismissSuggestion> | undefined, b: TLHelpDismissSuggestion | PlainMessage<TLHelpDismissSuggestion> | undefined): boolean {
    return proto3.util.equals(TLHelpDismissSuggestion, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetCountriesList
 */
export class TLHelpGetCountriesList extends Message<TLHelpGetCountriesList> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string lang_code = 3;
   */
  langCode = "";

  /**
   * @generated from field: int32 hash = 4;
   */
  hash = 0;

  constructor(data?: PartialMessage<TLHelpGetCountriesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetCountriesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "hash", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetCountriesList {
    return new TLHelpGetCountriesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetCountriesList {
    return new TLHelpGetCountriesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetCountriesList {
    return new TLHelpGetCountriesList().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetCountriesList | PlainMessage<TLHelpGetCountriesList> | undefined, b: TLHelpGetCountriesList | PlainMessage<TLHelpGetCountriesList> | undefined): boolean {
    return proto3.util.equals(TLHelpGetCountriesList, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetPremiumPromo
 */
export class TLHelpGetPremiumPromo extends Message<TLHelpGetPremiumPromo> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLHelpGetPremiumPromo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetPremiumPromo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetPremiumPromo {
    return new TLHelpGetPremiumPromo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetPremiumPromo {
    return new TLHelpGetPremiumPromo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetPremiumPromo {
    return new TLHelpGetPremiumPromo().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetPremiumPromo | PlainMessage<TLHelpGetPremiumPromo> | undefined, b: TLHelpGetPremiumPromo | PlainMessage<TLHelpGetPremiumPromo> | undefined): boolean {
    return proto3.util.equals(TLHelpGetPremiumPromo, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsReadHistory
 */
export class TLChannelsReadHistory extends Message<TLChannelsReadHistory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 max_id = 4;
   */
  maxId = 0;

  constructor(data?: PartialMessage<TLChannelsReadHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsReadHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsReadHistory {
    return new TLChannelsReadHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsReadHistory {
    return new TLChannelsReadHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsReadHistory {
    return new TLChannelsReadHistory().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsReadHistory | PlainMessage<TLChannelsReadHistory> | undefined, b: TLChannelsReadHistory | PlainMessage<TLChannelsReadHistory> | undefined): boolean {
    return proto3.util.equals(TLChannelsReadHistory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteMessages
 */
export class TLChannelsDeleteMessages extends Message<TLChannelsDeleteMessages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<TLChannelsDeleteMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsDeleteMessages {
    return new TLChannelsDeleteMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsDeleteMessages {
    return new TLChannelsDeleteMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsDeleteMessages {
    return new TLChannelsDeleteMessages().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsDeleteMessages | PlainMessage<TLChannelsDeleteMessages> | undefined, b: TLChannelsDeleteMessages | PlainMessage<TLChannelsDeleteMessages> | undefined): boolean {
    return proto3.util.equals(TLChannelsDeleteMessages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsReportSpam
 */
export class TLChannelsReportSpam extends Message<TLChannelsReportSpam> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer participant = 4;
   */
  participant: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 5;
   */
  id = 0;

  constructor(data?: PartialMessage<TLChannelsReportSpam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsReportSpam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "participant", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsReportSpam {
    return new TLChannelsReportSpam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsReportSpam {
    return new TLChannelsReportSpam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsReportSpam {
    return new TLChannelsReportSpam().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsReportSpam | PlainMessage<TLChannelsReportSpam> | undefined, b: TLChannelsReportSpam | PlainMessage<TLChannelsReportSpam> | undefined): boolean {
    return proto3.util.equals(TLChannelsReportSpam, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetMessages
 */
export class TLChannelsGetMessages extends Message<TLChannelsGetMessages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputMessage id_VECTORINPUTMESSAGE = 4;
   */
  idVECTORINPUTMESSAGE: InputMessage[] = [];

  /**
   * @generated from field: int32 id_VECTORINT32 = 5;
   */
  idVECTORINT32 = 0;

  constructor(data?: PartialMessage<TLChannelsGetMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "id_VECTORINPUTMESSAGE", kind: "message", T: InputMessage, repeated: true },
    { no: 5, name: "id_VECTORINT32", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetMessages {
    return new TLChannelsGetMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetMessages {
    return new TLChannelsGetMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetMessages {
    return new TLChannelsGetMessages().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetMessages | PlainMessage<TLChannelsGetMessages> | undefined, b: TLChannelsGetMessages | PlainMessage<TLChannelsGetMessages> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetMessages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetParticipants
 */
export class TLChannelsGetParticipants extends Message<TLChannelsGetParticipants> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ChannelParticipantsFilter filter = 4;
   */
  filter: ChannelParticipantsFilter[] = [];

  /**
   * @generated from field: int32 offset = 5;
   */
  offset = 0;

  /**
   * @generated from field: int32 limit = 6;
   */
  limit = 0;

  /**
   * @generated from field: int64 hash = 7;
   */
  hash = protoInt64.zero;

  constructor(data?: PartialMessage<TLChannelsGetParticipants>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetParticipants";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "filter", kind: "message", T: ChannelParticipantsFilter, repeated: true },
    { no: 5, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "hash", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetParticipants {
    return new TLChannelsGetParticipants().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetParticipants {
    return new TLChannelsGetParticipants().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetParticipants {
    return new TLChannelsGetParticipants().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetParticipants | PlainMessage<TLChannelsGetParticipants> | undefined, b: TLChannelsGetParticipants | PlainMessage<TLChannelsGetParticipants> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetParticipants, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetParticipant
 */
export class TLChannelsGetParticipant extends Message<TLChannelsGetParticipant> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer participant = 4;
   */
  participant: InputPeer[] = [];

  constructor(data?: PartialMessage<TLChannelsGetParticipant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetParticipant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "participant", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetParticipant {
    return new TLChannelsGetParticipant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetParticipant {
    return new TLChannelsGetParticipant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetParticipant {
    return new TLChannelsGetParticipant().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetParticipant | PlainMessage<TLChannelsGetParticipant> | undefined, b: TLChannelsGetParticipant | PlainMessage<TLChannelsGetParticipant> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetParticipant, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetChannels
 */
export class TLChannelsGetChannels extends Message<TLChannelsGetChannels> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel id = 3;
   */
  id: InputChannel[] = [];

  constructor(data?: PartialMessage<TLChannelsGetChannels>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetChannels";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputChannel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetChannels {
    return new TLChannelsGetChannels().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetChannels {
    return new TLChannelsGetChannels().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetChannels {
    return new TLChannelsGetChannels().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetChannels | PlainMessage<TLChannelsGetChannels> | undefined, b: TLChannelsGetChannels | PlainMessage<TLChannelsGetChannels> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetChannels, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetFullChannel
 */
export class TLChannelsGetFullChannel extends Message<TLChannelsGetFullChannel> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  constructor(data?: PartialMessage<TLChannelsGetFullChannel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetFullChannel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetFullChannel {
    return new TLChannelsGetFullChannel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetFullChannel {
    return new TLChannelsGetFullChannel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetFullChannel {
    return new TLChannelsGetFullChannel().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetFullChannel | PlainMessage<TLChannelsGetFullChannel> | undefined, b: TLChannelsGetFullChannel | PlainMessage<TLChannelsGetFullChannel> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetFullChannel, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsCreateChannel
 */
export class TLChannelsCreateChannel extends Message<TLChannelsCreateChannel> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool broadcast = 3;
   */
  broadcast = false;

  /**
   * @generated from field: bool megagroup = 4;
   */
  megagroup = false;

  /**
   * @generated from field: bool for_import = 5;
   */
  forImport = false;

  /**
   * @generated from field: bool forum = 6;
   */
  forum = false;

  /**
   * @generated from field: string title = 7;
   */
  title = "";

  /**
   * @generated from field: string about = 8;
   */
  about = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGeoPoint geo_point = 9;
   */
  geoPoint: InputGeoPoint[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue address = 10;
   */
  address: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value ttl_period = 11;
   */
  ttlPeriod: Int32Value[] = [];

  constructor(data?: PartialMessage<TLChannelsCreateChannel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsCreateChannel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "broadcast", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "megagroup", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "for_import", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "forum", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "about", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "geo_point", kind: "message", T: InputGeoPoint, repeated: true },
    { no: 10, name: "address", kind: "message", T: StringValue, repeated: true },
    { no: 11, name: "ttl_period", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsCreateChannel {
    return new TLChannelsCreateChannel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsCreateChannel {
    return new TLChannelsCreateChannel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsCreateChannel {
    return new TLChannelsCreateChannel().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsCreateChannel | PlainMessage<TLChannelsCreateChannel> | undefined, b: TLChannelsCreateChannel | PlainMessage<TLChannelsCreateChannel> | undefined): boolean {
    return proto3.util.equals(TLChannelsCreateChannel, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditAdmin
 */
export class TLChannelsEditAdmin extends Message<TLChannelsEditAdmin> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 4;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ChatAdminRights admin_rights = 5;
   */
  adminRights: ChatAdminRights[] = [];

  /**
   * @generated from field: string rank = 6;
   */
  rank = "";

  constructor(data?: PartialMessage<TLChannelsEditAdmin>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditAdmin";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 5, name: "admin_rights", kind: "message", T: ChatAdminRights, repeated: true },
    { no: 6, name: "rank", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsEditAdmin {
    return new TLChannelsEditAdmin().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsEditAdmin {
    return new TLChannelsEditAdmin().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsEditAdmin {
    return new TLChannelsEditAdmin().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsEditAdmin | PlainMessage<TLChannelsEditAdmin> | undefined, b: TLChannelsEditAdmin | PlainMessage<TLChannelsEditAdmin> | undefined): boolean {
    return proto3.util.equals(TLChannelsEditAdmin, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditTitle
 */
export class TLChannelsEditTitle extends Message<TLChannelsEditTitle> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: string title = 4;
   */
  title = "";

  constructor(data?: PartialMessage<TLChannelsEditTitle>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditTitle";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsEditTitle {
    return new TLChannelsEditTitle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsEditTitle {
    return new TLChannelsEditTitle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsEditTitle {
    return new TLChannelsEditTitle().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsEditTitle | PlainMessage<TLChannelsEditTitle> | undefined, b: TLChannelsEditTitle | PlainMessage<TLChannelsEditTitle> | undefined): boolean {
    return proto3.util.equals(TLChannelsEditTitle, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditPhoto
 */
export class TLChannelsEditPhoto extends Message<TLChannelsEditPhoto> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChatPhoto photo = 4;
   */
  photo: InputChatPhoto[] = [];

  constructor(data?: PartialMessage<TLChannelsEditPhoto>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditPhoto";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "photo", kind: "message", T: InputChatPhoto, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsEditPhoto {
    return new TLChannelsEditPhoto().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsEditPhoto {
    return new TLChannelsEditPhoto().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsEditPhoto {
    return new TLChannelsEditPhoto().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsEditPhoto | PlainMessage<TLChannelsEditPhoto> | undefined, b: TLChannelsEditPhoto | PlainMessage<TLChannelsEditPhoto> | undefined): boolean {
    return proto3.util.equals(TLChannelsEditPhoto, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsCheckUsername
 */
export class TLChannelsCheckUsername extends Message<TLChannelsCheckUsername> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: string username = 4;
   */
  username = "";

  constructor(data?: PartialMessage<TLChannelsCheckUsername>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsCheckUsername";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsCheckUsername {
    return new TLChannelsCheckUsername().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsCheckUsername {
    return new TLChannelsCheckUsername().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsCheckUsername {
    return new TLChannelsCheckUsername().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsCheckUsername | PlainMessage<TLChannelsCheckUsername> | undefined, b: TLChannelsCheckUsername | PlainMessage<TLChannelsCheckUsername> | undefined): boolean {
    return proto3.util.equals(TLChannelsCheckUsername, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsUpdateUsername
 */
export class TLChannelsUpdateUsername extends Message<TLChannelsUpdateUsername> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: string username = 4;
   */
  username = "";

  constructor(data?: PartialMessage<TLChannelsUpdateUsername>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsUpdateUsername";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsUpdateUsername {
    return new TLChannelsUpdateUsername().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsUpdateUsername {
    return new TLChannelsUpdateUsername().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsUpdateUsername {
    return new TLChannelsUpdateUsername().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsUpdateUsername | PlainMessage<TLChannelsUpdateUsername> | undefined, b: TLChannelsUpdateUsername | PlainMessage<TLChannelsUpdateUsername> | undefined): boolean {
    return proto3.util.equals(TLChannelsUpdateUsername, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsJoinChannel
 */
export class TLChannelsJoinChannel extends Message<TLChannelsJoinChannel> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  constructor(data?: PartialMessage<TLChannelsJoinChannel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsJoinChannel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsJoinChannel {
    return new TLChannelsJoinChannel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsJoinChannel {
    return new TLChannelsJoinChannel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsJoinChannel {
    return new TLChannelsJoinChannel().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsJoinChannel | PlainMessage<TLChannelsJoinChannel> | undefined, b: TLChannelsJoinChannel | PlainMessage<TLChannelsJoinChannel> | undefined): boolean {
    return proto3.util.equals(TLChannelsJoinChannel, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsLeaveChannel
 */
export class TLChannelsLeaveChannel extends Message<TLChannelsLeaveChannel> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  constructor(data?: PartialMessage<TLChannelsLeaveChannel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsLeaveChannel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsLeaveChannel {
    return new TLChannelsLeaveChannel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsLeaveChannel {
    return new TLChannelsLeaveChannel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsLeaveChannel {
    return new TLChannelsLeaveChannel().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsLeaveChannel | PlainMessage<TLChannelsLeaveChannel> | undefined, b: TLChannelsLeaveChannel | PlainMessage<TLChannelsLeaveChannel> | undefined): boolean {
    return proto3.util.equals(TLChannelsLeaveChannel, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsInviteToChannel
 */
export class TLChannelsInviteToChannel extends Message<TLChannelsInviteToChannel> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser users = 4;
   */
  users: InputUser[] = [];

  constructor(data?: PartialMessage<TLChannelsInviteToChannel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsInviteToChannel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "users", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsInviteToChannel {
    return new TLChannelsInviteToChannel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsInviteToChannel {
    return new TLChannelsInviteToChannel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsInviteToChannel {
    return new TLChannelsInviteToChannel().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsInviteToChannel | PlainMessage<TLChannelsInviteToChannel> | undefined, b: TLChannelsInviteToChannel | PlainMessage<TLChannelsInviteToChannel> | undefined): boolean {
    return proto3.util.equals(TLChannelsInviteToChannel, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteChannel
 */
export class TLChannelsDeleteChannel extends Message<TLChannelsDeleteChannel> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  constructor(data?: PartialMessage<TLChannelsDeleteChannel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteChannel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsDeleteChannel {
    return new TLChannelsDeleteChannel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsDeleteChannel {
    return new TLChannelsDeleteChannel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsDeleteChannel {
    return new TLChannelsDeleteChannel().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsDeleteChannel | PlainMessage<TLChannelsDeleteChannel> | undefined, b: TLChannelsDeleteChannel | PlainMessage<TLChannelsDeleteChannel> | undefined): boolean {
    return proto3.util.equals(TLChannelsDeleteChannel, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsExportMessageLink
 */
export class TLChannelsExportMessageLink extends Message<TLChannelsExportMessageLink> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool grouped = 3;
   */
  grouped = false;

  /**
   * @generated from field: bool thread = 4;
   */
  thread = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 5;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 id = 6;
   */
  id = 0;

  constructor(data?: PartialMessage<TLChannelsExportMessageLink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsExportMessageLink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "grouped", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "thread", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 6, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsExportMessageLink {
    return new TLChannelsExportMessageLink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsExportMessageLink {
    return new TLChannelsExportMessageLink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsExportMessageLink {
    return new TLChannelsExportMessageLink().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsExportMessageLink | PlainMessage<TLChannelsExportMessageLink> | undefined, b: TLChannelsExportMessageLink | PlainMessage<TLChannelsExportMessageLink> | undefined): boolean {
    return proto3.util.equals(TLChannelsExportMessageLink, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleSignatures
 */
export class TLChannelsToggleSignatures extends Message<TLChannelsToggleSignatures> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool enabled = 4;
   */
  enabled: Bool[] = [];

  constructor(data?: PartialMessage<TLChannelsToggleSignatures>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleSignatures";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "enabled", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsToggleSignatures {
    return new TLChannelsToggleSignatures().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsToggleSignatures {
    return new TLChannelsToggleSignatures().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsToggleSignatures {
    return new TLChannelsToggleSignatures().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsToggleSignatures | PlainMessage<TLChannelsToggleSignatures> | undefined, b: TLChannelsToggleSignatures | PlainMessage<TLChannelsToggleSignatures> | undefined): boolean {
    return proto3.util.equals(TLChannelsToggleSignatures, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetAdminedPublicChannels
 */
export class TLChannelsGetAdminedPublicChannels extends Message<TLChannelsGetAdminedPublicChannels> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool by_location = 3;
   */
  byLocation = false;

  /**
   * @generated from field: bool check_limit = 4;
   */
  checkLimit = false;

  constructor(data?: PartialMessage<TLChannelsGetAdminedPublicChannels>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetAdminedPublicChannels";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "by_location", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "check_limit", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetAdminedPublicChannels {
    return new TLChannelsGetAdminedPublicChannels().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetAdminedPublicChannels {
    return new TLChannelsGetAdminedPublicChannels().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetAdminedPublicChannels {
    return new TLChannelsGetAdminedPublicChannels().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetAdminedPublicChannels | PlainMessage<TLChannelsGetAdminedPublicChannels> | undefined, b: TLChannelsGetAdminedPublicChannels | PlainMessage<TLChannelsGetAdminedPublicChannels> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetAdminedPublicChannels, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditBanned
 */
export class TLChannelsEditBanned extends Message<TLChannelsEditBanned> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer participant = 4;
   */
  participant: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ChatBannedRights banned_rights = 5;
   */
  bannedRights: ChatBannedRights[] = [];

  constructor(data?: PartialMessage<TLChannelsEditBanned>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditBanned";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "participant", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "banned_rights", kind: "message", T: ChatBannedRights, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsEditBanned {
    return new TLChannelsEditBanned().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsEditBanned {
    return new TLChannelsEditBanned().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsEditBanned {
    return new TLChannelsEditBanned().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsEditBanned | PlainMessage<TLChannelsEditBanned> | undefined, b: TLChannelsEditBanned | PlainMessage<TLChannelsEditBanned> | undefined): boolean {
    return proto3.util.equals(TLChannelsEditBanned, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetAdminLog
 */
export class TLChannelsGetAdminLog extends Message<TLChannelsGetAdminLog> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: string q = 4;
   */
  q = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ChannelAdminLogEventsFilter events_filter = 5;
   */
  eventsFilter: ChannelAdminLogEventsFilter[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser admins = 6;
   */
  admins: InputUser[] = [];

  /**
   * @generated from field: int64 max_id = 7;
   */
  maxId = protoInt64.zero;

  /**
   * @generated from field: int64 min_id = 8;
   */
  minId = protoInt64.zero;

  /**
   * @generated from field: int32 limit = 9;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLChannelsGetAdminLog>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetAdminLog";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "q", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "events_filter", kind: "message", T: ChannelAdminLogEventsFilter, repeated: true },
    { no: 6, name: "admins", kind: "message", T: InputUser, repeated: true },
    { no: 7, name: "max_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "min_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetAdminLog {
    return new TLChannelsGetAdminLog().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetAdminLog {
    return new TLChannelsGetAdminLog().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetAdminLog {
    return new TLChannelsGetAdminLog().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetAdminLog | PlainMessage<TLChannelsGetAdminLog> | undefined, b: TLChannelsGetAdminLog | PlainMessage<TLChannelsGetAdminLog> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetAdminLog, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsSetStickers
 */
export class TLChannelsSetStickers extends Message<TLChannelsSetStickers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickerSet stickerset = 4;
   */
  stickerset: InputStickerSet[] = [];

  constructor(data?: PartialMessage<TLChannelsSetStickers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsSetStickers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "stickerset", kind: "message", T: InputStickerSet, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsSetStickers {
    return new TLChannelsSetStickers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsSetStickers {
    return new TLChannelsSetStickers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsSetStickers {
    return new TLChannelsSetStickers().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsSetStickers | PlainMessage<TLChannelsSetStickers> | undefined, b: TLChannelsSetStickers | PlainMessage<TLChannelsSetStickers> | undefined): boolean {
    return proto3.util.equals(TLChannelsSetStickers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsReadMessageContents
 */
export class TLChannelsReadMessageContents extends Message<TLChannelsReadMessageContents> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<TLChannelsReadMessageContents>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsReadMessageContents";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsReadMessageContents {
    return new TLChannelsReadMessageContents().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsReadMessageContents {
    return new TLChannelsReadMessageContents().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsReadMessageContents {
    return new TLChannelsReadMessageContents().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsReadMessageContents | PlainMessage<TLChannelsReadMessageContents> | undefined, b: TLChannelsReadMessageContents | PlainMessage<TLChannelsReadMessageContents> | undefined): boolean {
    return proto3.util.equals(TLChannelsReadMessageContents, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteHistory9BAA9647
 */
export class TLChannelsDeleteHistory9BAA9647 extends Message<TLChannelsDeleteHistory9BAA9647> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool for_everyone = 3;
   */
  forEveryone = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 4;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 max_id = 5;
   */
  maxId = 0;

  constructor(data?: PartialMessage<TLChannelsDeleteHistory9BAA9647>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteHistory9BAA9647";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "for_everyone", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 5, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsDeleteHistory9BAA9647 {
    return new TLChannelsDeleteHistory9BAA9647().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsDeleteHistory9BAA9647 {
    return new TLChannelsDeleteHistory9BAA9647().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsDeleteHistory9BAA9647 {
    return new TLChannelsDeleteHistory9BAA9647().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsDeleteHistory9BAA9647 | PlainMessage<TLChannelsDeleteHistory9BAA9647> | undefined, b: TLChannelsDeleteHistory9BAA9647 | PlainMessage<TLChannelsDeleteHistory9BAA9647> | undefined): boolean {
    return proto3.util.equals(TLChannelsDeleteHistory9BAA9647, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsTogglePreHistoryHidden
 */
export class TLChannelsTogglePreHistoryHidden extends Message<TLChannelsTogglePreHistoryHidden> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool enabled = 4;
   */
  enabled: Bool[] = [];

  constructor(data?: PartialMessage<TLChannelsTogglePreHistoryHidden>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsTogglePreHistoryHidden";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "enabled", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsTogglePreHistoryHidden {
    return new TLChannelsTogglePreHistoryHidden().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsTogglePreHistoryHidden {
    return new TLChannelsTogglePreHistoryHidden().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsTogglePreHistoryHidden {
    return new TLChannelsTogglePreHistoryHidden().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsTogglePreHistoryHidden | PlainMessage<TLChannelsTogglePreHistoryHidden> | undefined, b: TLChannelsTogglePreHistoryHidden | PlainMessage<TLChannelsTogglePreHistoryHidden> | undefined): boolean {
    return proto3.util.equals(TLChannelsTogglePreHistoryHidden, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetLeftChannels
 */
export class TLChannelsGetLeftChannels extends Message<TLChannelsGetLeftChannels> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 offset = 3;
   */
  offset = 0;

  constructor(data?: PartialMessage<TLChannelsGetLeftChannels>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetLeftChannels";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetLeftChannels {
    return new TLChannelsGetLeftChannels().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetLeftChannels {
    return new TLChannelsGetLeftChannels().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetLeftChannels {
    return new TLChannelsGetLeftChannels().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetLeftChannels | PlainMessage<TLChannelsGetLeftChannels> | undefined, b: TLChannelsGetLeftChannels | PlainMessage<TLChannelsGetLeftChannels> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetLeftChannels, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetGroupsForDiscussion
 */
export class TLChannelsGetGroupsForDiscussion extends Message<TLChannelsGetGroupsForDiscussion> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLChannelsGetGroupsForDiscussion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetGroupsForDiscussion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetGroupsForDiscussion {
    return new TLChannelsGetGroupsForDiscussion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetGroupsForDiscussion {
    return new TLChannelsGetGroupsForDiscussion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetGroupsForDiscussion {
    return new TLChannelsGetGroupsForDiscussion().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetGroupsForDiscussion | PlainMessage<TLChannelsGetGroupsForDiscussion> | undefined, b: TLChannelsGetGroupsForDiscussion | PlainMessage<TLChannelsGetGroupsForDiscussion> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetGroupsForDiscussion, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsSetDiscussionGroup
 */
export class TLChannelsSetDiscussionGroup extends Message<TLChannelsSetDiscussionGroup> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel broadcast = 3;
   */
  broadcast: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel group = 4;
   */
  group: InputChannel[] = [];

  constructor(data?: PartialMessage<TLChannelsSetDiscussionGroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsSetDiscussionGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "broadcast", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "group", kind: "message", T: InputChannel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsSetDiscussionGroup {
    return new TLChannelsSetDiscussionGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsSetDiscussionGroup {
    return new TLChannelsSetDiscussionGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsSetDiscussionGroup {
    return new TLChannelsSetDiscussionGroup().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsSetDiscussionGroup | PlainMessage<TLChannelsSetDiscussionGroup> | undefined, b: TLChannelsSetDiscussionGroup | PlainMessage<TLChannelsSetDiscussionGroup> | undefined): boolean {
    return proto3.util.equals(TLChannelsSetDiscussionGroup, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditCreator
 */
export class TLChannelsEditCreator extends Message<TLChannelsEditCreator> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 4;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputCheckPasswordSRP password = 5;
   */
  password: InputCheckPasswordSRP[] = [];

  constructor(data?: PartialMessage<TLChannelsEditCreator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditCreator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 5, name: "password", kind: "message", T: InputCheckPasswordSRP, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsEditCreator {
    return new TLChannelsEditCreator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsEditCreator {
    return new TLChannelsEditCreator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsEditCreator {
    return new TLChannelsEditCreator().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsEditCreator | PlainMessage<TLChannelsEditCreator> | undefined, b: TLChannelsEditCreator | PlainMessage<TLChannelsEditCreator> | undefined): boolean {
    return proto3.util.equals(TLChannelsEditCreator, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditLocation
 */
export class TLChannelsEditLocation extends Message<TLChannelsEditLocation> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGeoPoint geo_point = 4;
   */
  geoPoint: InputGeoPoint[] = [];

  /**
   * @generated from field: string address = 5;
   */
  address = "";

  constructor(data?: PartialMessage<TLChannelsEditLocation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditLocation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "geo_point", kind: "message", T: InputGeoPoint, repeated: true },
    { no: 5, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsEditLocation {
    return new TLChannelsEditLocation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsEditLocation {
    return new TLChannelsEditLocation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsEditLocation {
    return new TLChannelsEditLocation().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsEditLocation | PlainMessage<TLChannelsEditLocation> | undefined, b: TLChannelsEditLocation | PlainMessage<TLChannelsEditLocation> | undefined): boolean {
    return proto3.util.equals(TLChannelsEditLocation, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleSlowMode
 */
export class TLChannelsToggleSlowMode extends Message<TLChannelsToggleSlowMode> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 seconds = 4;
   */
  seconds = 0;

  constructor(data?: PartialMessage<TLChannelsToggleSlowMode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleSlowMode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "seconds", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsToggleSlowMode {
    return new TLChannelsToggleSlowMode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsToggleSlowMode {
    return new TLChannelsToggleSlowMode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsToggleSlowMode {
    return new TLChannelsToggleSlowMode().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsToggleSlowMode | PlainMessage<TLChannelsToggleSlowMode> | undefined, b: TLChannelsToggleSlowMode | PlainMessage<TLChannelsToggleSlowMode> | undefined): boolean {
    return proto3.util.equals(TLChannelsToggleSlowMode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetInactiveChannels
 */
export class TLChannelsGetInactiveChannels extends Message<TLChannelsGetInactiveChannels> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLChannelsGetInactiveChannels>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetInactiveChannels";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetInactiveChannels {
    return new TLChannelsGetInactiveChannels().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetInactiveChannels {
    return new TLChannelsGetInactiveChannels().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetInactiveChannels {
    return new TLChannelsGetInactiveChannels().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetInactiveChannels | PlainMessage<TLChannelsGetInactiveChannels> | undefined, b: TLChannelsGetInactiveChannels | PlainMessage<TLChannelsGetInactiveChannels> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetInactiveChannels, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsConvertToGigagroup
 */
export class TLChannelsConvertToGigagroup extends Message<TLChannelsConvertToGigagroup> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  constructor(data?: PartialMessage<TLChannelsConvertToGigagroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsConvertToGigagroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsConvertToGigagroup {
    return new TLChannelsConvertToGigagroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsConvertToGigagroup {
    return new TLChannelsConvertToGigagroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsConvertToGigagroup {
    return new TLChannelsConvertToGigagroup().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsConvertToGigagroup | PlainMessage<TLChannelsConvertToGigagroup> | undefined, b: TLChannelsConvertToGigagroup | PlainMessage<TLChannelsConvertToGigagroup> | undefined): boolean {
    return proto3.util.equals(TLChannelsConvertToGigagroup, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsViewSponsoredMessage
 */
export class TLChannelsViewSponsoredMessage extends Message<TLChannelsViewSponsoredMessage> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: bytes random_id = 4;
   */
  randomId = new Uint8Array(0);

  constructor(data?: PartialMessage<TLChannelsViewSponsoredMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsViewSponsoredMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "random_id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsViewSponsoredMessage {
    return new TLChannelsViewSponsoredMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsViewSponsoredMessage {
    return new TLChannelsViewSponsoredMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsViewSponsoredMessage {
    return new TLChannelsViewSponsoredMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsViewSponsoredMessage | PlainMessage<TLChannelsViewSponsoredMessage> | undefined, b: TLChannelsViewSponsoredMessage | PlainMessage<TLChannelsViewSponsoredMessage> | undefined): boolean {
    return proto3.util.equals(TLChannelsViewSponsoredMessage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetSponsoredMessages
 */
export class TLChannelsGetSponsoredMessages extends Message<TLChannelsGetSponsoredMessages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  constructor(data?: PartialMessage<TLChannelsGetSponsoredMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetSponsoredMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetSponsoredMessages {
    return new TLChannelsGetSponsoredMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetSponsoredMessages {
    return new TLChannelsGetSponsoredMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetSponsoredMessages {
    return new TLChannelsGetSponsoredMessages().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetSponsoredMessages | PlainMessage<TLChannelsGetSponsoredMessages> | undefined, b: TLChannelsGetSponsoredMessages | PlainMessage<TLChannelsGetSponsoredMessages> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetSponsoredMessages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetSendAs
 */
export class TLChannelsGetSendAs extends Message<TLChannelsGetSendAs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLChannelsGetSendAs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetSendAs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetSendAs {
    return new TLChannelsGetSendAs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetSendAs {
    return new TLChannelsGetSendAs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetSendAs {
    return new TLChannelsGetSendAs().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetSendAs | PlainMessage<TLChannelsGetSendAs> | undefined, b: TLChannelsGetSendAs | PlainMessage<TLChannelsGetSendAs> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetSendAs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteParticipantHistory
 */
export class TLChannelsDeleteParticipantHistory extends Message<TLChannelsDeleteParticipantHistory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer participant = 4;
   */
  participant: InputPeer[] = [];

  constructor(data?: PartialMessage<TLChannelsDeleteParticipantHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteParticipantHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "participant", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsDeleteParticipantHistory {
    return new TLChannelsDeleteParticipantHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsDeleteParticipantHistory {
    return new TLChannelsDeleteParticipantHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsDeleteParticipantHistory {
    return new TLChannelsDeleteParticipantHistory().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsDeleteParticipantHistory | PlainMessage<TLChannelsDeleteParticipantHistory> | undefined, b: TLChannelsDeleteParticipantHistory | PlainMessage<TLChannelsDeleteParticipantHistory> | undefined): boolean {
    return proto3.util.equals(TLChannelsDeleteParticipantHistory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleJoinToSend
 */
export class TLChannelsToggleJoinToSend extends Message<TLChannelsToggleJoinToSend> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool enabled = 4;
   */
  enabled: Bool[] = [];

  constructor(data?: PartialMessage<TLChannelsToggleJoinToSend>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleJoinToSend";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "enabled", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsToggleJoinToSend {
    return new TLChannelsToggleJoinToSend().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsToggleJoinToSend {
    return new TLChannelsToggleJoinToSend().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsToggleJoinToSend {
    return new TLChannelsToggleJoinToSend().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsToggleJoinToSend | PlainMessage<TLChannelsToggleJoinToSend> | undefined, b: TLChannelsToggleJoinToSend | PlainMessage<TLChannelsToggleJoinToSend> | undefined): boolean {
    return proto3.util.equals(TLChannelsToggleJoinToSend, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleJoinRequest
 */
export class TLChannelsToggleJoinRequest extends Message<TLChannelsToggleJoinRequest> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool enabled = 4;
   */
  enabled: Bool[] = [];

  constructor(data?: PartialMessage<TLChannelsToggleJoinRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleJoinRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "enabled", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsToggleJoinRequest {
    return new TLChannelsToggleJoinRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsToggleJoinRequest {
    return new TLChannelsToggleJoinRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsToggleJoinRequest {
    return new TLChannelsToggleJoinRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsToggleJoinRequest | PlainMessage<TLChannelsToggleJoinRequest> | undefined, b: TLChannelsToggleJoinRequest | PlainMessage<TLChannelsToggleJoinRequest> | undefined): boolean {
    return proto3.util.equals(TLChannelsToggleJoinRequest, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsReorderUsernames
 */
export class TLChannelsReorderUsernames extends Message<TLChannelsReorderUsernames> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: string order = 4;
   */
  order = "";

  constructor(data?: PartialMessage<TLChannelsReorderUsernames>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsReorderUsernames";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "order", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsReorderUsernames {
    return new TLChannelsReorderUsernames().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsReorderUsernames {
    return new TLChannelsReorderUsernames().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsReorderUsernames {
    return new TLChannelsReorderUsernames().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsReorderUsernames | PlainMessage<TLChannelsReorderUsernames> | undefined, b: TLChannelsReorderUsernames | PlainMessage<TLChannelsReorderUsernames> | undefined): boolean {
    return proto3.util.equals(TLChannelsReorderUsernames, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleUsername
 */
export class TLChannelsToggleUsername extends Message<TLChannelsToggleUsername> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: string username = 4;
   */
  username = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool active = 5;
   */
  active: Bool[] = [];

  constructor(data?: PartialMessage<TLChannelsToggleUsername>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleUsername";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "active", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsToggleUsername {
    return new TLChannelsToggleUsername().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsToggleUsername {
    return new TLChannelsToggleUsername().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsToggleUsername {
    return new TLChannelsToggleUsername().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsToggleUsername | PlainMessage<TLChannelsToggleUsername> | undefined, b: TLChannelsToggleUsername | PlainMessage<TLChannelsToggleUsername> | undefined): boolean {
    return proto3.util.equals(TLChannelsToggleUsername, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeactivateAllUsernames
 */
export class TLChannelsDeactivateAllUsernames extends Message<TLChannelsDeactivateAllUsernames> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  constructor(data?: PartialMessage<TLChannelsDeactivateAllUsernames>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeactivateAllUsernames";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsDeactivateAllUsernames {
    return new TLChannelsDeactivateAllUsernames().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsDeactivateAllUsernames {
    return new TLChannelsDeactivateAllUsernames().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsDeactivateAllUsernames {
    return new TLChannelsDeactivateAllUsernames().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsDeactivateAllUsernames | PlainMessage<TLChannelsDeactivateAllUsernames> | undefined, b: TLChannelsDeactivateAllUsernames | PlainMessage<TLChannelsDeactivateAllUsernames> | undefined): boolean {
    return proto3.util.equals(TLChannelsDeactivateAllUsernames, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleForum
 */
export class TLChannelsToggleForum extends Message<TLChannelsToggleForum> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool enabled = 4;
   */
  enabled: Bool[] = [];

  constructor(data?: PartialMessage<TLChannelsToggleForum>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleForum";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "enabled", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsToggleForum {
    return new TLChannelsToggleForum().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsToggleForum {
    return new TLChannelsToggleForum().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsToggleForum {
    return new TLChannelsToggleForum().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsToggleForum | PlainMessage<TLChannelsToggleForum> | undefined, b: TLChannelsToggleForum | PlainMessage<TLChannelsToggleForum> | undefined): boolean {
    return proto3.util.equals(TLChannelsToggleForum, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsCreateForumTopic
 */
export class TLChannelsCreateForumTopic extends Message<TLChannelsCreateForumTopic> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: string title = 4;
   */
  title = "";

  /**
   * @generated from field: repeated google.protobuf.Int32Value icon_color = 5;
   */
  iconColor: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int64Value icon_emoji_id = 6;
   */
  iconEmojiId: Int64Value[] = [];

  /**
   * @generated from field: int64 random_id = 7;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer send_as = 8;
   */
  sendAs: InputPeer[] = [];

  constructor(data?: PartialMessage<TLChannelsCreateForumTopic>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsCreateForumTopic";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "icon_color", kind: "message", T: Int32Value, repeated: true },
    { no: 6, name: "icon_emoji_id", kind: "message", T: Int64Value, repeated: true },
    { no: 7, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "send_as", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsCreateForumTopic {
    return new TLChannelsCreateForumTopic().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsCreateForumTopic {
    return new TLChannelsCreateForumTopic().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsCreateForumTopic {
    return new TLChannelsCreateForumTopic().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsCreateForumTopic | PlainMessage<TLChannelsCreateForumTopic> | undefined, b: TLChannelsCreateForumTopic | PlainMessage<TLChannelsCreateForumTopic> | undefined): boolean {
    return proto3.util.equals(TLChannelsCreateForumTopic, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetForumTopics
 */
export class TLChannelsGetForumTopics extends Message<TLChannelsGetForumTopics> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue q = 4;
   */
  q: StringValue[] = [];

  /**
   * @generated from field: int32 offset_date = 5;
   */
  offsetDate = 0;

  /**
   * @generated from field: int32 offset_id = 6;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 offset_topic = 7;
   */
  offsetTopic = 0;

  /**
   * @generated from field: int32 limit = 8;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLChannelsGetForumTopics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetForumTopics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "q", kind: "message", T: StringValue, repeated: true },
    { no: 5, name: "offset_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "offset_topic", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetForumTopics {
    return new TLChannelsGetForumTopics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetForumTopics {
    return new TLChannelsGetForumTopics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetForumTopics {
    return new TLChannelsGetForumTopics().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetForumTopics | PlainMessage<TLChannelsGetForumTopics> | undefined, b: TLChannelsGetForumTopics | PlainMessage<TLChannelsGetForumTopics> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetForumTopics, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetForumTopicsByID
 */
export class TLChannelsGetForumTopicsByID extends Message<TLChannelsGetForumTopicsByID> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 topics = 4;
   */
  topics = 0;

  constructor(data?: PartialMessage<TLChannelsGetForumTopicsByID>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsGetForumTopicsByID";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "topics", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsGetForumTopicsByID {
    return new TLChannelsGetForumTopicsByID().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsGetForumTopicsByID {
    return new TLChannelsGetForumTopicsByID().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsGetForumTopicsByID {
    return new TLChannelsGetForumTopicsByID().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsGetForumTopicsByID | PlainMessage<TLChannelsGetForumTopicsByID> | undefined, b: TLChannelsGetForumTopicsByID | PlainMessage<TLChannelsGetForumTopicsByID> | undefined): boolean {
    return proto3.util.equals(TLChannelsGetForumTopicsByID, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditForumTopic
 */
export class TLChannelsEditForumTopic extends Message<TLChannelsEditForumTopic> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 topic_id = 4;
   */
  topicId = 0;

  /**
   * @generated from field: repeated google.protobuf.StringValue title = 5;
   */
  title: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int64Value icon_emoji_id = 6;
   */
  iconEmojiId: Int64Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool closed = 7;
   */
  closed: Bool[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool hidden = 8;
   */
  hidden: Bool[] = [];

  constructor(data?: PartialMessage<TLChannelsEditForumTopic>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsEditForumTopic";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "topic_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "title", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "icon_emoji_id", kind: "message", T: Int64Value, repeated: true },
    { no: 7, name: "closed", kind: "message", T: Bool, repeated: true },
    { no: 8, name: "hidden", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsEditForumTopic {
    return new TLChannelsEditForumTopic().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsEditForumTopic {
    return new TLChannelsEditForumTopic().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsEditForumTopic {
    return new TLChannelsEditForumTopic().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsEditForumTopic | PlainMessage<TLChannelsEditForumTopic> | undefined, b: TLChannelsEditForumTopic | PlainMessage<TLChannelsEditForumTopic> | undefined): boolean {
    return proto3.util.equals(TLChannelsEditForumTopic, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsUpdatePinnedForumTopic
 */
export class TLChannelsUpdatePinnedForumTopic extends Message<TLChannelsUpdatePinnedForumTopic> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 topic_id = 4;
   */
  topicId = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool pinned = 5;
   */
  pinned: Bool[] = [];

  constructor(data?: PartialMessage<TLChannelsUpdatePinnedForumTopic>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsUpdatePinnedForumTopic";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "topic_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "pinned", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsUpdatePinnedForumTopic {
    return new TLChannelsUpdatePinnedForumTopic().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsUpdatePinnedForumTopic {
    return new TLChannelsUpdatePinnedForumTopic().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsUpdatePinnedForumTopic {
    return new TLChannelsUpdatePinnedForumTopic().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsUpdatePinnedForumTopic | PlainMessage<TLChannelsUpdatePinnedForumTopic> | undefined, b: TLChannelsUpdatePinnedForumTopic | PlainMessage<TLChannelsUpdatePinnedForumTopic> | undefined): boolean {
    return proto3.util.equals(TLChannelsUpdatePinnedForumTopic, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteTopicHistory
 */
export class TLChannelsDeleteTopicHistory extends Message<TLChannelsDeleteTopicHistory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 top_msg_id = 4;
   */
  topMsgId = 0;

  constructor(data?: PartialMessage<TLChannelsDeleteTopicHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteTopicHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "top_msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsDeleteTopicHistory {
    return new TLChannelsDeleteTopicHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsDeleteTopicHistory {
    return new TLChannelsDeleteTopicHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsDeleteTopicHistory {
    return new TLChannelsDeleteTopicHistory().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsDeleteTopicHistory | PlainMessage<TLChannelsDeleteTopicHistory> | undefined, b: TLChannelsDeleteTopicHistory | PlainMessage<TLChannelsDeleteTopicHistory> | undefined): boolean {
    return proto3.util.equals(TLChannelsDeleteTopicHistory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsReorderPinnedForumTopics
 */
export class TLChannelsReorderPinnedForumTopics extends Message<TLChannelsReorderPinnedForumTopics> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool force = 3;
   */
  force = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 4;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 order = 5;
   */
  order = 0;

  constructor(data?: PartialMessage<TLChannelsReorderPinnedForumTopics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsReorderPinnedForumTopics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 5, name: "order", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsReorderPinnedForumTopics {
    return new TLChannelsReorderPinnedForumTopics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsReorderPinnedForumTopics {
    return new TLChannelsReorderPinnedForumTopics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsReorderPinnedForumTopics {
    return new TLChannelsReorderPinnedForumTopics().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsReorderPinnedForumTopics | PlainMessage<TLChannelsReorderPinnedForumTopics> | undefined, b: TLChannelsReorderPinnedForumTopics | PlainMessage<TLChannelsReorderPinnedForumTopics> | undefined): boolean {
    return proto3.util.equals(TLChannelsReorderPinnedForumTopics, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleAntiSpam
 */
export class TLChannelsToggleAntiSpam extends Message<TLChannelsToggleAntiSpam> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool enabled = 4;
   */
  enabled: Bool[] = [];

  constructor(data?: PartialMessage<TLChannelsToggleAntiSpam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleAntiSpam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "enabled", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsToggleAntiSpam {
    return new TLChannelsToggleAntiSpam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsToggleAntiSpam {
    return new TLChannelsToggleAntiSpam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsToggleAntiSpam {
    return new TLChannelsToggleAntiSpam().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsToggleAntiSpam | PlainMessage<TLChannelsToggleAntiSpam> | undefined, b: TLChannelsToggleAntiSpam | PlainMessage<TLChannelsToggleAntiSpam> | undefined): boolean {
    return proto3.util.equals(TLChannelsToggleAntiSpam, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsReportAntiSpamFalsePositive
 */
export class TLChannelsReportAntiSpamFalsePositive extends Message<TLChannelsReportAntiSpamFalsePositive> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLChannelsReportAntiSpamFalsePositive>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsReportAntiSpamFalsePositive";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsReportAntiSpamFalsePositive {
    return new TLChannelsReportAntiSpamFalsePositive().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsReportAntiSpamFalsePositive {
    return new TLChannelsReportAntiSpamFalsePositive().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsReportAntiSpamFalsePositive {
    return new TLChannelsReportAntiSpamFalsePositive().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsReportAntiSpamFalsePositive | PlainMessage<TLChannelsReportAntiSpamFalsePositive> | undefined, b: TLChannelsReportAntiSpamFalsePositive | PlainMessage<TLChannelsReportAntiSpamFalsePositive> | undefined): boolean {
    return proto3.util.equals(TLChannelsReportAntiSpamFalsePositive, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleParticipantsHidden
 */
export class TLChannelsToggleParticipantsHidden extends Message<TLChannelsToggleParticipantsHidden> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool enabled = 4;
   */
  enabled: Bool[] = [];

  constructor(data?: PartialMessage<TLChannelsToggleParticipantsHidden>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsToggleParticipantsHidden";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "enabled", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsToggleParticipantsHidden {
    return new TLChannelsToggleParticipantsHidden().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsToggleParticipantsHidden {
    return new TLChannelsToggleParticipantsHidden().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsToggleParticipantsHidden {
    return new TLChannelsToggleParticipantsHidden().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsToggleParticipantsHidden | PlainMessage<TLChannelsToggleParticipantsHidden> | undefined, b: TLChannelsToggleParticipantsHidden | PlainMessage<TLChannelsToggleParticipantsHidden> | undefined): boolean {
    return proto3.util.equals(TLChannelsToggleParticipantsHidden, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsClickSponsoredMessage
 */
export class TLChannelsClickSponsoredMessage extends Message<TLChannelsClickSponsoredMessage> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: bytes random_id = 4;
   */
  randomId = new Uint8Array(0);

  constructor(data?: PartialMessage<TLChannelsClickSponsoredMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsClickSponsoredMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "random_id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsClickSponsoredMessage {
    return new TLChannelsClickSponsoredMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsClickSponsoredMessage {
    return new TLChannelsClickSponsoredMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsClickSponsoredMessage {
    return new TLChannelsClickSponsoredMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsClickSponsoredMessage | PlainMessage<TLChannelsClickSponsoredMessage> | undefined, b: TLChannelsClickSponsoredMessage | PlainMessage<TLChannelsClickSponsoredMessage> | undefined): boolean {
    return proto3.util.equals(TLChannelsClickSponsoredMessage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsSendCustomRequest
 */
export class TLBotsSendCustomRequest extends Message<TLBotsSendCustomRequest> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string custom_method = 3;
   */
  customMethod = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON params = 4;
   */
  params: DataJSON[] = [];

  constructor(data?: PartialMessage<TLBotsSendCustomRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsSendCustomRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "custom_method", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "params", kind: "message", T: DataJSON, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsSendCustomRequest {
    return new TLBotsSendCustomRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsSendCustomRequest {
    return new TLBotsSendCustomRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsSendCustomRequest {
    return new TLBotsSendCustomRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsSendCustomRequest | PlainMessage<TLBotsSendCustomRequest> | undefined, b: TLBotsSendCustomRequest | PlainMessage<TLBotsSendCustomRequest> | undefined): boolean {
    return proto3.util.equals(TLBotsSendCustomRequest, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsAnswerWebhookJSONQuery
 */
export class TLBotsAnswerWebhookJSONQuery extends Message<TLBotsAnswerWebhookJSONQuery> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 query_id = 3;
   */
  queryId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON data = 4;
   */
  data: DataJSON[] = [];

  constructor(data?: PartialMessage<TLBotsAnswerWebhookJSONQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsAnswerWebhookJSONQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "query_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "data", kind: "message", T: DataJSON, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsAnswerWebhookJSONQuery {
    return new TLBotsAnswerWebhookJSONQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsAnswerWebhookJSONQuery {
    return new TLBotsAnswerWebhookJSONQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsAnswerWebhookJSONQuery {
    return new TLBotsAnswerWebhookJSONQuery().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsAnswerWebhookJSONQuery | PlainMessage<TLBotsAnswerWebhookJSONQuery> | undefined, b: TLBotsAnswerWebhookJSONQuery | PlainMessage<TLBotsAnswerWebhookJSONQuery> | undefined): boolean {
    return proto3.util.equals(TLBotsAnswerWebhookJSONQuery, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsSetBotCommands
 */
export class TLBotsSetBotCommands extends Message<TLBotsSetBotCommands> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.BotCommandScope scope = 3;
   */
  scope: BotCommandScope[] = [];

  /**
   * @generated from field: string lang_code = 4;
   */
  langCode = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.BotCommand commands = 5;
   */
  commands: BotCommand[] = [];

  constructor(data?: PartialMessage<TLBotsSetBotCommands>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsSetBotCommands";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "scope", kind: "message", T: BotCommandScope, repeated: true },
    { no: 4, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "commands", kind: "message", T: BotCommand, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsSetBotCommands {
    return new TLBotsSetBotCommands().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsSetBotCommands {
    return new TLBotsSetBotCommands().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsSetBotCommands {
    return new TLBotsSetBotCommands().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsSetBotCommands | PlainMessage<TLBotsSetBotCommands> | undefined, b: TLBotsSetBotCommands | PlainMessage<TLBotsSetBotCommands> | undefined): boolean {
    return proto3.util.equals(TLBotsSetBotCommands, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsResetBotCommands
 */
export class TLBotsResetBotCommands extends Message<TLBotsResetBotCommands> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.BotCommandScope scope = 3;
   */
  scope: BotCommandScope[] = [];

  /**
   * @generated from field: string lang_code = 4;
   */
  langCode = "";

  constructor(data?: PartialMessage<TLBotsResetBotCommands>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsResetBotCommands";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "scope", kind: "message", T: BotCommandScope, repeated: true },
    { no: 4, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsResetBotCommands {
    return new TLBotsResetBotCommands().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsResetBotCommands {
    return new TLBotsResetBotCommands().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsResetBotCommands {
    return new TLBotsResetBotCommands().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsResetBotCommands | PlainMessage<TLBotsResetBotCommands> | undefined, b: TLBotsResetBotCommands | PlainMessage<TLBotsResetBotCommands> | undefined): boolean {
    return proto3.util.equals(TLBotsResetBotCommands, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsGetBotCommands
 */
export class TLBotsGetBotCommands extends Message<TLBotsGetBotCommands> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.BotCommandScope scope = 3;
   */
  scope: BotCommandScope[] = [];

  /**
   * @generated from field: string lang_code = 4;
   */
  langCode = "";

  constructor(data?: PartialMessage<TLBotsGetBotCommands>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsGetBotCommands";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "scope", kind: "message", T: BotCommandScope, repeated: true },
    { no: 4, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsGetBotCommands {
    return new TLBotsGetBotCommands().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsGetBotCommands {
    return new TLBotsGetBotCommands().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsGetBotCommands {
    return new TLBotsGetBotCommands().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsGetBotCommands | PlainMessage<TLBotsGetBotCommands> | undefined, b: TLBotsGetBotCommands | PlainMessage<TLBotsGetBotCommands> | undefined): boolean {
    return proto3.util.equals(TLBotsGetBotCommands, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsSetBotMenuButton
 */
export class TLBotsSetBotMenuButton extends Message<TLBotsSetBotMenuButton> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 3;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.BotMenuButton button = 4;
   */
  button: BotMenuButton[] = [];

  constructor(data?: PartialMessage<TLBotsSetBotMenuButton>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsSetBotMenuButton";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "button", kind: "message", T: BotMenuButton, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsSetBotMenuButton {
    return new TLBotsSetBotMenuButton().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsSetBotMenuButton {
    return new TLBotsSetBotMenuButton().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsSetBotMenuButton {
    return new TLBotsSetBotMenuButton().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsSetBotMenuButton | PlainMessage<TLBotsSetBotMenuButton> | undefined, b: TLBotsSetBotMenuButton | PlainMessage<TLBotsSetBotMenuButton> | undefined): boolean {
    return proto3.util.equals(TLBotsSetBotMenuButton, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsGetBotMenuButton
 */
export class TLBotsGetBotMenuButton extends Message<TLBotsGetBotMenuButton> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 3;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLBotsGetBotMenuButton>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsGetBotMenuButton";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsGetBotMenuButton {
    return new TLBotsGetBotMenuButton().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsGetBotMenuButton {
    return new TLBotsGetBotMenuButton().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsGetBotMenuButton {
    return new TLBotsGetBotMenuButton().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsGetBotMenuButton | PlainMessage<TLBotsGetBotMenuButton> | undefined, b: TLBotsGetBotMenuButton | PlainMessage<TLBotsGetBotMenuButton> | undefined): boolean {
    return proto3.util.equals(TLBotsGetBotMenuButton, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsSetBotBroadcastDefaultAdminRights
 */
export class TLBotsSetBotBroadcastDefaultAdminRights extends Message<TLBotsSetBotBroadcastDefaultAdminRights> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ChatAdminRights admin_rights = 3;
   */
  adminRights: ChatAdminRights[] = [];

  constructor(data?: PartialMessage<TLBotsSetBotBroadcastDefaultAdminRights>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsSetBotBroadcastDefaultAdminRights";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "admin_rights", kind: "message", T: ChatAdminRights, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsSetBotBroadcastDefaultAdminRights {
    return new TLBotsSetBotBroadcastDefaultAdminRights().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsSetBotBroadcastDefaultAdminRights {
    return new TLBotsSetBotBroadcastDefaultAdminRights().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsSetBotBroadcastDefaultAdminRights {
    return new TLBotsSetBotBroadcastDefaultAdminRights().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsSetBotBroadcastDefaultAdminRights | PlainMessage<TLBotsSetBotBroadcastDefaultAdminRights> | undefined, b: TLBotsSetBotBroadcastDefaultAdminRights | PlainMessage<TLBotsSetBotBroadcastDefaultAdminRights> | undefined): boolean {
    return proto3.util.equals(TLBotsSetBotBroadcastDefaultAdminRights, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsSetBotGroupDefaultAdminRights
 */
export class TLBotsSetBotGroupDefaultAdminRights extends Message<TLBotsSetBotGroupDefaultAdminRights> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ChatAdminRights admin_rights = 3;
   */
  adminRights: ChatAdminRights[] = [];

  constructor(data?: PartialMessage<TLBotsSetBotGroupDefaultAdminRights>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsSetBotGroupDefaultAdminRights";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "admin_rights", kind: "message", T: ChatAdminRights, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsSetBotGroupDefaultAdminRights {
    return new TLBotsSetBotGroupDefaultAdminRights().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsSetBotGroupDefaultAdminRights {
    return new TLBotsSetBotGroupDefaultAdminRights().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsSetBotGroupDefaultAdminRights {
    return new TLBotsSetBotGroupDefaultAdminRights().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsSetBotGroupDefaultAdminRights | PlainMessage<TLBotsSetBotGroupDefaultAdminRights> | undefined, b: TLBotsSetBotGroupDefaultAdminRights | PlainMessage<TLBotsSetBotGroupDefaultAdminRights> | undefined): boolean {
    return proto3.util.equals(TLBotsSetBotGroupDefaultAdminRights, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsSetBotInfo
 */
export class TLBotsSetBotInfo extends Message<TLBotsSetBotInfo> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 3;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: string lang_code = 4;
   */
  langCode = "";

  /**
   * @generated from field: repeated google.protobuf.StringValue name = 5;
   */
  name: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue about = 6;
   */
  about: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue description = 7;
   */
  description: StringValue[] = [];

  constructor(data?: PartialMessage<TLBotsSetBotInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsSetBotInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "name", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "about", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "description", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsSetBotInfo {
    return new TLBotsSetBotInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsSetBotInfo {
    return new TLBotsSetBotInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsSetBotInfo {
    return new TLBotsSetBotInfo().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsSetBotInfo | PlainMessage<TLBotsSetBotInfo> | undefined, b: TLBotsSetBotInfo | PlainMessage<TLBotsSetBotInfo> | undefined): boolean {
    return proto3.util.equals(TLBotsSetBotInfo, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsGetBotInfoDCD914FD
 */
export class TLBotsGetBotInfoDCD914FD extends Message<TLBotsGetBotInfoDCD914FD> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 3;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: string lang_code = 4;
   */
  langCode = "";

  constructor(data?: PartialMessage<TLBotsGetBotInfoDCD914FD>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsGetBotInfoDCD914FD";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsGetBotInfoDCD914FD {
    return new TLBotsGetBotInfoDCD914FD().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsGetBotInfoDCD914FD {
    return new TLBotsGetBotInfoDCD914FD().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsGetBotInfoDCD914FD {
    return new TLBotsGetBotInfoDCD914FD().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsGetBotInfoDCD914FD | PlainMessage<TLBotsGetBotInfoDCD914FD> | undefined, b: TLBotsGetBotInfoDCD914FD | PlainMessage<TLBotsGetBotInfoDCD914FD> | undefined): boolean {
    return proto3.util.equals(TLBotsGetBotInfoDCD914FD, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsReorderUsernames
 */
export class TLBotsReorderUsernames extends Message<TLBotsReorderUsernames> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 3;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: string order = 4;
   */
  order = "";

  constructor(data?: PartialMessage<TLBotsReorderUsernames>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsReorderUsernames";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "order", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsReorderUsernames {
    return new TLBotsReorderUsernames().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsReorderUsernames {
    return new TLBotsReorderUsernames().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsReorderUsernames {
    return new TLBotsReorderUsernames().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsReorderUsernames | PlainMessage<TLBotsReorderUsernames> | undefined, b: TLBotsReorderUsernames | PlainMessage<TLBotsReorderUsernames> | undefined): boolean {
    return proto3.util.equals(TLBotsReorderUsernames, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsToggleUsername
 */
export class TLBotsToggleUsername extends Message<TLBotsToggleUsername> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 3;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: string username = 4;
   */
  username = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool active = 5;
   */
  active: Bool[] = [];

  constructor(data?: PartialMessage<TLBotsToggleUsername>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsToggleUsername";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "active", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsToggleUsername {
    return new TLBotsToggleUsername().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsToggleUsername {
    return new TLBotsToggleUsername().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsToggleUsername {
    return new TLBotsToggleUsername().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsToggleUsername | PlainMessage<TLBotsToggleUsername> | undefined, b: TLBotsToggleUsername | PlainMessage<TLBotsToggleUsername> | undefined): boolean {
    return proto3.util.equals(TLBotsToggleUsername, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsCanSendMessage
 */
export class TLBotsCanSendMessage extends Message<TLBotsCanSendMessage> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 3;
   */
  bot: InputUser[] = [];

  constructor(data?: PartialMessage<TLBotsCanSendMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsCanSendMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsCanSendMessage {
    return new TLBotsCanSendMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsCanSendMessage {
    return new TLBotsCanSendMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsCanSendMessage {
    return new TLBotsCanSendMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsCanSendMessage | PlainMessage<TLBotsCanSendMessage> | undefined, b: TLBotsCanSendMessage | PlainMessage<TLBotsCanSendMessage> | undefined): boolean {
    return proto3.util.equals(TLBotsCanSendMessage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsAllowSendMessage
 */
export class TLBotsAllowSendMessage extends Message<TLBotsAllowSendMessage> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 3;
   */
  bot: InputUser[] = [];

  constructor(data?: PartialMessage<TLBotsAllowSendMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsAllowSendMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsAllowSendMessage {
    return new TLBotsAllowSendMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsAllowSendMessage {
    return new TLBotsAllowSendMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsAllowSendMessage {
    return new TLBotsAllowSendMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsAllowSendMessage | PlainMessage<TLBotsAllowSendMessage> | undefined, b: TLBotsAllowSendMessage | PlainMessage<TLBotsAllowSendMessage> | undefined): boolean {
    return proto3.util.equals(TLBotsAllowSendMessage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsInvokeWebViewCustomMethod
 */
export class TLBotsInvokeWebViewCustomMethod extends Message<TLBotsInvokeWebViewCustomMethod> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser bot = 3;
   */
  bot: InputUser[] = [];

  /**
   * @generated from field: string custom_method = 4;
   */
  customMethod = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON params = 5;
   */
  params: DataJSON[] = [];

  constructor(data?: PartialMessage<TLBotsInvokeWebViewCustomMethod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsInvokeWebViewCustomMethod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "bot", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "custom_method", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "params", kind: "message", T: DataJSON, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsInvokeWebViewCustomMethod {
    return new TLBotsInvokeWebViewCustomMethod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsInvokeWebViewCustomMethod {
    return new TLBotsInvokeWebViewCustomMethod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsInvokeWebViewCustomMethod {
    return new TLBotsInvokeWebViewCustomMethod().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsInvokeWebViewCustomMethod | PlainMessage<TLBotsInvokeWebViewCustomMethod> | undefined, b: TLBotsInvokeWebViewCustomMethod | PlainMessage<TLBotsInvokeWebViewCustomMethod> | undefined): boolean {
    return proto3.util.equals(TLBotsInvokeWebViewCustomMethod, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsGetPaymentForm
 */
export class TLPaymentsGetPaymentForm extends Message<TLPaymentsGetPaymentForm> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputInvoice invoice = 3;
   */
  invoice: InputInvoice[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON theme_params = 4;
   */
  themeParams: DataJSON[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 5;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 6;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLPaymentsGetPaymentForm>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsGetPaymentForm";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "invoice", kind: "message", T: InputInvoice, repeated: true },
    { no: 4, name: "theme_params", kind: "message", T: DataJSON, repeated: true },
    { no: 5, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 6, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsGetPaymentForm {
    return new TLPaymentsGetPaymentForm().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsGetPaymentForm {
    return new TLPaymentsGetPaymentForm().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsGetPaymentForm {
    return new TLPaymentsGetPaymentForm().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsGetPaymentForm | PlainMessage<TLPaymentsGetPaymentForm> | undefined, b: TLPaymentsGetPaymentForm | PlainMessage<TLPaymentsGetPaymentForm> | undefined): boolean {
    return proto3.util.equals(TLPaymentsGetPaymentForm, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsGetPaymentReceipt
 */
export class TLPaymentsGetPaymentReceipt extends Message<TLPaymentsGetPaymentReceipt> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLPaymentsGetPaymentReceipt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsGetPaymentReceipt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsGetPaymentReceipt {
    return new TLPaymentsGetPaymentReceipt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsGetPaymentReceipt {
    return new TLPaymentsGetPaymentReceipt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsGetPaymentReceipt {
    return new TLPaymentsGetPaymentReceipt().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsGetPaymentReceipt | PlainMessage<TLPaymentsGetPaymentReceipt> | undefined, b: TLPaymentsGetPaymentReceipt | PlainMessage<TLPaymentsGetPaymentReceipt> | undefined): boolean {
    return proto3.util.equals(TLPaymentsGetPaymentReceipt, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsValidateRequestedInfo
 */
export class TLPaymentsValidateRequestedInfo extends Message<TLPaymentsValidateRequestedInfo> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool save = 3;
   */
  save = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputInvoice invoice = 4;
   */
  invoice: InputInvoice[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.PaymentRequestedInfo info = 5;
   */
  info: PaymentRequestedInfo[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 6;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 7;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLPaymentsValidateRequestedInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsValidateRequestedInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "save", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "invoice", kind: "message", T: InputInvoice, repeated: true },
    { no: 5, name: "info", kind: "message", T: PaymentRequestedInfo, repeated: true },
    { no: 6, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 7, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsValidateRequestedInfo {
    return new TLPaymentsValidateRequestedInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsValidateRequestedInfo {
    return new TLPaymentsValidateRequestedInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsValidateRequestedInfo {
    return new TLPaymentsValidateRequestedInfo().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsValidateRequestedInfo | PlainMessage<TLPaymentsValidateRequestedInfo> | undefined, b: TLPaymentsValidateRequestedInfo | PlainMessage<TLPaymentsValidateRequestedInfo> | undefined): boolean {
    return proto3.util.equals(TLPaymentsValidateRequestedInfo, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsSendPaymentForm
 */
export class TLPaymentsSendPaymentForm extends Message<TLPaymentsSendPaymentForm> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 form_id = 3;
   */
  formId = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputInvoice invoice = 4;
   */
  invoice: InputInvoice[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue requested_info_id = 5;
   */
  requestedInfoId: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue shipping_option_id = 6;
   */
  shippingOptionId: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPaymentCredentials credentials = 7;
   */
  credentials: InputPaymentCredentials[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int64Value tip_amount = 8;
   */
  tipAmount: Int64Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 9;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 10;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLPaymentsSendPaymentForm>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsSendPaymentForm";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "form_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "invoice", kind: "message", T: InputInvoice, repeated: true },
    { no: 5, name: "requested_info_id", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "shipping_option_id", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "credentials", kind: "message", T: InputPaymentCredentials, repeated: true },
    { no: 8, name: "tip_amount", kind: "message", T: Int64Value, repeated: true },
    { no: 9, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 10, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsSendPaymentForm {
    return new TLPaymentsSendPaymentForm().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsSendPaymentForm {
    return new TLPaymentsSendPaymentForm().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsSendPaymentForm {
    return new TLPaymentsSendPaymentForm().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsSendPaymentForm | PlainMessage<TLPaymentsSendPaymentForm> | undefined, b: TLPaymentsSendPaymentForm | PlainMessage<TLPaymentsSendPaymentForm> | undefined): boolean {
    return proto3.util.equals(TLPaymentsSendPaymentForm, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsGetSavedInfo
 */
export class TLPaymentsGetSavedInfo extends Message<TLPaymentsGetSavedInfo> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLPaymentsGetSavedInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsGetSavedInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsGetSavedInfo {
    return new TLPaymentsGetSavedInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsGetSavedInfo {
    return new TLPaymentsGetSavedInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsGetSavedInfo {
    return new TLPaymentsGetSavedInfo().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsGetSavedInfo | PlainMessage<TLPaymentsGetSavedInfo> | undefined, b: TLPaymentsGetSavedInfo | PlainMessage<TLPaymentsGetSavedInfo> | undefined): boolean {
    return proto3.util.equals(TLPaymentsGetSavedInfo, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsClearSavedInfo
 */
export class TLPaymentsClearSavedInfo extends Message<TLPaymentsClearSavedInfo> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool credentials = 3;
   */
  credentials = false;

  /**
   * @generated from field: bool info = 4;
   */
  info = false;

  constructor(data?: PartialMessage<TLPaymentsClearSavedInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsClearSavedInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "credentials", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "info", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsClearSavedInfo {
    return new TLPaymentsClearSavedInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsClearSavedInfo {
    return new TLPaymentsClearSavedInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsClearSavedInfo {
    return new TLPaymentsClearSavedInfo().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsClearSavedInfo | PlainMessage<TLPaymentsClearSavedInfo> | undefined, b: TLPaymentsClearSavedInfo | PlainMessage<TLPaymentsClearSavedInfo> | undefined): boolean {
    return proto3.util.equals(TLPaymentsClearSavedInfo, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsGetBankCardData
 */
export class TLPaymentsGetBankCardData extends Message<TLPaymentsGetBankCardData> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string number = 3;
   */
  number = "";

  constructor(data?: PartialMessage<TLPaymentsGetBankCardData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsGetBankCardData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsGetBankCardData {
    return new TLPaymentsGetBankCardData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsGetBankCardData {
    return new TLPaymentsGetBankCardData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsGetBankCardData {
    return new TLPaymentsGetBankCardData().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsGetBankCardData | PlainMessage<TLPaymentsGetBankCardData> | undefined, b: TLPaymentsGetBankCardData | PlainMessage<TLPaymentsGetBankCardData> | undefined): boolean {
    return proto3.util.equals(TLPaymentsGetBankCardData, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsExportInvoice
 */
export class TLPaymentsExportInvoice extends Message<TLPaymentsExportInvoice> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputMedia invoice_media = 3;
   */
  invoiceMedia: InputMedia[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 4;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLPaymentsExportInvoice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsExportInvoice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "invoice_media", kind: "message", T: InputMedia, repeated: true },
    { no: 4, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsExportInvoice {
    return new TLPaymentsExportInvoice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsExportInvoice {
    return new TLPaymentsExportInvoice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsExportInvoice {
    return new TLPaymentsExportInvoice().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsExportInvoice | PlainMessage<TLPaymentsExportInvoice> | undefined, b: TLPaymentsExportInvoice | PlainMessage<TLPaymentsExportInvoice> | undefined): boolean {
    return proto3.util.equals(TLPaymentsExportInvoice, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsAssignAppStoreTransaction
 */
export class TLPaymentsAssignAppStoreTransaction extends Message<TLPaymentsAssignAppStoreTransaction> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bytes receipt = 3;
   */
  receipt = new Uint8Array(0);

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStorePaymentPurpose purpose = 4;
   */
  purpose: InputStorePaymentPurpose[] = [];

  /**
   * @generated from field: bool restore = 5;
   */
  restore = false;

  /**
   * @generated from field: string transaction_id = 6;
   */
  transactionId = "";

  constructor(data?: PartialMessage<TLPaymentsAssignAppStoreTransaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsAssignAppStoreTransaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "receipt", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "purpose", kind: "message", T: InputStorePaymentPurpose, repeated: true },
    { no: 5, name: "restore", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "transaction_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsAssignAppStoreTransaction {
    return new TLPaymentsAssignAppStoreTransaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsAssignAppStoreTransaction {
    return new TLPaymentsAssignAppStoreTransaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsAssignAppStoreTransaction {
    return new TLPaymentsAssignAppStoreTransaction().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsAssignAppStoreTransaction | PlainMessage<TLPaymentsAssignAppStoreTransaction> | undefined, b: TLPaymentsAssignAppStoreTransaction | PlainMessage<TLPaymentsAssignAppStoreTransaction> | undefined): boolean {
    return proto3.util.equals(TLPaymentsAssignAppStoreTransaction, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsAssignPlayMarketTransaction
 */
export class TLPaymentsAssignPlayMarketTransaction extends Message<TLPaymentsAssignPlayMarketTransaction> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON receipt = 3;
   */
  receipt: DataJSON[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStorePaymentPurpose purpose = 4;
   */
  purpose: InputStorePaymentPurpose[] = [];

  /**
   * @generated from field: string purchase_token = 5;
   */
  purchaseToken = "";

  constructor(data?: PartialMessage<TLPaymentsAssignPlayMarketTransaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsAssignPlayMarketTransaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "receipt", kind: "message", T: DataJSON, repeated: true },
    { no: 4, name: "purpose", kind: "message", T: InputStorePaymentPurpose, repeated: true },
    { no: 5, name: "purchase_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsAssignPlayMarketTransaction {
    return new TLPaymentsAssignPlayMarketTransaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsAssignPlayMarketTransaction {
    return new TLPaymentsAssignPlayMarketTransaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsAssignPlayMarketTransaction {
    return new TLPaymentsAssignPlayMarketTransaction().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsAssignPlayMarketTransaction | PlainMessage<TLPaymentsAssignPlayMarketTransaction> | undefined, b: TLPaymentsAssignPlayMarketTransaction | PlainMessage<TLPaymentsAssignPlayMarketTransaction> | undefined): boolean {
    return proto3.util.equals(TLPaymentsAssignPlayMarketTransaction, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsCanPurchasePremium
 */
export class TLPaymentsCanPurchasePremium extends Message<TLPaymentsCanPurchasePremium> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStorePaymentPurpose purpose = 3;
   */
  purpose: InputStorePaymentPurpose[] = [];

  constructor(data?: PartialMessage<TLPaymentsCanPurchasePremium>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsCanPurchasePremium";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "purpose", kind: "message", T: InputStorePaymentPurpose, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsCanPurchasePremium {
    return new TLPaymentsCanPurchasePremium().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsCanPurchasePremium {
    return new TLPaymentsCanPurchasePremium().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsCanPurchasePremium {
    return new TLPaymentsCanPurchasePremium().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsCanPurchasePremium | PlainMessage<TLPaymentsCanPurchasePremium> | undefined, b: TLPaymentsCanPurchasePremium | PlainMessage<TLPaymentsCanPurchasePremium> | undefined): boolean {
    return proto3.util.equals(TLPaymentsCanPurchasePremium, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStickersCreateStickerSet
 */
export class TLStickersCreateStickerSet extends Message<TLStickersCreateStickerSet> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool masks = 3;
   */
  masks = false;

  /**
   * @generated from field: bool animated = 4;
   */
  animated = false;

  /**
   * @generated from field: bool videos = 5;
   */
  videos = false;

  /**
   * @generated from field: bool emojis = 6;
   */
  emojis = false;

  /**
   * @generated from field: bool text_color = 7;
   */
  textColor = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 8;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: string title = 9;
   */
  title = "";

  /**
   * @generated from field: string short_name = 10;
   */
  shortName = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDocument thumb = 11;
   */
  thumb: InputDocument[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickerSetItem stickers = 12;
   */
  stickers: InputStickerSetItem[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue software = 13;
   */
  software: StringValue[] = [];

  constructor(data?: PartialMessage<TLStickersCreateStickerSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStickersCreateStickerSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "masks", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "animated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "videos", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "emojis", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "text_color", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 9, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "short_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "thumb", kind: "message", T: InputDocument, repeated: true },
    { no: 12, name: "stickers", kind: "message", T: InputStickerSetItem, repeated: true },
    { no: 13, name: "software", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStickersCreateStickerSet {
    return new TLStickersCreateStickerSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStickersCreateStickerSet {
    return new TLStickersCreateStickerSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStickersCreateStickerSet {
    return new TLStickersCreateStickerSet().fromJsonString(jsonString, options);
  }

  static equals(a: TLStickersCreateStickerSet | PlainMessage<TLStickersCreateStickerSet> | undefined, b: TLStickersCreateStickerSet | PlainMessage<TLStickersCreateStickerSet> | undefined): boolean {
    return proto3.util.equals(TLStickersCreateStickerSet, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStickersRemoveStickerFromSet
 */
export class TLStickersRemoveStickerFromSet extends Message<TLStickersRemoveStickerFromSet> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDocument sticker = 3;
   */
  sticker: InputDocument[] = [];

  constructor(data?: PartialMessage<TLStickersRemoveStickerFromSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStickersRemoveStickerFromSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "sticker", kind: "message", T: InputDocument, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStickersRemoveStickerFromSet {
    return new TLStickersRemoveStickerFromSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStickersRemoveStickerFromSet {
    return new TLStickersRemoveStickerFromSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStickersRemoveStickerFromSet {
    return new TLStickersRemoveStickerFromSet().fromJsonString(jsonString, options);
  }

  static equals(a: TLStickersRemoveStickerFromSet | PlainMessage<TLStickersRemoveStickerFromSet> | undefined, b: TLStickersRemoveStickerFromSet | PlainMessage<TLStickersRemoveStickerFromSet> | undefined): boolean {
    return proto3.util.equals(TLStickersRemoveStickerFromSet, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStickersChangeStickerPosition
 */
export class TLStickersChangeStickerPosition extends Message<TLStickersChangeStickerPosition> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDocument sticker = 3;
   */
  sticker: InputDocument[] = [];

  /**
   * @generated from field: int32 position = 4;
   */
  position = 0;

  constructor(data?: PartialMessage<TLStickersChangeStickerPosition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStickersChangeStickerPosition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "sticker", kind: "message", T: InputDocument, repeated: true },
    { no: 4, name: "position", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStickersChangeStickerPosition {
    return new TLStickersChangeStickerPosition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStickersChangeStickerPosition {
    return new TLStickersChangeStickerPosition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStickersChangeStickerPosition {
    return new TLStickersChangeStickerPosition().fromJsonString(jsonString, options);
  }

  static equals(a: TLStickersChangeStickerPosition | PlainMessage<TLStickersChangeStickerPosition> | undefined, b: TLStickersChangeStickerPosition | PlainMessage<TLStickersChangeStickerPosition> | undefined): boolean {
    return proto3.util.equals(TLStickersChangeStickerPosition, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStickersAddStickerToSet
 */
export class TLStickersAddStickerToSet extends Message<TLStickersAddStickerToSet> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickerSet stickerset = 3;
   */
  stickerset: InputStickerSet[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickerSetItem sticker = 4;
   */
  sticker: InputStickerSetItem[] = [];

  constructor(data?: PartialMessage<TLStickersAddStickerToSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStickersAddStickerToSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "stickerset", kind: "message", T: InputStickerSet, repeated: true },
    { no: 4, name: "sticker", kind: "message", T: InputStickerSetItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStickersAddStickerToSet {
    return new TLStickersAddStickerToSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStickersAddStickerToSet {
    return new TLStickersAddStickerToSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStickersAddStickerToSet {
    return new TLStickersAddStickerToSet().fromJsonString(jsonString, options);
  }

  static equals(a: TLStickersAddStickerToSet | PlainMessage<TLStickersAddStickerToSet> | undefined, b: TLStickersAddStickerToSet | PlainMessage<TLStickersAddStickerToSet> | undefined): boolean {
    return proto3.util.equals(TLStickersAddStickerToSet, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStickersSetStickerSetThumb
 */
export class TLStickersSetStickerSetThumb extends Message<TLStickersSetStickerSetThumb> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickerSet stickerset = 3;
   */
  stickerset: InputStickerSet[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDocument thumb = 4;
   */
  thumb: InputDocument[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int64Value thumb_document_id = 5;
   */
  thumbDocumentId: Int64Value[] = [];

  constructor(data?: PartialMessage<TLStickersSetStickerSetThumb>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStickersSetStickerSetThumb";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "stickerset", kind: "message", T: InputStickerSet, repeated: true },
    { no: 4, name: "thumb", kind: "message", T: InputDocument, repeated: true },
    { no: 5, name: "thumb_document_id", kind: "message", T: Int64Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStickersSetStickerSetThumb {
    return new TLStickersSetStickerSetThumb().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStickersSetStickerSetThumb {
    return new TLStickersSetStickerSetThumb().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStickersSetStickerSetThumb {
    return new TLStickersSetStickerSetThumb().fromJsonString(jsonString, options);
  }

  static equals(a: TLStickersSetStickerSetThumb | PlainMessage<TLStickersSetStickerSetThumb> | undefined, b: TLStickersSetStickerSetThumb | PlainMessage<TLStickersSetStickerSetThumb> | undefined): boolean {
    return proto3.util.equals(TLStickersSetStickerSetThumb, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStickersCheckShortName
 */
export class TLStickersCheckShortName extends Message<TLStickersCheckShortName> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string short_name = 3;
   */
  shortName = "";

  constructor(data?: PartialMessage<TLStickersCheckShortName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStickersCheckShortName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "short_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStickersCheckShortName {
    return new TLStickersCheckShortName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStickersCheckShortName {
    return new TLStickersCheckShortName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStickersCheckShortName {
    return new TLStickersCheckShortName().fromJsonString(jsonString, options);
  }

  static equals(a: TLStickersCheckShortName | PlainMessage<TLStickersCheckShortName> | undefined, b: TLStickersCheckShortName | PlainMessage<TLStickersCheckShortName> | undefined): boolean {
    return proto3.util.equals(TLStickersCheckShortName, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStickersSuggestShortName
 */
export class TLStickersSuggestShortName extends Message<TLStickersSuggestShortName> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string title = 3;
   */
  title = "";

  constructor(data?: PartialMessage<TLStickersSuggestShortName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStickersSuggestShortName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStickersSuggestShortName {
    return new TLStickersSuggestShortName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStickersSuggestShortName {
    return new TLStickersSuggestShortName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStickersSuggestShortName {
    return new TLStickersSuggestShortName().fromJsonString(jsonString, options);
  }

  static equals(a: TLStickersSuggestShortName | PlainMessage<TLStickersSuggestShortName> | undefined, b: TLStickersSuggestShortName | PlainMessage<TLStickersSuggestShortName> | undefined): boolean {
    return proto3.util.equals(TLStickersSuggestShortName, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStickersChangeSticker
 */
export class TLStickersChangeSticker extends Message<TLStickersChangeSticker> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputDocument sticker = 3;
   */
  sticker: InputDocument[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue emoji = 4;
   */
  emoji: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MaskCoords mask_coords = 5;
   */
  maskCoords: MaskCoords[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue keywords = 6;
   */
  keywords: StringValue[] = [];

  constructor(data?: PartialMessage<TLStickersChangeSticker>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStickersChangeSticker";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "sticker", kind: "message", T: InputDocument, repeated: true },
    { no: 4, name: "emoji", kind: "message", T: StringValue, repeated: true },
    { no: 5, name: "mask_coords", kind: "message", T: MaskCoords, repeated: true },
    { no: 6, name: "keywords", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStickersChangeSticker {
    return new TLStickersChangeSticker().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStickersChangeSticker {
    return new TLStickersChangeSticker().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStickersChangeSticker {
    return new TLStickersChangeSticker().fromJsonString(jsonString, options);
  }

  static equals(a: TLStickersChangeSticker | PlainMessage<TLStickersChangeSticker> | undefined, b: TLStickersChangeSticker | PlainMessage<TLStickersChangeSticker> | undefined): boolean {
    return proto3.util.equals(TLStickersChangeSticker, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStickersRenameStickerSet
 */
export class TLStickersRenameStickerSet extends Message<TLStickersRenameStickerSet> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickerSet stickerset = 3;
   */
  stickerset: InputStickerSet[] = [];

  /**
   * @generated from field: string title = 4;
   */
  title = "";

  constructor(data?: PartialMessage<TLStickersRenameStickerSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStickersRenameStickerSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "stickerset", kind: "message", T: InputStickerSet, repeated: true },
    { no: 4, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStickersRenameStickerSet {
    return new TLStickersRenameStickerSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStickersRenameStickerSet {
    return new TLStickersRenameStickerSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStickersRenameStickerSet {
    return new TLStickersRenameStickerSet().fromJsonString(jsonString, options);
  }

  static equals(a: TLStickersRenameStickerSet | PlainMessage<TLStickersRenameStickerSet> | undefined, b: TLStickersRenameStickerSet | PlainMessage<TLStickersRenameStickerSet> | undefined): boolean {
    return proto3.util.equals(TLStickersRenameStickerSet, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStickersDeleteStickerSet
 */
export class TLStickersDeleteStickerSet extends Message<TLStickersDeleteStickerSet> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputStickerSet stickerset = 3;
   */
  stickerset: InputStickerSet[] = [];

  constructor(data?: PartialMessage<TLStickersDeleteStickerSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStickersDeleteStickerSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "stickerset", kind: "message", T: InputStickerSet, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStickersDeleteStickerSet {
    return new TLStickersDeleteStickerSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStickersDeleteStickerSet {
    return new TLStickersDeleteStickerSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStickersDeleteStickerSet {
    return new TLStickersDeleteStickerSet().fromJsonString(jsonString, options);
  }

  static equals(a: TLStickersDeleteStickerSet | PlainMessage<TLStickersDeleteStickerSet> | undefined, b: TLStickersDeleteStickerSet | PlainMessage<TLStickersDeleteStickerSet> | undefined): boolean {
    return proto3.util.equals(TLStickersDeleteStickerSet, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetCallConfig
 */
export class TLPhoneGetCallConfig extends Message<TLPhoneGetCallConfig> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLPhoneGetCallConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetCallConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneGetCallConfig {
    return new TLPhoneGetCallConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneGetCallConfig {
    return new TLPhoneGetCallConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneGetCallConfig {
    return new TLPhoneGetCallConfig().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneGetCallConfig | PlainMessage<TLPhoneGetCallConfig> | undefined, b: TLPhoneGetCallConfig | PlainMessage<TLPhoneGetCallConfig> | undefined): boolean {
    return proto3.util.equals(TLPhoneGetCallConfig, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneRequestCall
 */
export class TLPhoneRequestCall extends Message<TLPhoneRequestCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool video = 3;
   */
  video = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 4;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: int32 random_id = 5;
   */
  randomId = 0;

  /**
   * @generated from field: bytes g_a_hash = 6;
   */
  gAHash = new Uint8Array(0);

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.PhoneCallProtocol protocol = 7;
   */
  protocol: PhoneCallProtocol[] = [];

  constructor(data?: PartialMessage<TLPhoneRequestCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneRequestCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "video", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 5, name: "random_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "g_a_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "protocol", kind: "message", T: PhoneCallProtocol, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneRequestCall {
    return new TLPhoneRequestCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneRequestCall {
    return new TLPhoneRequestCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneRequestCall {
    return new TLPhoneRequestCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneRequestCall | PlainMessage<TLPhoneRequestCall> | undefined, b: TLPhoneRequestCall | PlainMessage<TLPhoneRequestCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneRequestCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneAcceptCall
 */
export class TLPhoneAcceptCall extends Message<TLPhoneAcceptCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPhoneCall peer = 3;
   */
  peer: InputPhoneCall[] = [];

  /**
   * @generated from field: bytes g_b = 4;
   */
  gB = new Uint8Array(0);

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.PhoneCallProtocol protocol = 5;
   */
  protocol: PhoneCallProtocol[] = [];

  constructor(data?: PartialMessage<TLPhoneAcceptCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneAcceptCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPhoneCall, repeated: true },
    { no: 4, name: "g_b", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "protocol", kind: "message", T: PhoneCallProtocol, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneAcceptCall {
    return new TLPhoneAcceptCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneAcceptCall {
    return new TLPhoneAcceptCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneAcceptCall {
    return new TLPhoneAcceptCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneAcceptCall | PlainMessage<TLPhoneAcceptCall> | undefined, b: TLPhoneAcceptCall | PlainMessage<TLPhoneAcceptCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneAcceptCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneConfirmCall
 */
export class TLPhoneConfirmCall extends Message<TLPhoneConfirmCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPhoneCall peer = 3;
   */
  peer: InputPhoneCall[] = [];

  /**
   * @generated from field: bytes g_a = 4;
   */
  gA = new Uint8Array(0);

  /**
   * @generated from field: int64 key_fingerprint = 5;
   */
  keyFingerprint = protoInt64.zero;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.PhoneCallProtocol protocol = 6;
   */
  protocol: PhoneCallProtocol[] = [];

  constructor(data?: PartialMessage<TLPhoneConfirmCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneConfirmCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPhoneCall, repeated: true },
    { no: 4, name: "g_a", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "key_fingerprint", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "protocol", kind: "message", T: PhoneCallProtocol, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneConfirmCall {
    return new TLPhoneConfirmCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneConfirmCall {
    return new TLPhoneConfirmCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneConfirmCall {
    return new TLPhoneConfirmCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneConfirmCall | PlainMessage<TLPhoneConfirmCall> | undefined, b: TLPhoneConfirmCall | PlainMessage<TLPhoneConfirmCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneConfirmCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneReceivedCall
 */
export class TLPhoneReceivedCall extends Message<TLPhoneReceivedCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPhoneCall peer = 3;
   */
  peer: InputPhoneCall[] = [];

  constructor(data?: PartialMessage<TLPhoneReceivedCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneReceivedCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPhoneCall, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneReceivedCall {
    return new TLPhoneReceivedCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneReceivedCall {
    return new TLPhoneReceivedCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneReceivedCall {
    return new TLPhoneReceivedCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneReceivedCall | PlainMessage<TLPhoneReceivedCall> | undefined, b: TLPhoneReceivedCall | PlainMessage<TLPhoneReceivedCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneReceivedCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneDiscardCall
 */
export class TLPhoneDiscardCall extends Message<TLPhoneDiscardCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool video = 3;
   */
  video = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPhoneCall peer = 4;
   */
  peer: InputPhoneCall[] = [];

  /**
   * @generated from field: int32 duration = 5;
   */
  duration = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.PhoneCallDiscardReason reason = 6;
   */
  reason: PhoneCallDiscardReason[] = [];

  /**
   * @generated from field: int64 connection_id = 7;
   */
  connectionId = protoInt64.zero;

  constructor(data?: PartialMessage<TLPhoneDiscardCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneDiscardCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "video", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPhoneCall, repeated: true },
    { no: 5, name: "duration", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "reason", kind: "message", T: PhoneCallDiscardReason, repeated: true },
    { no: 7, name: "connection_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneDiscardCall {
    return new TLPhoneDiscardCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneDiscardCall {
    return new TLPhoneDiscardCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneDiscardCall {
    return new TLPhoneDiscardCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneDiscardCall | PlainMessage<TLPhoneDiscardCall> | undefined, b: TLPhoneDiscardCall | PlainMessage<TLPhoneDiscardCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneDiscardCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneSetCallRating
 */
export class TLPhoneSetCallRating extends Message<TLPhoneSetCallRating> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool user_initiative = 3;
   */
  userInitiative = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPhoneCall peer = 4;
   */
  peer: InputPhoneCall[] = [];

  /**
   * @generated from field: int32 rating = 5;
   */
  rating = 0;

  /**
   * @generated from field: string comment = 6;
   */
  comment = "";

  constructor(data?: PartialMessage<TLPhoneSetCallRating>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneSetCallRating";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "user_initiative", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPhoneCall, repeated: true },
    { no: 5, name: "rating", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneSetCallRating {
    return new TLPhoneSetCallRating().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneSetCallRating {
    return new TLPhoneSetCallRating().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneSetCallRating {
    return new TLPhoneSetCallRating().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneSetCallRating | PlainMessage<TLPhoneSetCallRating> | undefined, b: TLPhoneSetCallRating | PlainMessage<TLPhoneSetCallRating> | undefined): boolean {
    return proto3.util.equals(TLPhoneSetCallRating, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneSaveCallDebug
 */
export class TLPhoneSaveCallDebug extends Message<TLPhoneSaveCallDebug> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPhoneCall peer = 3;
   */
  peer: InputPhoneCall[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON debug = 4;
   */
  debug: DataJSON[] = [];

  constructor(data?: PartialMessage<TLPhoneSaveCallDebug>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneSaveCallDebug";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPhoneCall, repeated: true },
    { no: 4, name: "debug", kind: "message", T: DataJSON, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneSaveCallDebug {
    return new TLPhoneSaveCallDebug().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneSaveCallDebug {
    return new TLPhoneSaveCallDebug().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneSaveCallDebug {
    return new TLPhoneSaveCallDebug().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneSaveCallDebug | PlainMessage<TLPhoneSaveCallDebug> | undefined, b: TLPhoneSaveCallDebug | PlainMessage<TLPhoneSaveCallDebug> | undefined): boolean {
    return proto3.util.equals(TLPhoneSaveCallDebug, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneSendSignalingData
 */
export class TLPhoneSendSignalingData extends Message<TLPhoneSendSignalingData> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPhoneCall peer = 3;
   */
  peer: InputPhoneCall[] = [];

  /**
   * @generated from field: bytes data = 4;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<TLPhoneSendSignalingData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneSendSignalingData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPhoneCall, repeated: true },
    { no: 4, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneSendSignalingData {
    return new TLPhoneSendSignalingData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneSendSignalingData {
    return new TLPhoneSendSignalingData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneSendSignalingData {
    return new TLPhoneSendSignalingData().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneSendSignalingData | PlainMessage<TLPhoneSendSignalingData> | undefined, b: TLPhoneSendSignalingData | PlainMessage<TLPhoneSendSignalingData> | undefined): boolean {
    return proto3.util.equals(TLPhoneSendSignalingData, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneCreateGroupCall
 */
export class TLPhoneCreateGroupCall extends Message<TLPhoneCreateGroupCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool rtmp_stream = 3;
   */
  rtmpStream = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 random_id = 5;
   */
  randomId = 0;

  /**
   * @generated from field: repeated google.protobuf.StringValue title = 6;
   */
  title: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value schedule_date = 7;
   */
  scheduleDate: Int32Value[] = [];

  constructor(data?: PartialMessage<TLPhoneCreateGroupCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneCreateGroupCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "rtmp_stream", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "random_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "title", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "schedule_date", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneCreateGroupCall {
    return new TLPhoneCreateGroupCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneCreateGroupCall {
    return new TLPhoneCreateGroupCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneCreateGroupCall {
    return new TLPhoneCreateGroupCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneCreateGroupCall | PlainMessage<TLPhoneCreateGroupCall> | undefined, b: TLPhoneCreateGroupCall | PlainMessage<TLPhoneCreateGroupCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneCreateGroupCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneJoinGroupCall
 */
export class TLPhoneJoinGroupCall extends Message<TLPhoneJoinGroupCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool muted = 3;
   */
  muted = false;

  /**
   * @generated from field: bool video_stopped = 4;
   */
  videoStopped = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 5;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer join_as = 6;
   */
  joinAs: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue invite_hash = 7;
   */
  inviteHash: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON params = 8;
   */
  params: DataJSON[] = [];

  constructor(data?: PartialMessage<TLPhoneJoinGroupCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneJoinGroupCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "muted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "video_stopped", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 6, name: "join_as", kind: "message", T: InputPeer, repeated: true },
    { no: 7, name: "invite_hash", kind: "message", T: StringValue, repeated: true },
    { no: 8, name: "params", kind: "message", T: DataJSON, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneJoinGroupCall {
    return new TLPhoneJoinGroupCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneJoinGroupCall {
    return new TLPhoneJoinGroupCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneJoinGroupCall {
    return new TLPhoneJoinGroupCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneJoinGroupCall | PlainMessage<TLPhoneJoinGroupCall> | undefined, b: TLPhoneJoinGroupCall | PlainMessage<TLPhoneJoinGroupCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneJoinGroupCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneLeaveGroupCall
 */
export class TLPhoneLeaveGroupCall extends Message<TLPhoneLeaveGroupCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: int32 source = 4;
   */
  source = 0;

  constructor(data?: PartialMessage<TLPhoneLeaveGroupCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneLeaveGroupCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 4, name: "source", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneLeaveGroupCall {
    return new TLPhoneLeaveGroupCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneLeaveGroupCall {
    return new TLPhoneLeaveGroupCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneLeaveGroupCall {
    return new TLPhoneLeaveGroupCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneLeaveGroupCall | PlainMessage<TLPhoneLeaveGroupCall> | undefined, b: TLPhoneLeaveGroupCall | PlainMessage<TLPhoneLeaveGroupCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneLeaveGroupCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneInviteToGroupCall
 */
export class TLPhoneInviteToGroupCall extends Message<TLPhoneInviteToGroupCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser users = 4;
   */
  users: InputUser[] = [];

  constructor(data?: PartialMessage<TLPhoneInviteToGroupCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneInviteToGroupCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 4, name: "users", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneInviteToGroupCall {
    return new TLPhoneInviteToGroupCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneInviteToGroupCall {
    return new TLPhoneInviteToGroupCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneInviteToGroupCall {
    return new TLPhoneInviteToGroupCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneInviteToGroupCall | PlainMessage<TLPhoneInviteToGroupCall> | undefined, b: TLPhoneInviteToGroupCall | PlainMessage<TLPhoneInviteToGroupCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneInviteToGroupCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneDiscardGroupCall
 */
export class TLPhoneDiscardGroupCall extends Message<TLPhoneDiscardGroupCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  constructor(data?: PartialMessage<TLPhoneDiscardGroupCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneDiscardGroupCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneDiscardGroupCall {
    return new TLPhoneDiscardGroupCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneDiscardGroupCall {
    return new TLPhoneDiscardGroupCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneDiscardGroupCall {
    return new TLPhoneDiscardGroupCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneDiscardGroupCall | PlainMessage<TLPhoneDiscardGroupCall> | undefined, b: TLPhoneDiscardGroupCall | PlainMessage<TLPhoneDiscardGroupCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneDiscardGroupCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneToggleGroupCallSettings
 */
export class TLPhoneToggleGroupCallSettings extends Message<TLPhoneToggleGroupCallSettings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool reset_invite_hash = 3;
   */
  resetInviteHash = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 4;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool join_muted = 5;
   */
  joinMuted: Bool[] = [];

  constructor(data?: PartialMessage<TLPhoneToggleGroupCallSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneToggleGroupCallSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "reset_invite_hash", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 5, name: "join_muted", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneToggleGroupCallSettings {
    return new TLPhoneToggleGroupCallSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneToggleGroupCallSettings {
    return new TLPhoneToggleGroupCallSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneToggleGroupCallSettings {
    return new TLPhoneToggleGroupCallSettings().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneToggleGroupCallSettings | PlainMessage<TLPhoneToggleGroupCallSettings> | undefined, b: TLPhoneToggleGroupCallSettings | PlainMessage<TLPhoneToggleGroupCallSettings> | undefined): boolean {
    return proto3.util.equals(TLPhoneToggleGroupCallSettings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetGroupCall
 */
export class TLPhoneGetGroupCall extends Message<TLPhoneGetGroupCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLPhoneGetGroupCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetGroupCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneGetGroupCall {
    return new TLPhoneGetGroupCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneGetGroupCall {
    return new TLPhoneGetGroupCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneGetGroupCall {
    return new TLPhoneGetGroupCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneGetGroupCall | PlainMessage<TLPhoneGetGroupCall> | undefined, b: TLPhoneGetGroupCall | PlainMessage<TLPhoneGetGroupCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneGetGroupCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetGroupParticipants
 */
export class TLPhoneGetGroupParticipants extends Message<TLPhoneGetGroupParticipants> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer ids = 4;
   */
  ids: InputPeer[] = [];

  /**
   * @generated from field: int32 sources = 5;
   */
  sources = 0;

  /**
   * @generated from field: string offset = 6;
   */
  offset = "";

  /**
   * @generated from field: int32 limit = 7;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLPhoneGetGroupParticipants>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetGroupParticipants";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 4, name: "ids", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "sources", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "offset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneGetGroupParticipants {
    return new TLPhoneGetGroupParticipants().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneGetGroupParticipants {
    return new TLPhoneGetGroupParticipants().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneGetGroupParticipants {
    return new TLPhoneGetGroupParticipants().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneGetGroupParticipants | PlainMessage<TLPhoneGetGroupParticipants> | undefined, b: TLPhoneGetGroupParticipants | PlainMessage<TLPhoneGetGroupParticipants> | undefined): boolean {
    return proto3.util.equals(TLPhoneGetGroupParticipants, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneCheckGroupCall
 */
export class TLPhoneCheckGroupCall extends Message<TLPhoneCheckGroupCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: int32 sources = 4;
   */
  sources = 0;

  constructor(data?: PartialMessage<TLPhoneCheckGroupCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneCheckGroupCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 4, name: "sources", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneCheckGroupCall {
    return new TLPhoneCheckGroupCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneCheckGroupCall {
    return new TLPhoneCheckGroupCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneCheckGroupCall {
    return new TLPhoneCheckGroupCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneCheckGroupCall | PlainMessage<TLPhoneCheckGroupCall> | undefined, b: TLPhoneCheckGroupCall | PlainMessage<TLPhoneCheckGroupCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneCheckGroupCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneToggleGroupCallRecord
 */
export class TLPhoneToggleGroupCallRecord extends Message<TLPhoneToggleGroupCallRecord> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool start = 3;
   */
  start = false;

  /**
   * @generated from field: bool video = 4;
   */
  video = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 5;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue title = 6;
   */
  title: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool video_portrait = 7;
   */
  videoPortrait: Bool[] = [];

  constructor(data?: PartialMessage<TLPhoneToggleGroupCallRecord>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneToggleGroupCallRecord";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "start", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "video", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 6, name: "title", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "video_portrait", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneToggleGroupCallRecord {
    return new TLPhoneToggleGroupCallRecord().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneToggleGroupCallRecord {
    return new TLPhoneToggleGroupCallRecord().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneToggleGroupCallRecord {
    return new TLPhoneToggleGroupCallRecord().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneToggleGroupCallRecord | PlainMessage<TLPhoneToggleGroupCallRecord> | undefined, b: TLPhoneToggleGroupCallRecord | PlainMessage<TLPhoneToggleGroupCallRecord> | undefined): boolean {
    return proto3.util.equals(TLPhoneToggleGroupCallRecord, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneEditGroupCallParticipant
 */
export class TLPhoneEditGroupCallParticipant extends Message<TLPhoneEditGroupCallParticipant> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer participant = 4;
   */
  participant: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool muted = 5;
   */
  muted: Bool[] = [];

  /**
   * @generated from field: repeated google.protobuf.Int32Value volume = 6;
   */
  volume: Int32Value[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool raise_hand = 7;
   */
  raiseHand: Bool[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool video_stopped = 8;
   */
  videoStopped: Bool[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool video_paused = 9;
   */
  videoPaused: Bool[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool presentation_paused = 10;
   */
  presentationPaused: Bool[] = [];

  constructor(data?: PartialMessage<TLPhoneEditGroupCallParticipant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneEditGroupCallParticipant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 4, name: "participant", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "muted", kind: "message", T: Bool, repeated: true },
    { no: 6, name: "volume", kind: "message", T: Int32Value, repeated: true },
    { no: 7, name: "raise_hand", kind: "message", T: Bool, repeated: true },
    { no: 8, name: "video_stopped", kind: "message", T: Bool, repeated: true },
    { no: 9, name: "video_paused", kind: "message", T: Bool, repeated: true },
    { no: 10, name: "presentation_paused", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneEditGroupCallParticipant {
    return new TLPhoneEditGroupCallParticipant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneEditGroupCallParticipant {
    return new TLPhoneEditGroupCallParticipant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneEditGroupCallParticipant {
    return new TLPhoneEditGroupCallParticipant().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneEditGroupCallParticipant | PlainMessage<TLPhoneEditGroupCallParticipant> | undefined, b: TLPhoneEditGroupCallParticipant | PlainMessage<TLPhoneEditGroupCallParticipant> | undefined): boolean {
    return proto3.util.equals(TLPhoneEditGroupCallParticipant, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneEditGroupCallTitle
 */
export class TLPhoneEditGroupCallTitle extends Message<TLPhoneEditGroupCallTitle> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: string title = 4;
   */
  title = "";

  constructor(data?: PartialMessage<TLPhoneEditGroupCallTitle>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneEditGroupCallTitle";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 4, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneEditGroupCallTitle {
    return new TLPhoneEditGroupCallTitle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneEditGroupCallTitle {
    return new TLPhoneEditGroupCallTitle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneEditGroupCallTitle {
    return new TLPhoneEditGroupCallTitle().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneEditGroupCallTitle | PlainMessage<TLPhoneEditGroupCallTitle> | undefined, b: TLPhoneEditGroupCallTitle | PlainMessage<TLPhoneEditGroupCallTitle> | undefined): boolean {
    return proto3.util.equals(TLPhoneEditGroupCallTitle, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetGroupCallJoinAs
 */
export class TLPhoneGetGroupCallJoinAs extends Message<TLPhoneGetGroupCallJoinAs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLPhoneGetGroupCallJoinAs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetGroupCallJoinAs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneGetGroupCallJoinAs {
    return new TLPhoneGetGroupCallJoinAs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneGetGroupCallJoinAs {
    return new TLPhoneGetGroupCallJoinAs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneGetGroupCallJoinAs {
    return new TLPhoneGetGroupCallJoinAs().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneGetGroupCallJoinAs | PlainMessage<TLPhoneGetGroupCallJoinAs> | undefined, b: TLPhoneGetGroupCallJoinAs | PlainMessage<TLPhoneGetGroupCallJoinAs> | undefined): boolean {
    return proto3.util.equals(TLPhoneGetGroupCallJoinAs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneExportGroupCallInvite
 */
export class TLPhoneExportGroupCallInvite extends Message<TLPhoneExportGroupCallInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool can_self_unmute = 3;
   */
  canSelfUnmute = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 4;
   */
  call: InputGroupCall[] = [];

  constructor(data?: PartialMessage<TLPhoneExportGroupCallInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneExportGroupCallInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "can_self_unmute", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "call", kind: "message", T: InputGroupCall, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneExportGroupCallInvite {
    return new TLPhoneExportGroupCallInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneExportGroupCallInvite {
    return new TLPhoneExportGroupCallInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneExportGroupCallInvite {
    return new TLPhoneExportGroupCallInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneExportGroupCallInvite | PlainMessage<TLPhoneExportGroupCallInvite> | undefined, b: TLPhoneExportGroupCallInvite | PlainMessage<TLPhoneExportGroupCallInvite> | undefined): boolean {
    return proto3.util.equals(TLPhoneExportGroupCallInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneToggleGroupCallStartSubscription
 */
export class TLPhoneToggleGroupCallStartSubscription extends Message<TLPhoneToggleGroupCallStartSubscription> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool subscribed = 4;
   */
  subscribed: Bool[] = [];

  constructor(data?: PartialMessage<TLPhoneToggleGroupCallStartSubscription>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneToggleGroupCallStartSubscription";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 4, name: "subscribed", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneToggleGroupCallStartSubscription {
    return new TLPhoneToggleGroupCallStartSubscription().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneToggleGroupCallStartSubscription {
    return new TLPhoneToggleGroupCallStartSubscription().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneToggleGroupCallStartSubscription {
    return new TLPhoneToggleGroupCallStartSubscription().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneToggleGroupCallStartSubscription | PlainMessage<TLPhoneToggleGroupCallStartSubscription> | undefined, b: TLPhoneToggleGroupCallStartSubscription | PlainMessage<TLPhoneToggleGroupCallStartSubscription> | undefined): boolean {
    return proto3.util.equals(TLPhoneToggleGroupCallStartSubscription, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneStartScheduledGroupCall
 */
export class TLPhoneStartScheduledGroupCall extends Message<TLPhoneStartScheduledGroupCall> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  constructor(data?: PartialMessage<TLPhoneStartScheduledGroupCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneStartScheduledGroupCall";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneStartScheduledGroupCall {
    return new TLPhoneStartScheduledGroupCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneStartScheduledGroupCall {
    return new TLPhoneStartScheduledGroupCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneStartScheduledGroupCall {
    return new TLPhoneStartScheduledGroupCall().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneStartScheduledGroupCall | PlainMessage<TLPhoneStartScheduledGroupCall> | undefined, b: TLPhoneStartScheduledGroupCall | PlainMessage<TLPhoneStartScheduledGroupCall> | undefined): boolean {
    return proto3.util.equals(TLPhoneStartScheduledGroupCall, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneSaveDefaultGroupCallJoinAs
 */
export class TLPhoneSaveDefaultGroupCallJoinAs extends Message<TLPhoneSaveDefaultGroupCallJoinAs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer join_as = 4;
   */
  joinAs: InputPeer[] = [];

  constructor(data?: PartialMessage<TLPhoneSaveDefaultGroupCallJoinAs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneSaveDefaultGroupCallJoinAs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "join_as", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneSaveDefaultGroupCallJoinAs {
    return new TLPhoneSaveDefaultGroupCallJoinAs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneSaveDefaultGroupCallJoinAs {
    return new TLPhoneSaveDefaultGroupCallJoinAs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneSaveDefaultGroupCallJoinAs {
    return new TLPhoneSaveDefaultGroupCallJoinAs().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneSaveDefaultGroupCallJoinAs | PlainMessage<TLPhoneSaveDefaultGroupCallJoinAs> | undefined, b: TLPhoneSaveDefaultGroupCallJoinAs | PlainMessage<TLPhoneSaveDefaultGroupCallJoinAs> | undefined): boolean {
    return proto3.util.equals(TLPhoneSaveDefaultGroupCallJoinAs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneJoinGroupCallPresentation
 */
export class TLPhoneJoinGroupCallPresentation extends Message<TLPhoneJoinGroupCallPresentation> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DataJSON params = 4;
   */
  params: DataJSON[] = [];

  constructor(data?: PartialMessage<TLPhoneJoinGroupCallPresentation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneJoinGroupCallPresentation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
    { no: 4, name: "params", kind: "message", T: DataJSON, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneJoinGroupCallPresentation {
    return new TLPhoneJoinGroupCallPresentation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneJoinGroupCallPresentation {
    return new TLPhoneJoinGroupCallPresentation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneJoinGroupCallPresentation {
    return new TLPhoneJoinGroupCallPresentation().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneJoinGroupCallPresentation | PlainMessage<TLPhoneJoinGroupCallPresentation> | undefined, b: TLPhoneJoinGroupCallPresentation | PlainMessage<TLPhoneJoinGroupCallPresentation> | undefined): boolean {
    return proto3.util.equals(TLPhoneJoinGroupCallPresentation, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneLeaveGroupCallPresentation
 */
export class TLPhoneLeaveGroupCallPresentation extends Message<TLPhoneLeaveGroupCallPresentation> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  constructor(data?: PartialMessage<TLPhoneLeaveGroupCallPresentation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneLeaveGroupCallPresentation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneLeaveGroupCallPresentation {
    return new TLPhoneLeaveGroupCallPresentation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneLeaveGroupCallPresentation {
    return new TLPhoneLeaveGroupCallPresentation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneLeaveGroupCallPresentation {
    return new TLPhoneLeaveGroupCallPresentation().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneLeaveGroupCallPresentation | PlainMessage<TLPhoneLeaveGroupCallPresentation> | undefined, b: TLPhoneLeaveGroupCallPresentation | PlainMessage<TLPhoneLeaveGroupCallPresentation> | undefined): boolean {
    return proto3.util.equals(TLPhoneLeaveGroupCallPresentation, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetGroupCallStreamChannels
 */
export class TLPhoneGetGroupCallStreamChannels extends Message<TLPhoneGetGroupCallStreamChannels> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputGroupCall call = 3;
   */
  call: InputGroupCall[] = [];

  constructor(data?: PartialMessage<TLPhoneGetGroupCallStreamChannels>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetGroupCallStreamChannels";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "call", kind: "message", T: InputGroupCall, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneGetGroupCallStreamChannels {
    return new TLPhoneGetGroupCallStreamChannels().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneGetGroupCallStreamChannels {
    return new TLPhoneGetGroupCallStreamChannels().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneGetGroupCallStreamChannels {
    return new TLPhoneGetGroupCallStreamChannels().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneGetGroupCallStreamChannels | PlainMessage<TLPhoneGetGroupCallStreamChannels> | undefined, b: TLPhoneGetGroupCallStreamChannels | PlainMessage<TLPhoneGetGroupCallStreamChannels> | undefined): boolean {
    return proto3.util.equals(TLPhoneGetGroupCallStreamChannels, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetGroupCallStreamRtmpUrl
 */
export class TLPhoneGetGroupCallStreamRtmpUrl extends Message<TLPhoneGetGroupCallStreamRtmpUrl> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool revoke = 4;
   */
  revoke: Bool[] = [];

  constructor(data?: PartialMessage<TLPhoneGetGroupCallStreamRtmpUrl>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneGetGroupCallStreamRtmpUrl";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "revoke", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneGetGroupCallStreamRtmpUrl {
    return new TLPhoneGetGroupCallStreamRtmpUrl().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneGetGroupCallStreamRtmpUrl {
    return new TLPhoneGetGroupCallStreamRtmpUrl().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneGetGroupCallStreamRtmpUrl {
    return new TLPhoneGetGroupCallStreamRtmpUrl().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneGetGroupCallStreamRtmpUrl | PlainMessage<TLPhoneGetGroupCallStreamRtmpUrl> | undefined, b: TLPhoneGetGroupCallStreamRtmpUrl | PlainMessage<TLPhoneGetGroupCallStreamRtmpUrl> | undefined): boolean {
    return proto3.util.equals(TLPhoneGetGroupCallStreamRtmpUrl, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPhoneSaveCallLog
 */
export class TLPhoneSaveCallLog extends Message<TLPhoneSaveCallLog> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPhoneCall peer = 3;
   */
  peer: InputPhoneCall[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFile file = 4;
   */
  file: InputFile[] = [];

  constructor(data?: PartialMessage<TLPhoneSaveCallLog>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPhoneSaveCallLog";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPhoneCall, repeated: true },
    { no: 4, name: "file", kind: "message", T: InputFile, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPhoneSaveCallLog {
    return new TLPhoneSaveCallLog().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPhoneSaveCallLog {
    return new TLPhoneSaveCallLog().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPhoneSaveCallLog {
    return new TLPhoneSaveCallLog().fromJsonString(jsonString, options);
  }

  static equals(a: TLPhoneSaveCallLog | PlainMessage<TLPhoneSaveCallLog> | undefined, b: TLPhoneSaveCallLog | PlainMessage<TLPhoneSaveCallLog> | undefined): boolean {
    return proto3.util.equals(TLPhoneSaveCallLog, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLLangpackGetLangPack
 */
export class TLLangpackGetLangPack extends Message<TLLangpackGetLangPack> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string lang_pack = 3;
   */
  langPack = "";

  /**
   * @generated from field: string lang_code = 4;
   */
  langCode = "";

  constructor(data?: PartialMessage<TLLangpackGetLangPack>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLLangpackGetLangPack";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "lang_pack", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLLangpackGetLangPack {
    return new TLLangpackGetLangPack().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLLangpackGetLangPack {
    return new TLLangpackGetLangPack().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLLangpackGetLangPack {
    return new TLLangpackGetLangPack().fromJsonString(jsonString, options);
  }

  static equals(a: TLLangpackGetLangPack | PlainMessage<TLLangpackGetLangPack> | undefined, b: TLLangpackGetLangPack | PlainMessage<TLLangpackGetLangPack> | undefined): boolean {
    return proto3.util.equals(TLLangpackGetLangPack, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLLangpackGetStrings
 */
export class TLLangpackGetStrings extends Message<TLLangpackGetStrings> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string lang_pack = 3;
   */
  langPack = "";

  /**
   * @generated from field: string lang_code = 4;
   */
  langCode = "";

  /**
   * @generated from field: string keys = 5;
   */
  keys = "";

  constructor(data?: PartialMessage<TLLangpackGetStrings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLLangpackGetStrings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "lang_pack", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "keys", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLLangpackGetStrings {
    return new TLLangpackGetStrings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLLangpackGetStrings {
    return new TLLangpackGetStrings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLLangpackGetStrings {
    return new TLLangpackGetStrings().fromJsonString(jsonString, options);
  }

  static equals(a: TLLangpackGetStrings | PlainMessage<TLLangpackGetStrings> | undefined, b: TLLangpackGetStrings | PlainMessage<TLLangpackGetStrings> | undefined): boolean {
    return proto3.util.equals(TLLangpackGetStrings, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLLangpackGetDifference
 */
export class TLLangpackGetDifference extends Message<TLLangpackGetDifference> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string lang_pack = 3;
   */
  langPack = "";

  /**
   * @generated from field: string lang_code = 4;
   */
  langCode = "";

  /**
   * @generated from field: int32 from_version = 5;
   */
  fromVersion = 0;

  constructor(data?: PartialMessage<TLLangpackGetDifference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLLangpackGetDifference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "lang_pack", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "from_version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLLangpackGetDifference {
    return new TLLangpackGetDifference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLLangpackGetDifference {
    return new TLLangpackGetDifference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLLangpackGetDifference {
    return new TLLangpackGetDifference().fromJsonString(jsonString, options);
  }

  static equals(a: TLLangpackGetDifference | PlainMessage<TLLangpackGetDifference> | undefined, b: TLLangpackGetDifference | PlainMessage<TLLangpackGetDifference> | undefined): boolean {
    return proto3.util.equals(TLLangpackGetDifference, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLLangpackGetLanguages
 */
export class TLLangpackGetLanguages extends Message<TLLangpackGetLanguages> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string lang_pack = 3;
   */
  langPack = "";

  constructor(data?: PartialMessage<TLLangpackGetLanguages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLLangpackGetLanguages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "lang_pack", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLLangpackGetLanguages {
    return new TLLangpackGetLanguages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLLangpackGetLanguages {
    return new TLLangpackGetLanguages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLLangpackGetLanguages {
    return new TLLangpackGetLanguages().fromJsonString(jsonString, options);
  }

  static equals(a: TLLangpackGetLanguages | PlainMessage<TLLangpackGetLanguages> | undefined, b: TLLangpackGetLanguages | PlainMessage<TLLangpackGetLanguages> | undefined): boolean {
    return proto3.util.equals(TLLangpackGetLanguages, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLLangpackGetLanguage
 */
export class TLLangpackGetLanguage extends Message<TLLangpackGetLanguage> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string lang_pack = 3;
   */
  langPack = "";

  /**
   * @generated from field: string lang_code = 4;
   */
  langCode = "";

  constructor(data?: PartialMessage<TLLangpackGetLanguage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLLangpackGetLanguage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "lang_pack", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLLangpackGetLanguage {
    return new TLLangpackGetLanguage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLLangpackGetLanguage {
    return new TLLangpackGetLanguage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLLangpackGetLanguage {
    return new TLLangpackGetLanguage().fromJsonString(jsonString, options);
  }

  static equals(a: TLLangpackGetLanguage | PlainMessage<TLLangpackGetLanguage> | undefined, b: TLLangpackGetLanguage | PlainMessage<TLLangpackGetLanguage> | undefined): boolean {
    return proto3.util.equals(TLLangpackGetLanguage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLFoldersEditPeerFolders
 */
export class TLFoldersEditPeerFolders extends Message<TLFoldersEditPeerFolders> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputFolderPeer folder_peers = 3;
   */
  folderPeers: InputFolderPeer[] = [];

  constructor(data?: PartialMessage<TLFoldersEditPeerFolders>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLFoldersEditPeerFolders";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "folder_peers", kind: "message", T: InputFolderPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLFoldersEditPeerFolders {
    return new TLFoldersEditPeerFolders().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLFoldersEditPeerFolders {
    return new TLFoldersEditPeerFolders().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLFoldersEditPeerFolders {
    return new TLFoldersEditPeerFolders().fromJsonString(jsonString, options);
  }

  static equals(a: TLFoldersEditPeerFolders | PlainMessage<TLFoldersEditPeerFolders> | undefined, b: TLFoldersEditPeerFolders | PlainMessage<TLFoldersEditPeerFolders> | undefined): boolean {
    return proto3.util.equals(TLFoldersEditPeerFolders, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStatsGetBroadcastStats
 */
export class TLStatsGetBroadcastStats extends Message<TLStatsGetBroadcastStats> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool dark = 3;
   */
  dark = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 4;
   */
  channel: InputChannel[] = [];

  constructor(data?: PartialMessage<TLStatsGetBroadcastStats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStatsGetBroadcastStats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "dark", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "channel", kind: "message", T: InputChannel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStatsGetBroadcastStats {
    return new TLStatsGetBroadcastStats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStatsGetBroadcastStats {
    return new TLStatsGetBroadcastStats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStatsGetBroadcastStats {
    return new TLStatsGetBroadcastStats().fromJsonString(jsonString, options);
  }

  static equals(a: TLStatsGetBroadcastStats | PlainMessage<TLStatsGetBroadcastStats> | undefined, b: TLStatsGetBroadcastStats | PlainMessage<TLStatsGetBroadcastStats> | undefined): boolean {
    return proto3.util.equals(TLStatsGetBroadcastStats, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStatsLoadAsyncGraph
 */
export class TLStatsLoadAsyncGraph extends Message<TLStatsLoadAsyncGraph> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string token = 3;
   */
  token = "";

  /**
   * @generated from field: repeated google.protobuf.Int64Value x = 4;
   */
  x: Int64Value[] = [];

  constructor(data?: PartialMessage<TLStatsLoadAsyncGraph>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStatsLoadAsyncGraph";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "x", kind: "message", T: Int64Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStatsLoadAsyncGraph {
    return new TLStatsLoadAsyncGraph().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStatsLoadAsyncGraph {
    return new TLStatsLoadAsyncGraph().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStatsLoadAsyncGraph {
    return new TLStatsLoadAsyncGraph().fromJsonString(jsonString, options);
  }

  static equals(a: TLStatsLoadAsyncGraph | PlainMessage<TLStatsLoadAsyncGraph> | undefined, b: TLStatsLoadAsyncGraph | PlainMessage<TLStatsLoadAsyncGraph> | undefined): boolean {
    return proto3.util.equals(TLStatsLoadAsyncGraph, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStatsGetMegagroupStats
 */
export class TLStatsGetMegagroupStats extends Message<TLStatsGetMegagroupStats> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool dark = 3;
   */
  dark = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 4;
   */
  channel: InputChannel[] = [];

  constructor(data?: PartialMessage<TLStatsGetMegagroupStats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStatsGetMegagroupStats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "dark", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "channel", kind: "message", T: InputChannel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStatsGetMegagroupStats {
    return new TLStatsGetMegagroupStats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStatsGetMegagroupStats {
    return new TLStatsGetMegagroupStats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStatsGetMegagroupStats {
    return new TLStatsGetMegagroupStats().fromJsonString(jsonString, options);
  }

  static equals(a: TLStatsGetMegagroupStats | PlainMessage<TLStatsGetMegagroupStats> | undefined, b: TLStatsGetMegagroupStats | PlainMessage<TLStatsGetMegagroupStats> | undefined): boolean {
    return proto3.util.equals(TLStatsGetMegagroupStats, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStatsGetMessagePublicForwards
 */
export class TLStatsGetMessagePublicForwards extends Message<TLStatsGetMessagePublicForwards> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  /**
   * @generated from field: int32 offset_rate = 5;
   */
  offsetRate = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer offset_peer = 6;
   */
  offsetPeer: InputPeer[] = [];

  /**
   * @generated from field: int32 offset_id = 7;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 limit = 8;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLStatsGetMessagePublicForwards>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStatsGetMessagePublicForwards";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "offset_rate", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "offset_peer", kind: "message", T: InputPeer, repeated: true },
    { no: 7, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStatsGetMessagePublicForwards {
    return new TLStatsGetMessagePublicForwards().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStatsGetMessagePublicForwards {
    return new TLStatsGetMessagePublicForwards().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStatsGetMessagePublicForwards {
    return new TLStatsGetMessagePublicForwards().fromJsonString(jsonString, options);
  }

  static equals(a: TLStatsGetMessagePublicForwards | PlainMessage<TLStatsGetMessagePublicForwards> | undefined, b: TLStatsGetMessagePublicForwards | PlainMessage<TLStatsGetMessagePublicForwards> | undefined): boolean {
    return proto3.util.equals(TLStatsGetMessagePublicForwards, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStatsGetMessageStats
 */
export class TLStatsGetMessageStats extends Message<TLStatsGetMessageStats> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool dark = 3;
   */
  dark = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 4;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 msg_id = 5;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLStatsGetMessageStats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStatsGetMessageStats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "dark", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 5, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStatsGetMessageStats {
    return new TLStatsGetMessageStats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStatsGetMessageStats {
    return new TLStatsGetMessageStats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStatsGetMessageStats {
    return new TLStatsGetMessageStats().fromJsonString(jsonString, options);
  }

  static equals(a: TLStatsGetMessageStats | PlainMessage<TLStatsGetMessageStats> | undefined, b: TLStatsGetMessageStats | PlainMessage<TLStatsGetMessageStats> | undefined): boolean {
    return proto3.util.equals(TLStatsGetMessageStats, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChatlistsExportChatlistInvite
 */
export class TLChatlistsExportChatlistInvite extends Message<TLChatlistsExportChatlistInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChatlist chatlist = 3;
   */
  chatlist: InputChatlist[] = [];

  /**
   * @generated from field: string title = 4;
   */
  title = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peers = 5;
   */
  peers: InputPeer[] = [];

  constructor(data?: PartialMessage<TLChatlistsExportChatlistInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChatlistsExportChatlistInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chatlist", kind: "message", T: InputChatlist, repeated: true },
    { no: 4, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "peers", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChatlistsExportChatlistInvite {
    return new TLChatlistsExportChatlistInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChatlistsExportChatlistInvite {
    return new TLChatlistsExportChatlistInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChatlistsExportChatlistInvite {
    return new TLChatlistsExportChatlistInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLChatlistsExportChatlistInvite | PlainMessage<TLChatlistsExportChatlistInvite> | undefined, b: TLChatlistsExportChatlistInvite | PlainMessage<TLChatlistsExportChatlistInvite> | undefined): boolean {
    return proto3.util.equals(TLChatlistsExportChatlistInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChatlistsDeleteExportedInvite
 */
export class TLChatlistsDeleteExportedInvite extends Message<TLChatlistsDeleteExportedInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChatlist chatlist = 3;
   */
  chatlist: InputChatlist[] = [];

  /**
   * @generated from field: string slug = 4;
   */
  slug = "";

  constructor(data?: PartialMessage<TLChatlistsDeleteExportedInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChatlistsDeleteExportedInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chatlist", kind: "message", T: InputChatlist, repeated: true },
    { no: 4, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChatlistsDeleteExportedInvite {
    return new TLChatlistsDeleteExportedInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChatlistsDeleteExportedInvite {
    return new TLChatlistsDeleteExportedInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChatlistsDeleteExportedInvite {
    return new TLChatlistsDeleteExportedInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLChatlistsDeleteExportedInvite | PlainMessage<TLChatlistsDeleteExportedInvite> | undefined, b: TLChatlistsDeleteExportedInvite | PlainMessage<TLChatlistsDeleteExportedInvite> | undefined): boolean {
    return proto3.util.equals(TLChatlistsDeleteExportedInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChatlistsEditExportedInvite
 */
export class TLChatlistsEditExportedInvite extends Message<TLChatlistsEditExportedInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChatlist chatlist = 3;
   */
  chatlist: InputChatlist[] = [];

  /**
   * @generated from field: string slug = 4;
   */
  slug = "";

  /**
   * @generated from field: repeated google.protobuf.StringValue title = 5;
   */
  title: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peers = 6;
   */
  peers: InputPeer[] = [];

  constructor(data?: PartialMessage<TLChatlistsEditExportedInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChatlistsEditExportedInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chatlist", kind: "message", T: InputChatlist, repeated: true },
    { no: 4, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "title", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "peers", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChatlistsEditExportedInvite {
    return new TLChatlistsEditExportedInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChatlistsEditExportedInvite {
    return new TLChatlistsEditExportedInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChatlistsEditExportedInvite {
    return new TLChatlistsEditExportedInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLChatlistsEditExportedInvite | PlainMessage<TLChatlistsEditExportedInvite> | undefined, b: TLChatlistsEditExportedInvite | PlainMessage<TLChatlistsEditExportedInvite> | undefined): boolean {
    return proto3.util.equals(TLChatlistsEditExportedInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChatlistsGetExportedInvites
 */
export class TLChatlistsGetExportedInvites extends Message<TLChatlistsGetExportedInvites> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChatlist chatlist = 3;
   */
  chatlist: InputChatlist[] = [];

  constructor(data?: PartialMessage<TLChatlistsGetExportedInvites>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChatlistsGetExportedInvites";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chatlist", kind: "message", T: InputChatlist, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChatlistsGetExportedInvites {
    return new TLChatlistsGetExportedInvites().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChatlistsGetExportedInvites {
    return new TLChatlistsGetExportedInvites().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChatlistsGetExportedInvites {
    return new TLChatlistsGetExportedInvites().fromJsonString(jsonString, options);
  }

  static equals(a: TLChatlistsGetExportedInvites | PlainMessage<TLChatlistsGetExportedInvites> | undefined, b: TLChatlistsGetExportedInvites | PlainMessage<TLChatlistsGetExportedInvites> | undefined): boolean {
    return proto3.util.equals(TLChatlistsGetExportedInvites, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChatlistsCheckChatlistInvite
 */
export class TLChatlistsCheckChatlistInvite extends Message<TLChatlistsCheckChatlistInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  constructor(data?: PartialMessage<TLChatlistsCheckChatlistInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChatlistsCheckChatlistInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChatlistsCheckChatlistInvite {
    return new TLChatlistsCheckChatlistInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChatlistsCheckChatlistInvite {
    return new TLChatlistsCheckChatlistInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChatlistsCheckChatlistInvite {
    return new TLChatlistsCheckChatlistInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLChatlistsCheckChatlistInvite | PlainMessage<TLChatlistsCheckChatlistInvite> | undefined, b: TLChatlistsCheckChatlistInvite | PlainMessage<TLChatlistsCheckChatlistInvite> | undefined): boolean {
    return proto3.util.equals(TLChatlistsCheckChatlistInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChatlistsJoinChatlistInvite
 */
export class TLChatlistsJoinChatlistInvite extends Message<TLChatlistsJoinChatlistInvite> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peers = 4;
   */
  peers: InputPeer[] = [];

  constructor(data?: PartialMessage<TLChatlistsJoinChatlistInvite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChatlistsJoinChatlistInvite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "peers", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChatlistsJoinChatlistInvite {
    return new TLChatlistsJoinChatlistInvite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChatlistsJoinChatlistInvite {
    return new TLChatlistsJoinChatlistInvite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChatlistsJoinChatlistInvite {
    return new TLChatlistsJoinChatlistInvite().fromJsonString(jsonString, options);
  }

  static equals(a: TLChatlistsJoinChatlistInvite | PlainMessage<TLChatlistsJoinChatlistInvite> | undefined, b: TLChatlistsJoinChatlistInvite | PlainMessage<TLChatlistsJoinChatlistInvite> | undefined): boolean {
    return proto3.util.equals(TLChatlistsJoinChatlistInvite, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChatlistsGetChatlistUpdates
 */
export class TLChatlistsGetChatlistUpdates extends Message<TLChatlistsGetChatlistUpdates> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChatlist chatlist = 3;
   */
  chatlist: InputChatlist[] = [];

  constructor(data?: PartialMessage<TLChatlistsGetChatlistUpdates>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChatlistsGetChatlistUpdates";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chatlist", kind: "message", T: InputChatlist, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChatlistsGetChatlistUpdates {
    return new TLChatlistsGetChatlistUpdates().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChatlistsGetChatlistUpdates {
    return new TLChatlistsGetChatlistUpdates().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChatlistsGetChatlistUpdates {
    return new TLChatlistsGetChatlistUpdates().fromJsonString(jsonString, options);
  }

  static equals(a: TLChatlistsGetChatlistUpdates | PlainMessage<TLChatlistsGetChatlistUpdates> | undefined, b: TLChatlistsGetChatlistUpdates | PlainMessage<TLChatlistsGetChatlistUpdates> | undefined): boolean {
    return proto3.util.equals(TLChatlistsGetChatlistUpdates, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChatlistsJoinChatlistUpdates
 */
export class TLChatlistsJoinChatlistUpdates extends Message<TLChatlistsJoinChatlistUpdates> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChatlist chatlist = 3;
   */
  chatlist: InputChatlist[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peers = 4;
   */
  peers: InputPeer[] = [];

  constructor(data?: PartialMessage<TLChatlistsJoinChatlistUpdates>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChatlistsJoinChatlistUpdates";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chatlist", kind: "message", T: InputChatlist, repeated: true },
    { no: 4, name: "peers", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChatlistsJoinChatlistUpdates {
    return new TLChatlistsJoinChatlistUpdates().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChatlistsJoinChatlistUpdates {
    return new TLChatlistsJoinChatlistUpdates().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChatlistsJoinChatlistUpdates {
    return new TLChatlistsJoinChatlistUpdates().fromJsonString(jsonString, options);
  }

  static equals(a: TLChatlistsJoinChatlistUpdates | PlainMessage<TLChatlistsJoinChatlistUpdates> | undefined, b: TLChatlistsJoinChatlistUpdates | PlainMessage<TLChatlistsJoinChatlistUpdates> | undefined): boolean {
    return proto3.util.equals(TLChatlistsJoinChatlistUpdates, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChatlistsHideChatlistUpdates
 */
export class TLChatlistsHideChatlistUpdates extends Message<TLChatlistsHideChatlistUpdates> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChatlist chatlist = 3;
   */
  chatlist: InputChatlist[] = [];

  constructor(data?: PartialMessage<TLChatlistsHideChatlistUpdates>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChatlistsHideChatlistUpdates";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chatlist", kind: "message", T: InputChatlist, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChatlistsHideChatlistUpdates {
    return new TLChatlistsHideChatlistUpdates().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChatlistsHideChatlistUpdates {
    return new TLChatlistsHideChatlistUpdates().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChatlistsHideChatlistUpdates {
    return new TLChatlistsHideChatlistUpdates().fromJsonString(jsonString, options);
  }

  static equals(a: TLChatlistsHideChatlistUpdates | PlainMessage<TLChatlistsHideChatlistUpdates> | undefined, b: TLChatlistsHideChatlistUpdates | PlainMessage<TLChatlistsHideChatlistUpdates> | undefined): boolean {
    return proto3.util.equals(TLChatlistsHideChatlistUpdates, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChatlistsGetLeaveChatlistSuggestions
 */
export class TLChatlistsGetLeaveChatlistSuggestions extends Message<TLChatlistsGetLeaveChatlistSuggestions> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChatlist chatlist = 3;
   */
  chatlist: InputChatlist[] = [];

  constructor(data?: PartialMessage<TLChatlistsGetLeaveChatlistSuggestions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChatlistsGetLeaveChatlistSuggestions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chatlist", kind: "message", T: InputChatlist, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChatlistsGetLeaveChatlistSuggestions {
    return new TLChatlistsGetLeaveChatlistSuggestions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChatlistsGetLeaveChatlistSuggestions {
    return new TLChatlistsGetLeaveChatlistSuggestions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChatlistsGetLeaveChatlistSuggestions {
    return new TLChatlistsGetLeaveChatlistSuggestions().fromJsonString(jsonString, options);
  }

  static equals(a: TLChatlistsGetLeaveChatlistSuggestions | PlainMessage<TLChatlistsGetLeaveChatlistSuggestions> | undefined, b: TLChatlistsGetLeaveChatlistSuggestions | PlainMessage<TLChatlistsGetLeaveChatlistSuggestions> | undefined): boolean {
    return proto3.util.equals(TLChatlistsGetLeaveChatlistSuggestions, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChatlistsLeaveChatlist
 */
export class TLChatlistsLeaveChatlist extends Message<TLChatlistsLeaveChatlist> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChatlist chatlist = 3;
   */
  chatlist: InputChatlist[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peers = 4;
   */
  peers: InputPeer[] = [];

  constructor(data?: PartialMessage<TLChatlistsLeaveChatlist>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChatlistsLeaveChatlist";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "chatlist", kind: "message", T: InputChatlist, repeated: true },
    { no: 4, name: "peers", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChatlistsLeaveChatlist {
    return new TLChatlistsLeaveChatlist().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChatlistsLeaveChatlist {
    return new TLChatlistsLeaveChatlist().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChatlistsLeaveChatlist {
    return new TLChatlistsLeaveChatlist().fromJsonString(jsonString, options);
  }

  static equals(a: TLChatlistsLeaveChatlist | PlainMessage<TLChatlistsLeaveChatlist> | undefined, b: TLChatlistsLeaveChatlist | PlainMessage<TLChatlistsLeaveChatlist> | undefined): boolean {
    return proto3.util.equals(TLChatlistsLeaveChatlist, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesCanSendStory
 */
export class TLStoriesCanSendStory extends Message<TLStoriesCanSendStory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLStoriesCanSendStory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesCanSendStory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesCanSendStory {
    return new TLStoriesCanSendStory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesCanSendStory {
    return new TLStoriesCanSendStory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesCanSendStory {
    return new TLStoriesCanSendStory().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesCanSendStory | PlainMessage<TLStoriesCanSendStory> | undefined, b: TLStoriesCanSendStory | PlainMessage<TLStoriesCanSendStory> | undefined): boolean {
    return proto3.util.equals(TLStoriesCanSendStory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesSendStory
 */
export class TLStoriesSendStory extends Message<TLStoriesSendStory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool pinned = 3;
   */
  pinned = false;

  /**
   * @generated from field: bool noforwards = 4;
   */
  noforwards = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 5;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputMedia media = 6;
   */
  media: InputMedia[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MediaArea media_areas = 7;
   */
  mediaAreas: MediaArea[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue caption = 8;
   */
  caption: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessageEntity entities = 9;
   */
  entities: MessageEntity[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPrivacyRule privacy_rules = 10;
   */
  privacyRules: InputPrivacyRule[] = [];

  /**
   * @generated from field: int64 random_id = 11;
   */
  randomId = protoInt64.zero;

  /**
   * @generated from field: repeated google.protobuf.Int32Value period = 12;
   */
  period: Int32Value[] = [];

  constructor(data?: PartialMessage<TLStoriesSendStory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesSendStory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "pinned", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "noforwards", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 6, name: "media", kind: "message", T: InputMedia, repeated: true },
    { no: 7, name: "media_areas", kind: "message", T: MediaArea, repeated: true },
    { no: 8, name: "caption", kind: "message", T: StringValue, repeated: true },
    { no: 9, name: "entities", kind: "message", T: MessageEntity, repeated: true },
    { no: 10, name: "privacy_rules", kind: "message", T: InputPrivacyRule, repeated: true },
    { no: 11, name: "random_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "period", kind: "message", T: Int32Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesSendStory {
    return new TLStoriesSendStory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesSendStory {
    return new TLStoriesSendStory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesSendStory {
    return new TLStoriesSendStory().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesSendStory | PlainMessage<TLStoriesSendStory> | undefined, b: TLStoriesSendStory | PlainMessage<TLStoriesSendStory> | undefined): boolean {
    return proto3.util.equals(TLStoriesSendStory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesEditStory
 */
export class TLStoriesEditStory extends Message<TLStoriesEditStory> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputMedia media = 5;
   */
  media: InputMedia[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MediaArea media_areas = 6;
   */
  mediaAreas: MediaArea[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue caption = 7;
   */
  caption: StringValue[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessageEntity entities = 8;
   */
  entities: MessageEntity[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPrivacyRule privacy_rules = 9;
   */
  privacyRules: InputPrivacyRule[] = [];

  constructor(data?: PartialMessage<TLStoriesEditStory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesEditStory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "media", kind: "message", T: InputMedia, repeated: true },
    { no: 6, name: "media_areas", kind: "message", T: MediaArea, repeated: true },
    { no: 7, name: "caption", kind: "message", T: StringValue, repeated: true },
    { no: 8, name: "entities", kind: "message", T: MessageEntity, repeated: true },
    { no: 9, name: "privacy_rules", kind: "message", T: InputPrivacyRule, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesEditStory {
    return new TLStoriesEditStory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesEditStory {
    return new TLStoriesEditStory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesEditStory {
    return new TLStoriesEditStory().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesEditStory | PlainMessage<TLStoriesEditStory> | undefined, b: TLStoriesEditStory | PlainMessage<TLStoriesEditStory> | undefined): boolean {
    return proto3.util.equals(TLStoriesEditStory, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesDeleteStories
 */
export class TLStoriesDeleteStories extends Message<TLStoriesDeleteStories> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<TLStoriesDeleteStories>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesDeleteStories";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesDeleteStories {
    return new TLStoriesDeleteStories().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesDeleteStories {
    return new TLStoriesDeleteStories().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesDeleteStories {
    return new TLStoriesDeleteStories().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesDeleteStories | PlainMessage<TLStoriesDeleteStories> | undefined, b: TLStoriesDeleteStories | PlainMessage<TLStoriesDeleteStories> | undefined): boolean {
    return proto3.util.equals(TLStoriesDeleteStories, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesTogglePinned
 */
export class TLStoriesTogglePinned extends Message<TLStoriesTogglePinned> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool pinned = 5;
   */
  pinned: Bool[] = [];

  constructor(data?: PartialMessage<TLStoriesTogglePinned>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesTogglePinned";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "pinned", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesTogglePinned {
    return new TLStoriesTogglePinned().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesTogglePinned {
    return new TLStoriesTogglePinned().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesTogglePinned {
    return new TLStoriesTogglePinned().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesTogglePinned | PlainMessage<TLStoriesTogglePinned> | undefined, b: TLStoriesTogglePinned | PlainMessage<TLStoriesTogglePinned> | undefined): boolean {
    return proto3.util.equals(TLStoriesTogglePinned, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetAllStories
 */
export class TLStoriesGetAllStories extends Message<TLStoriesGetAllStories> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool next = 3;
   */
  next = false;

  /**
   * @generated from field: bool hidden = 4;
   */
  hidden = false;

  /**
   * @generated from field: repeated google.protobuf.StringValue state = 5;
   */
  state: StringValue[] = [];

  constructor(data?: PartialMessage<TLStoriesGetAllStories>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetAllStories";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "next", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "hidden", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "state", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetAllStories {
    return new TLStoriesGetAllStories().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetAllStories {
    return new TLStoriesGetAllStories().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetAllStories {
    return new TLStoriesGetAllStories().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetAllStories | PlainMessage<TLStoriesGetAllStories> | undefined, b: TLStoriesGetAllStories | PlainMessage<TLStoriesGetAllStories> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetAllStories, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetPinnedStories
 */
export class TLStoriesGetPinnedStories extends Message<TLStoriesGetPinnedStories> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 offset_id = 4;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 limit = 5;
   */
  limit = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 6;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLStoriesGetPinnedStories>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetPinnedStories";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetPinnedStories {
    return new TLStoriesGetPinnedStories().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetPinnedStories {
    return new TLStoriesGetPinnedStories().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetPinnedStories {
    return new TLStoriesGetPinnedStories().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetPinnedStories | PlainMessage<TLStoriesGetPinnedStories> | undefined, b: TLStoriesGetPinnedStories | PlainMessage<TLStoriesGetPinnedStories> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetPinnedStories, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetStoriesArchive
 */
export class TLStoriesGetStoriesArchive extends Message<TLStoriesGetStoriesArchive> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 offset_id = 4;
   */
  offsetId = 0;

  /**
   * @generated from field: int32 limit = 5;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLStoriesGetStoriesArchive>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetStoriesArchive";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "offset_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetStoriesArchive {
    return new TLStoriesGetStoriesArchive().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetStoriesArchive {
    return new TLStoriesGetStoriesArchive().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetStoriesArchive {
    return new TLStoriesGetStoriesArchive().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetStoriesArchive | PlainMessage<TLStoriesGetStoriesArchive> | undefined, b: TLStoriesGetStoriesArchive | PlainMessage<TLStoriesGetStoriesArchive> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetStoriesArchive, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetStoriesByID
 */
export class TLStoriesGetStoriesByID extends Message<TLStoriesGetStoriesByID> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 5;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLStoriesGetStoriesByID>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetStoriesByID";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetStoriesByID {
    return new TLStoriesGetStoriesByID().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetStoriesByID {
    return new TLStoriesGetStoriesByID().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetStoriesByID {
    return new TLStoriesGetStoriesByID().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetStoriesByID | PlainMessage<TLStoriesGetStoriesByID> | undefined, b: TLStoriesGetStoriesByID | PlainMessage<TLStoriesGetStoriesByID> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetStoriesByID, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesToggleAllStoriesHidden
 */
export class TLStoriesToggleAllStoriesHidden extends Message<TLStoriesToggleAllStoriesHidden> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool hidden = 3;
   */
  hidden: Bool[] = [];

  constructor(data?: PartialMessage<TLStoriesToggleAllStoriesHidden>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesToggleAllStoriesHidden";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "hidden", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesToggleAllStoriesHidden {
    return new TLStoriesToggleAllStoriesHidden().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesToggleAllStoriesHidden {
    return new TLStoriesToggleAllStoriesHidden().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesToggleAllStoriesHidden {
    return new TLStoriesToggleAllStoriesHidden().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesToggleAllStoriesHidden | PlainMessage<TLStoriesToggleAllStoriesHidden> | undefined, b: TLStoriesToggleAllStoriesHidden | PlainMessage<TLStoriesToggleAllStoriesHidden> | undefined): boolean {
    return proto3.util.equals(TLStoriesToggleAllStoriesHidden, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesReadStories
 */
export class TLStoriesReadStories extends Message<TLStoriesReadStories> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 max_id = 4;
   */
  maxId = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 5;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLStoriesReadStories>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesReadStories";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesReadStories {
    return new TLStoriesReadStories().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesReadStories {
    return new TLStoriesReadStories().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesReadStories {
    return new TLStoriesReadStories().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesReadStories | PlainMessage<TLStoriesReadStories> | undefined, b: TLStoriesReadStories | PlainMessage<TLStoriesReadStories> | undefined): boolean {
    return proto3.util.equals(TLStoriesReadStories, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesIncrementStoryViews
 */
export class TLStoriesIncrementStoryViews extends Message<TLStoriesIncrementStoryViews> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 5;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLStoriesIncrementStoryViews>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesIncrementStoryViews";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesIncrementStoryViews {
    return new TLStoriesIncrementStoryViews().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesIncrementStoryViews {
    return new TLStoriesIncrementStoryViews().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesIncrementStoryViews {
    return new TLStoriesIncrementStoryViews().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesIncrementStoryViews | PlainMessage<TLStoriesIncrementStoryViews> | undefined, b: TLStoriesIncrementStoryViews | PlainMessage<TLStoriesIncrementStoryViews> | undefined): boolean {
    return proto3.util.equals(TLStoriesIncrementStoryViews, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetStoryViewsList
 */
export class TLStoriesGetStoryViewsList extends Message<TLStoriesGetStoryViewsList> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool just_contacts = 3;
   */
  justContacts = false;

  /**
   * @generated from field: bool reactions_first = 4;
   */
  reactionsFirst = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 5;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue q = 6;
   */
  q: StringValue[] = [];

  /**
   * @generated from field: int32 id = 7;
   */
  id = 0;

  /**
   * @generated from field: string offset = 8;
   */
  offset = "";

  /**
   * @generated from field: int32 limit = 9;
   */
  limit = 0;

  /**
   * @generated from field: int32 offset_date = 10;
   */
  offsetDate = 0;

  /**
   * @generated from field: int64 offset_id = 11;
   */
  offsetId = protoInt64.zero;

  constructor(data?: PartialMessage<TLStoriesGetStoryViewsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetStoryViewsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "just_contacts", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "reactions_first", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 6, name: "q", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "offset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "offset_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "offset_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetStoryViewsList {
    return new TLStoriesGetStoryViewsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetStoryViewsList {
    return new TLStoriesGetStoryViewsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetStoryViewsList {
    return new TLStoriesGetStoryViewsList().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetStoryViewsList | PlainMessage<TLStoriesGetStoryViewsList> | undefined, b: TLStoriesGetStoryViewsList | PlainMessage<TLStoriesGetStoryViewsList> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetStoryViewsList, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetStoriesViews
 */
export class TLStoriesGetStoriesViews extends Message<TLStoriesGetStoriesViews> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<TLStoriesGetStoriesViews>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetStoriesViews";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetStoriesViews {
    return new TLStoriesGetStoriesViews().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetStoriesViews {
    return new TLStoriesGetStoriesViews().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetStoriesViews {
    return new TLStoriesGetStoriesViews().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetStoriesViews | PlainMessage<TLStoriesGetStoriesViews> | undefined, b: TLStoriesGetStoriesViews | PlainMessage<TLStoriesGetStoriesViews> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetStoriesViews, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesExportStoryLink
 */
export class TLStoriesExportStoryLink extends Message<TLStoriesExportStoryLink> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 5;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLStoriesExportStoryLink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesExportStoryLink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesExportStoryLink {
    return new TLStoriesExportStoryLink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesExportStoryLink {
    return new TLStoriesExportStoryLink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesExportStoryLink {
    return new TLStoriesExportStoryLink().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesExportStoryLink | PlainMessage<TLStoriesExportStoryLink> | undefined, b: TLStoriesExportStoryLink | PlainMessage<TLStoriesExportStoryLink> | undefined): boolean {
    return proto3.util.equals(TLStoriesExportStoryLink, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesReport
 */
export class TLStoriesReport extends Message<TLStoriesReport> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ReportReason reason = 5;
   */
  reason: ReportReason[] = [];

  /**
   * @generated from field: string message = 6;
   */
  message = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 7;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLStoriesReport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesReport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "reason", kind: "message", T: ReportReason, repeated: true },
    { no: 6, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesReport {
    return new TLStoriesReport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesReport {
    return new TLStoriesReport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesReport {
    return new TLStoriesReport().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesReport | PlainMessage<TLStoriesReport> | undefined, b: TLStoriesReport | PlainMessage<TLStoriesReport> | undefined): boolean {
    return proto3.util.equals(TLStoriesReport, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesActivateStealthMode
 */
export class TLStoriesActivateStealthMode extends Message<TLStoriesActivateStealthMode> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool past = 3;
   */
  past = false;

  /**
   * @generated from field: bool future = 4;
   */
  future = false;

  constructor(data?: PartialMessage<TLStoriesActivateStealthMode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesActivateStealthMode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "past", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "future", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesActivateStealthMode {
    return new TLStoriesActivateStealthMode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesActivateStealthMode {
    return new TLStoriesActivateStealthMode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesActivateStealthMode {
    return new TLStoriesActivateStealthMode().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesActivateStealthMode | PlainMessage<TLStoriesActivateStealthMode> | undefined, b: TLStoriesActivateStealthMode | PlainMessage<TLStoriesActivateStealthMode> | undefined): boolean {
    return proto3.util.equals(TLStoriesActivateStealthMode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesSendReaction
 */
export class TLStoriesSendReaction extends Message<TLStoriesSendReaction> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bool add_to_recent = 3;
   */
  addToRecent = false;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 4;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 story_id = 5;
   */
  storyId = 0;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Reaction reaction = 6;
   */
  reaction: Reaction[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 7;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLStoriesSendReaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesSendReaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "add_to_recent", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 5, name: "story_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "reaction", kind: "message", T: Reaction, repeated: true },
    { no: 7, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesSendReaction {
    return new TLStoriesSendReaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesSendReaction {
    return new TLStoriesSendReaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesSendReaction {
    return new TLStoriesSendReaction().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesSendReaction | PlainMessage<TLStoriesSendReaction> | undefined, b: TLStoriesSendReaction | PlainMessage<TLStoriesSendReaction> | undefined): boolean {
    return proto3.util.equals(TLStoriesSendReaction, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetPeerStories
 */
export class TLStoriesGetPeerStories extends Message<TLStoriesGetPeerStories> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLStoriesGetPeerStories>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetPeerStories";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetPeerStories {
    return new TLStoriesGetPeerStories().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetPeerStories {
    return new TLStoriesGetPeerStories().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetPeerStories {
    return new TLStoriesGetPeerStories().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetPeerStories | PlainMessage<TLStoriesGetPeerStories> | undefined, b: TLStoriesGetPeerStories | PlainMessage<TLStoriesGetPeerStories> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetPeerStories, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetAllReadPeerStories
 */
export class TLStoriesGetAllReadPeerStories extends Message<TLStoriesGetAllReadPeerStories> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLStoriesGetAllReadPeerStories>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetAllReadPeerStories";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetAllReadPeerStories {
    return new TLStoriesGetAllReadPeerStories().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetAllReadPeerStories {
    return new TLStoriesGetAllReadPeerStories().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetAllReadPeerStories {
    return new TLStoriesGetAllReadPeerStories().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetAllReadPeerStories | PlainMessage<TLStoriesGetAllReadPeerStories> | undefined, b: TLStoriesGetAllReadPeerStories | PlainMessage<TLStoriesGetAllReadPeerStories> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetAllReadPeerStories, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetPeerMaxIDs
 */
export class TLStoriesGetPeerMaxIDs extends Message<TLStoriesGetPeerMaxIDs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer id = 3;
   */
  id: InputPeer[] = [];

  constructor(data?: PartialMessage<TLStoriesGetPeerMaxIDs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetPeerMaxIDs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetPeerMaxIDs {
    return new TLStoriesGetPeerMaxIDs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetPeerMaxIDs {
    return new TLStoriesGetPeerMaxIDs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetPeerMaxIDs {
    return new TLStoriesGetPeerMaxIDs().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetPeerMaxIDs | PlainMessage<TLStoriesGetPeerMaxIDs> | undefined, b: TLStoriesGetPeerMaxIDs | PlainMessage<TLStoriesGetPeerMaxIDs> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetPeerMaxIDs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetChatsToSend
 */
export class TLStoriesGetChatsToSend extends Message<TLStoriesGetChatsToSend> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLStoriesGetChatsToSend>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetChatsToSend";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetChatsToSend {
    return new TLStoriesGetChatsToSend().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetChatsToSend {
    return new TLStoriesGetChatsToSend().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetChatsToSend {
    return new TLStoriesGetChatsToSend().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetChatsToSend | PlainMessage<TLStoriesGetChatsToSend> | undefined, b: TLStoriesGetChatsToSend | PlainMessage<TLStoriesGetChatsToSend> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetChatsToSend, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesTogglePeerStoriesHidden
 */
export class TLStoriesTogglePeerStoriesHidden extends Message<TLStoriesTogglePeerStoriesHidden> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool hidden = 4;
   */
  hidden: Bool[] = [];

  constructor(data?: PartialMessage<TLStoriesTogglePeerStoriesHidden>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesTogglePeerStoriesHidden";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "hidden", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesTogglePeerStoriesHidden {
    return new TLStoriesTogglePeerStoriesHidden().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesTogglePeerStoriesHidden {
    return new TLStoriesTogglePeerStoriesHidden().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesTogglePeerStoriesHidden {
    return new TLStoriesTogglePeerStoriesHidden().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesTogglePeerStoriesHidden | PlainMessage<TLStoriesTogglePeerStoriesHidden> | undefined, b: TLStoriesTogglePeerStoriesHidden | PlainMessage<TLStoriesTogglePeerStoriesHidden> | undefined): boolean {
    return proto3.util.equals(TLStoriesTogglePeerStoriesHidden, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetBoostsStatus
 */
export class TLStoriesGetBoostsStatus extends Message<TLStoriesGetBoostsStatus> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLStoriesGetBoostsStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetBoostsStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetBoostsStatus {
    return new TLStoriesGetBoostsStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetBoostsStatus {
    return new TLStoriesGetBoostsStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetBoostsStatus {
    return new TLStoriesGetBoostsStatus().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetBoostsStatus | PlainMessage<TLStoriesGetBoostsStatus> | undefined, b: TLStoriesGetBoostsStatus | PlainMessage<TLStoriesGetBoostsStatus> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetBoostsStatus, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetBoostersList
 */
export class TLStoriesGetBoostersList extends Message<TLStoriesGetBoostersList> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: string offset = 4;
   */
  offset = "";

  /**
   * @generated from field: int32 limit = 5;
   */
  limit = 0;

  constructor(data?: PartialMessage<TLStoriesGetBoostersList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetBoostersList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "offset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetBoostersList {
    return new TLStoriesGetBoostersList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetBoostersList {
    return new TLStoriesGetBoostersList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetBoostersList {
    return new TLStoriesGetBoostersList().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetBoostersList | PlainMessage<TLStoriesGetBoostersList> | undefined, b: TLStoriesGetBoostersList | PlainMessage<TLStoriesGetBoostersList> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetBoostersList, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesCanApplyBoost
 */
export class TLStoriesCanApplyBoost extends Message<TLStoriesCanApplyBoost> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLStoriesCanApplyBoost>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesCanApplyBoost";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesCanApplyBoost {
    return new TLStoriesCanApplyBoost().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesCanApplyBoost {
    return new TLStoriesCanApplyBoost().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesCanApplyBoost {
    return new TLStoriesCanApplyBoost().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesCanApplyBoost | PlainMessage<TLStoriesCanApplyBoost> | undefined, b: TLStoriesCanApplyBoost | PlainMessage<TLStoriesCanApplyBoost> | undefined): boolean {
    return proto3.util.equals(TLStoriesCanApplyBoost, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesApplyBoost
 */
export class TLStoriesApplyBoost extends Message<TLStoriesApplyBoost> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  constructor(data?: PartialMessage<TLStoriesApplyBoost>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesApplyBoost";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesApplyBoost {
    return new TLStoriesApplyBoost().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesApplyBoost {
    return new TLStoriesApplyBoost().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesApplyBoost {
    return new TLStoriesApplyBoost().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesApplyBoost | PlainMessage<TLStoriesApplyBoost> | undefined, b: TLStoriesApplyBoost | PlainMessage<TLStoriesApplyBoost> | undefined): boolean {
    return proto3.util.equals(TLStoriesApplyBoost, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetWebPage32CA8F91
 */
export class TLMessagesGetWebPage32CA8F91 extends Message<TLMessagesGetWebPage32CA8F91> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string url = 3;
   */
  url = "";

  /**
   * @generated from field: int32 hash = 4;
   */
  hash = 0;

  constructor(data?: PartialMessage<TLMessagesGetWebPage32CA8F91>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetWebPage32CA8F91";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "hash", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetWebPage32CA8F91 {
    return new TLMessagesGetWebPage32CA8F91().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetWebPage32CA8F91 {
    return new TLMessagesGetWebPage32CA8F91().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetWebPage32CA8F91 {
    return new TLMessagesGetWebPage32CA8F91().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetWebPage32CA8F91 | PlainMessage<TLMessagesGetWebPage32CA8F91> | undefined, b: TLMessagesGetWebPage32CA8F91 | PlainMessage<TLMessagesGetWebPage32CA8F91> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetWebPage32CA8F91, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUsersGetStoriesMaxIDs
 */
export class TLUsersGetStoriesMaxIDs extends Message<TLUsersGetStoriesMaxIDs> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser id = 3;
   */
  id: InputUser[] = [];

  constructor(data?: PartialMessage<TLUsersGetStoriesMaxIDs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUsersGetStoriesMaxIDs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUsersGetStoriesMaxIDs {
    return new TLUsersGetStoriesMaxIDs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUsersGetStoriesMaxIDs {
    return new TLUsersGetStoriesMaxIDs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUsersGetStoriesMaxIDs {
    return new TLUsersGetStoriesMaxIDs().fromJsonString(jsonString, options);
  }

  static equals(a: TLUsersGetStoriesMaxIDs | PlainMessage<TLUsersGetStoriesMaxIDs> | undefined, b: TLUsersGetStoriesMaxIDs | PlainMessage<TLUsersGetStoriesMaxIDs> | undefined): boolean {
    return proto3.util.equals(TLUsersGetStoriesMaxIDs, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLContactsToggleStoriesHidden
 */
export class TLContactsToggleStoriesHidden extends Message<TLContactsToggleStoriesHidden> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser id = 3;
   */
  id: InputUser[] = [];

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Bool hidden = 4;
   */
  hidden: Bool[] = [];

  constructor(data?: PartialMessage<TLContactsToggleStoriesHidden>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLContactsToggleStoriesHidden";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "hidden", kind: "message", T: Bool, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLContactsToggleStoriesHidden {
    return new TLContactsToggleStoriesHidden().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLContactsToggleStoriesHidden {
    return new TLContactsToggleStoriesHidden().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLContactsToggleStoriesHidden {
    return new TLContactsToggleStoriesHidden().fromJsonString(jsonString, options);
  }

  static equals(a: TLContactsToggleStoriesHidden | PlainMessage<TLContactsToggleStoriesHidden> | undefined, b: TLContactsToggleStoriesHidden | PlainMessage<TLContactsToggleStoriesHidden> | undefined): boolean {
    return proto3.util.equals(TLContactsToggleStoriesHidden, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetUserStories
 */
export class TLStoriesGetUserStories extends Message<TLStoriesGetUserStories> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 3;
   */
  userId: InputUser[] = [];

  constructor(data?: PartialMessage<TLStoriesGetUserStories>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetUserStories";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "user_id", kind: "message", T: InputUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetUserStories {
    return new TLStoriesGetUserStories().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetUserStories {
    return new TLStoriesGetUserStories().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetUserStories {
    return new TLStoriesGetUserStories().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetUserStories | PlainMessage<TLStoriesGetUserStories> | undefined, b: TLStoriesGetUserStories | PlainMessage<TLStoriesGetUserStories> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetUserStories, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetAllReadUserStories
 */
export class TLStoriesGetAllReadUserStories extends Message<TLStoriesGetAllReadUserStories> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLStoriesGetAllReadUserStories>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLStoriesGetAllReadUserStories";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLStoriesGetAllReadUserStories {
    return new TLStoriesGetAllReadUserStories().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLStoriesGetAllReadUserStories {
    return new TLStoriesGetAllReadUserStories().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLStoriesGetAllReadUserStories {
    return new TLStoriesGetAllReadUserStories().fromJsonString(jsonString, options);
  }

  static equals(a: TLStoriesGetAllReadUserStories | PlainMessage<TLStoriesGetAllReadUserStories> | undefined, b: TLStoriesGetAllReadUserStories | PlainMessage<TLStoriesGetAllReadUserStories> | undefined): boolean {
    return proto3.util.equals(TLStoriesGetAllReadUserStories, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAllChats
 */
export class TLMessagesGetAllChats extends Message<TLMessagesGetAllChats> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 except_ids = 3;
   */
  exceptIds = protoInt64.zero;

  constructor(data?: PartialMessage<TLMessagesGetAllChats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetAllChats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "except_ids", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetAllChats {
    return new TLMessagesGetAllChats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetAllChats {
    return new TLMessagesGetAllChats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetAllChats {
    return new TLMessagesGetAllChats().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetAllChats | PlainMessage<TLMessagesGetAllChats> | undefined, b: TLMessagesGetAllChats | PlainMessage<TLMessagesGetAllChats> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetAllChats, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBotsGetBotInfo75EC12E6
 */
export class TLBotsGetBotInfo75EC12E6 extends Message<TLBotsGetBotInfo75EC12E6> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string lang_code = 3;
   */
  langCode = "";

  constructor(data?: PartialMessage<TLBotsGetBotInfo75EC12E6>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBotsGetBotInfo75EC12E6";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "lang_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBotsGetBotInfo75EC12E6 {
    return new TLBotsGetBotInfo75EC12E6().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBotsGetBotInfo75EC12E6 {
    return new TLBotsGetBotInfo75EC12E6().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBotsGetBotInfo75EC12E6 {
    return new TLBotsGetBotInfo75EC12E6().fromJsonString(jsonString, options);
  }

  static equals(a: TLBotsGetBotInfo75EC12E6 | PlainMessage<TLBotsGetBotInfo75EC12E6> | undefined, b: TLBotsGetBotInfo75EC12E6 | PlainMessage<TLBotsGetBotInfo75EC12E6> | undefined): boolean {
    return proto3.util.equals(TLBotsGetBotInfo75EC12E6, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLFoldersDeleteFolder
 */
export class TLFoldersDeleteFolder extends Message<TLFoldersDeleteFolder> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int32 folder_id = 3;
   */
  folderId = 0;

  constructor(data?: PartialMessage<TLFoldersDeleteFolder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLFoldersDeleteFolder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "folder_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLFoldersDeleteFolder {
    return new TLFoldersDeleteFolder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLFoldersDeleteFolder {
    return new TLFoldersDeleteFolder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLFoldersDeleteFolder {
    return new TLFoldersDeleteFolder().fromJsonString(jsonString, options);
  }

  static equals(a: TLFoldersDeleteFolder | PlainMessage<TLFoldersDeleteFolder> | undefined, b: TLFoldersDeleteFolder | PlainMessage<TLFoldersDeleteFolder> | undefined): boolean {
    return proto3.util.equals(TLFoldersDeleteFolder, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessageReadParticipants2C6F97B7
 */
export class TLMessagesGetMessageReadParticipants2C6F97B7 extends Message<TLMessagesGetMessageReadParticipants2C6F97B7> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputPeer peer = 3;
   */
  peer: InputPeer[] = [];

  /**
   * @generated from field: int32 msg_id = 4;
   */
  msgId = 0;

  constructor(data?: PartialMessage<TLMessagesGetMessageReadParticipants2C6F97B7>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLMessagesGetMessageReadParticipants2C6F97B7";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "peer", kind: "message", T: InputPeer, repeated: true },
    { no: 4, name: "msg_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLMessagesGetMessageReadParticipants2C6F97B7 {
    return new TLMessagesGetMessageReadParticipants2C6F97B7().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLMessagesGetMessageReadParticipants2C6F97B7 {
    return new TLMessagesGetMessageReadParticipants2C6F97B7().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLMessagesGetMessageReadParticipants2C6F97B7 {
    return new TLMessagesGetMessageReadParticipants2C6F97B7().fromJsonString(jsonString, options);
  }

  static equals(a: TLMessagesGetMessageReadParticipants2C6F97B7 | PlainMessage<TLMessagesGetMessageReadParticipants2C6F97B7> | undefined, b: TLMessagesGetMessageReadParticipants2C6F97B7 | PlainMessage<TLMessagesGetMessageReadParticipants2C6F97B7> | undefined): boolean {
    return proto3.util.equals(TLMessagesGetMessageReadParticipants2C6F97B7, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpGetAppConfig98914110
 */
export class TLHelpGetAppConfig98914110 extends Message<TLHelpGetAppConfig98914110> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLHelpGetAppConfig98914110>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpGetAppConfig98914110";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpGetAppConfig98914110 {
    return new TLHelpGetAppConfig98914110().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpGetAppConfig98914110 {
    return new TLHelpGetAppConfig98914110().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpGetAppConfig98914110 {
    return new TLHelpGetAppConfig98914110().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpGetAppConfig98914110 | PlainMessage<TLHelpGetAppConfig98914110> | undefined, b: TLHelpGetAppConfig98914110 | PlainMessage<TLHelpGetAppConfig98914110> | undefined): boolean {
    return proto3.util.equals(TLHelpGetAppConfig98914110, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountVerifyEmailECBA39DB
 */
export class TLAccountVerifyEmailECBA39DB extends Message<TLAccountVerifyEmailECBA39DB> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string email = 3;
   */
  email = "";

  /**
   * @generated from field: string code = 4;
   */
  code = "";

  constructor(data?: PartialMessage<TLAccountVerifyEmailECBA39DB>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountVerifyEmailECBA39DB";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountVerifyEmailECBA39DB {
    return new TLAccountVerifyEmailECBA39DB().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountVerifyEmailECBA39DB {
    return new TLAccountVerifyEmailECBA39DB().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountVerifyEmailECBA39DB {
    return new TLAccountVerifyEmailECBA39DB().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountVerifyEmailECBA39DB | PlainMessage<TLAccountVerifyEmailECBA39DB> | undefined, b: TLAccountVerifyEmailECBA39DB | PlainMessage<TLAccountVerifyEmailECBA39DB> | undefined): boolean {
    return proto3.util.equals(TLAccountVerifyEmailECBA39DB, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsRequestRecurringPayment
 */
export class TLPaymentsRequestRecurringPayment extends Message<TLPaymentsRequestRecurringPayment> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputUser user_id = 3;
   */
  userId: InputUser[] = [];

  /**
   * @generated from field: string recurring_init_charge = 4;
   */
  recurringInitCharge = "";

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputMedia invoice_media = 5;
   */
  invoiceMedia: InputMedia[] = [];

  constructor(data?: PartialMessage<TLPaymentsRequestRecurringPayment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsRequestRecurringPayment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "user_id", kind: "message", T: InputUser, repeated: true },
    { no: 4, name: "recurring_init_charge", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "invoice_media", kind: "message", T: InputMedia, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsRequestRecurringPayment {
    return new TLPaymentsRequestRecurringPayment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsRequestRecurringPayment {
    return new TLPaymentsRequestRecurringPayment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsRequestRecurringPayment {
    return new TLPaymentsRequestRecurringPayment().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsRequestRecurringPayment | PlainMessage<TLPaymentsRequestRecurringPayment> | undefined, b: TLPaymentsRequestRecurringPayment | PlainMessage<TLPaymentsRequestRecurringPayment> | undefined): boolean {
    return proto3.util.equals(TLPaymentsRequestRecurringPayment, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPaymentsRestorePlayMarketReceipt
 */
export class TLPaymentsRestorePlayMarketReceipt extends Message<TLPaymentsRestorePlayMarketReceipt> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: bytes receipt = 3;
   */
  receipt = new Uint8Array(0);

  constructor(data?: PartialMessage<TLPaymentsRestorePlayMarketReceipt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPaymentsRestorePlayMarketReceipt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "receipt", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPaymentsRestorePlayMarketReceipt {
    return new TLPaymentsRestorePlayMarketReceipt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPaymentsRestorePlayMarketReceipt {
    return new TLPaymentsRestorePlayMarketReceipt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPaymentsRestorePlayMarketReceipt {
    return new TLPaymentsRestorePlayMarketReceipt().fromJsonString(jsonString, options);
  }

  static equals(a: TLPaymentsRestorePlayMarketReceipt | PlainMessage<TLPaymentsRestorePlayMarketReceipt> | undefined, b: TLPaymentsRestorePlayMarketReceipt | PlainMessage<TLPaymentsRestorePlayMarketReceipt> | undefined): boolean {
    return proto3.util.equals(TLPaymentsRestorePlayMarketReceipt, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteHistoryAF369D42
 */
export class TLChannelsDeleteHistoryAF369D42 extends Message<TLChannelsDeleteHistoryAF369D42> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.InputChannel channel = 3;
   */
  channel: InputChannel[] = [];

  /**
   * @generated from field: int32 max_id = 4;
   */
  maxId = 0;

  constructor(data?: PartialMessage<TLChannelsDeleteHistoryAF369D42>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLChannelsDeleteHistoryAF369D42";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "channel", kind: "message", T: InputChannel, repeated: true },
    { no: 4, name: "max_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLChannelsDeleteHistoryAF369D42 {
    return new TLChannelsDeleteHistoryAF369D42().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLChannelsDeleteHistoryAF369D42 {
    return new TLChannelsDeleteHistoryAF369D42().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLChannelsDeleteHistoryAF369D42 {
    return new TLChannelsDeleteHistoryAF369D42().fromJsonString(jsonString, options);
  }

  static equals(a: TLChannelsDeleteHistoryAF369D42 | PlainMessage<TLChannelsDeleteHistoryAF369D42> | undefined, b: TLChannelsDeleteHistoryAF369D42 | PlainMessage<TLChannelsDeleteHistoryAF369D42> | undefined): boolean {
    return proto3.util.equals(TLChannelsDeleteHistoryAF369D42, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLHelpTest
 */
export class TLHelpTest extends Message<TLHelpTest> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLHelpTest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLHelpTest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLHelpTest {
    return new TLHelpTest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLHelpTest {
    return new TLHelpTest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLHelpTest {
    return new TLHelpTest().fromJsonString(jsonString, options);
  }

  static equals(a: TLHelpTest | PlainMessage<TLHelpTest> | undefined, b: TLHelpTest | PlainMessage<TLHelpTest> | undefined): boolean {
    return proto3.util.equals(TLHelpTest, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPredefinedCreatePredefinedUser
 */
export class TLPredefinedCreatePredefinedUser extends Message<TLPredefinedCreatePredefinedUser> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone = 3;
   */
  phone = "";

  /**
   * @generated from field: repeated google.protobuf.StringValue first_name = 4;
   */
  firstName: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue last_name = 5;
   */
  lastName: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue username = 6;
   */
  username: StringValue[] = [];

  /**
   * @generated from field: string code = 7;
   */
  code = "";

  /**
   * @generated from field: bool verified = 8;
   */
  verified = false;

  constructor(data?: PartialMessage<TLPredefinedCreatePredefinedUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPredefinedCreatePredefinedUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "first_name", kind: "message", T: StringValue, repeated: true },
    { no: 5, name: "last_name", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "username", kind: "message", T: StringValue, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPredefinedCreatePredefinedUser {
    return new TLPredefinedCreatePredefinedUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPredefinedCreatePredefinedUser {
    return new TLPredefinedCreatePredefinedUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPredefinedCreatePredefinedUser {
    return new TLPredefinedCreatePredefinedUser().fromJsonString(jsonString, options);
  }

  static equals(a: TLPredefinedCreatePredefinedUser | PlainMessage<TLPredefinedCreatePredefinedUser> | undefined, b: TLPredefinedCreatePredefinedUser | PlainMessage<TLPredefinedCreatePredefinedUser> | undefined): boolean {
    return proto3.util.equals(TLPredefinedCreatePredefinedUser, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPredefinedUpdatePredefinedUsername
 */
export class TLPredefinedUpdatePredefinedUsername extends Message<TLPredefinedUpdatePredefinedUsername> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone = 3;
   */
  phone = "";

  /**
   * @generated from field: string username = 4;
   */
  username = "";

  constructor(data?: PartialMessage<TLPredefinedUpdatePredefinedUsername>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPredefinedUpdatePredefinedUsername";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPredefinedUpdatePredefinedUsername {
    return new TLPredefinedUpdatePredefinedUsername().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPredefinedUpdatePredefinedUsername {
    return new TLPredefinedUpdatePredefinedUsername().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPredefinedUpdatePredefinedUsername {
    return new TLPredefinedUpdatePredefinedUsername().fromJsonString(jsonString, options);
  }

  static equals(a: TLPredefinedUpdatePredefinedUsername | PlainMessage<TLPredefinedUpdatePredefinedUsername> | undefined, b: TLPredefinedUpdatePredefinedUsername | PlainMessage<TLPredefinedUpdatePredefinedUsername> | undefined): boolean {
    return proto3.util.equals(TLPredefinedUpdatePredefinedUsername, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPredefinedUpdatePredefinedProfile
 */
export class TLPredefinedUpdatePredefinedProfile extends Message<TLPredefinedUpdatePredefinedProfile> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone = 3;
   */
  phone = "";

  /**
   * @generated from field: repeated google.protobuf.StringValue first_name = 4;
   */
  firstName: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue last_name = 5;
   */
  lastName: StringValue[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue about = 6;
   */
  about: StringValue[] = [];

  constructor(data?: PartialMessage<TLPredefinedUpdatePredefinedProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPredefinedUpdatePredefinedProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "first_name", kind: "message", T: StringValue, repeated: true },
    { no: 5, name: "last_name", kind: "message", T: StringValue, repeated: true },
    { no: 6, name: "about", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPredefinedUpdatePredefinedProfile {
    return new TLPredefinedUpdatePredefinedProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPredefinedUpdatePredefinedProfile {
    return new TLPredefinedUpdatePredefinedProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPredefinedUpdatePredefinedProfile {
    return new TLPredefinedUpdatePredefinedProfile().fromJsonString(jsonString, options);
  }

  static equals(a: TLPredefinedUpdatePredefinedProfile | PlainMessage<TLPredefinedUpdatePredefinedProfile> | undefined, b: TLPredefinedUpdatePredefinedProfile | PlainMessage<TLPredefinedUpdatePredefinedProfile> | undefined): boolean {
    return proto3.util.equals(TLPredefinedUpdatePredefinedProfile, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPredefinedUpdatePredefinedVerified
 */
export class TLPredefinedUpdatePredefinedVerified extends Message<TLPredefinedUpdatePredefinedVerified> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone = 3;
   */
  phone = "";

  /**
   * @generated from field: bool verified = 4;
   */
  verified = false;

  constructor(data?: PartialMessage<TLPredefinedUpdatePredefinedVerified>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPredefinedUpdatePredefinedVerified";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPredefinedUpdatePredefinedVerified {
    return new TLPredefinedUpdatePredefinedVerified().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPredefinedUpdatePredefinedVerified {
    return new TLPredefinedUpdatePredefinedVerified().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPredefinedUpdatePredefinedVerified {
    return new TLPredefinedUpdatePredefinedVerified().fromJsonString(jsonString, options);
  }

  static equals(a: TLPredefinedUpdatePredefinedVerified | PlainMessage<TLPredefinedUpdatePredefinedVerified> | undefined, b: TLPredefinedUpdatePredefinedVerified | PlainMessage<TLPredefinedUpdatePredefinedVerified> | undefined): boolean {
    return proto3.util.equals(TLPredefinedUpdatePredefinedVerified, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPredefinedUpdatePredefinedCode
 */
export class TLPredefinedUpdatePredefinedCode extends Message<TLPredefinedUpdatePredefinedCode> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone = 3;
   */
  phone = "";

  /**
   * @generated from field: string code = 4;
   */
  code = "";

  constructor(data?: PartialMessage<TLPredefinedUpdatePredefinedCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPredefinedUpdatePredefinedCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPredefinedUpdatePredefinedCode {
    return new TLPredefinedUpdatePredefinedCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPredefinedUpdatePredefinedCode {
    return new TLPredefinedUpdatePredefinedCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPredefinedUpdatePredefinedCode {
    return new TLPredefinedUpdatePredefinedCode().fromJsonString(jsonString, options);
  }

  static equals(a: TLPredefinedUpdatePredefinedCode | PlainMessage<TLPredefinedUpdatePredefinedCode> | undefined, b: TLPredefinedUpdatePredefinedCode | PlainMessage<TLPredefinedUpdatePredefinedCode> | undefined): boolean {
    return proto3.util.equals(TLPredefinedUpdatePredefinedCode, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPredefinedGetPredefinedUser
 */
export class TLPredefinedGetPredefinedUser extends Message<TLPredefinedGetPredefinedUser> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone = 3;
   */
  phone = "";

  constructor(data?: PartialMessage<TLPredefinedGetPredefinedUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPredefinedGetPredefinedUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPredefinedGetPredefinedUser {
    return new TLPredefinedGetPredefinedUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPredefinedGetPredefinedUser {
    return new TLPredefinedGetPredefinedUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPredefinedGetPredefinedUser {
    return new TLPredefinedGetPredefinedUser().fromJsonString(jsonString, options);
  }

  static equals(a: TLPredefinedGetPredefinedUser | PlainMessage<TLPredefinedGetPredefinedUser> | undefined, b: TLPredefinedGetPredefinedUser | PlainMessage<TLPredefinedGetPredefinedUser> | undefined): boolean {
    return proto3.util.equals(TLPredefinedGetPredefinedUser, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLPredefinedGetPredefinedUsers
 */
export class TLPredefinedGetPredefinedUsers extends Message<TLPredefinedGetPredefinedUsers> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  constructor(data?: PartialMessage<TLPredefinedGetPredefinedUsers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLPredefinedGetPredefinedUsers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLPredefinedGetPredefinedUsers {
    return new TLPredefinedGetPredefinedUsers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLPredefinedGetPredefinedUsers {
    return new TLPredefinedGetPredefinedUsers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLPredefinedGetPredefinedUsers {
    return new TLPredefinedGetPredefinedUsers().fromJsonString(jsonString, options);
  }

  static equals(a: TLPredefinedGetPredefinedUsers | PlainMessage<TLPredefinedGetPredefinedUsers> | undefined, b: TLPredefinedGetPredefinedUsers | PlainMessage<TLPredefinedGetPredefinedUsers> | undefined): boolean {
    return proto3.util.equals(TLPredefinedGetPredefinedUsers, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLUsersGetMe
 */
export class TLUsersGetMe extends Message<TLUsersGetMe> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 id = 3;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string token = 4;
   */
  token = "";

  constructor(data?: PartialMessage<TLUsersGetMe>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLUsersGetMe";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLUsersGetMe {
    return new TLUsersGetMe().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLUsersGetMe {
    return new TLUsersGetMe().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLUsersGetMe {
    return new TLUsersGetMe().fromJsonString(jsonString, options);
  }

  static equals(a: TLUsersGetMe | PlainMessage<TLUsersGetMe> | undefined, b: TLUsersGetMe | PlainMessage<TLUsersGetMe> | undefined): boolean {
    return proto3.util.equals(TLUsersGetMe, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateVerified
 */
export class TLAccountUpdateVerified extends Message<TLAccountUpdateVerified> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: int64 id = 3;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: bool verified = 4;
   */
  verified = false;

  constructor(data?: PartialMessage<TLAccountUpdateVerified>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAccountUpdateVerified";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAccountUpdateVerified {
    return new TLAccountUpdateVerified().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAccountUpdateVerified {
    return new TLAccountUpdateVerified().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAccountUpdateVerified {
    return new TLAccountUpdateVerified().fromJsonString(jsonString, options);
  }

  static equals(a: TLAccountUpdateVerified | PlainMessage<TLAccountUpdateVerified> | undefined, b: TLAccountUpdateVerified | PlainMessage<TLAccountUpdateVerified> | undefined): boolean {
    return proto3.util.equals(TLAccountUpdateVerified, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLAuthToggleBan
 */
export class TLAuthToggleBan extends Message<TLAuthToggleBan> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: string phone = 3;
   */
  phone = "";

  /**
   * @generated from field: bool predefined = 4;
   */
  predefined = false;

  /**
   * @generated from field: repeated google.protobuf.Int32Value expires = 5;
   */
  expires: Int32Value[] = [];

  /**
   * @generated from field: repeated google.protobuf.StringValue reason = 6;
   */
  reason: StringValue[] = [];

  constructor(data?: PartialMessage<TLAuthToggleBan>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLAuthToggleBan";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "predefined", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "expires", kind: "message", T: Int32Value, repeated: true },
    { no: 6, name: "reason", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLAuthToggleBan {
    return new TLAuthToggleBan().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLAuthToggleBan {
    return new TLAuthToggleBan().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLAuthToggleBan {
    return new TLAuthToggleBan().fromJsonString(jsonString, options);
  }

  static equals(a: TLAuthToggleBan | PlainMessage<TLAuthToggleBan> | undefined, b: TLAuthToggleBan | PlainMessage<TLAuthToggleBan> | undefined): boolean {
    return proto3.util.equals(TLAuthToggleBan, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.TLBizInvokeBizDataRaw
 */
export class TLBizInvokeBizDataRaw extends Message<TLBizInvokeBizDataRaw> {
  /**
   * @generated from field: tech.monstrs.chats_system.core.v1alpha1.TLConstructor constructor = 1;
   */
  constructor$ = TLConstructor.CRC32_UNKNOWN;

  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.BizDataRaw biz_data = 3;
   */
  bizData: BizDataRaw[] = [];

  constructor(data?: PartialMessage<TLBizInvokeBizDataRaw>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.TLBizInvokeBizDataRaw";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "constructor", kind: "enum", T: proto3.getEnumType(TLConstructor) },
    { no: 3, name: "biz_data", kind: "message", T: BizDataRaw, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TLBizInvokeBizDataRaw {
    return new TLBizInvokeBizDataRaw().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TLBizInvokeBizDataRaw {
    return new TLBizInvokeBizDataRaw().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TLBizInvokeBizDataRaw {
    return new TLBizInvokeBizDataRaw().fromJsonString(jsonString, options);
  }

  static equals(a: TLBizInvokeBizDataRaw | PlainMessage<TLBizInvokeBizDataRaw> | undefined, b: TLBizInvokeBizDataRaw | PlainMessage<TLBizInvokeBizDataRaw> | undefined): boolean {
    return proto3.util.equals(TLBizInvokeBizDataRaw, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorSecureValue
 */
export class VectorSecureValue extends Message<VectorSecureValue> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.SecureValue datas = 1;
   */
  datas: SecureValue[] = [];

  constructor(data?: PartialMessage<VectorSecureValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorSecureValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: SecureValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorSecureValue {
    return new VectorSecureValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorSecureValue {
    return new VectorSecureValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorSecureValue {
    return new VectorSecureValue().fromJsonString(jsonString, options);
  }

  static equals(a: VectorSecureValue | PlainMessage<VectorSecureValue> | undefined, b: VectorSecureValue | PlainMessage<VectorSecureValue> | undefined): boolean {
    return proto3.util.equals(VectorSecureValue, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorWallPaper
 */
export class VectorWallPaper extends Message<VectorWallPaper> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.WallPaper datas = 1;
   */
  datas: WallPaper[] = [];

  constructor(data?: PartialMessage<VectorWallPaper>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorWallPaper";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: WallPaper, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorWallPaper {
    return new VectorWallPaper().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorWallPaper {
    return new VectorWallPaper().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorWallPaper {
    return new VectorWallPaper().fromJsonString(jsonString, options);
  }

  static equals(a: VectorWallPaper | PlainMessage<VectorWallPaper> | undefined, b: VectorWallPaper | PlainMessage<VectorWallPaper> | undefined): boolean {
    return proto3.util.equals(VectorWallPaper, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorUser
 */
export class VectorUser extends Message<VectorUser> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.User datas = 1;
   */
  datas: User[] = [];

  constructor(data?: PartialMessage<VectorUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: User, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorUser {
    return new VectorUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorUser {
    return new VectorUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorUser {
    return new VectorUser().fromJsonString(jsonString, options);
  }

  static equals(a: VectorUser | PlainMessage<VectorUser> | undefined, b: VectorUser | PlainMessage<VectorUser> | undefined): boolean {
    return proto3.util.equals(VectorUser, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorInt
 */
export class VectorInt extends Message<VectorInt> {
  /**
   * @generated from field: int32 datas = 1;
   */
  datas = 0;

  constructor(data?: PartialMessage<VectorInt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorInt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorInt {
    return new VectorInt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorInt {
    return new VectorInt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorInt {
    return new VectorInt().fromJsonString(jsonString, options);
  }

  static equals(a: VectorInt | PlainMessage<VectorInt> | undefined, b: VectorInt | PlainMessage<VectorInt> | undefined): boolean {
    return proto3.util.equals(VectorInt, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorContactStatus
 */
export class VectorContactStatus extends Message<VectorContactStatus> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ContactStatus datas = 1;
   */
  datas: ContactStatus[] = [];

  constructor(data?: PartialMessage<VectorContactStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorContactStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: ContactStatus, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorContactStatus {
    return new VectorContactStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorContactStatus {
    return new VectorContactStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorContactStatus {
    return new VectorContactStatus().fromJsonString(jsonString, options);
  }

  static equals(a: VectorContactStatus | PlainMessage<VectorContactStatus> | undefined, b: VectorContactStatus | PlainMessage<VectorContactStatus> | undefined): boolean {
    return proto3.util.equals(VectorContactStatus, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorSavedContact
 */
export class VectorSavedContact extends Message<VectorSavedContact> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.SavedContact datas = 1;
   */
  datas: SavedContact[] = [];

  constructor(data?: PartialMessage<VectorSavedContact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorSavedContact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: SavedContact, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorSavedContact {
    return new VectorSavedContact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorSavedContact {
    return new VectorSavedContact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorSavedContact {
    return new VectorSavedContact().fromJsonString(jsonString, options);
  }

  static equals(a: VectorSavedContact | PlainMessage<VectorSavedContact> | undefined, b: VectorSavedContact | PlainMessage<VectorSavedContact> | undefined): boolean {
    return proto3.util.equals(VectorSavedContact, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorReceivedNotifyMessage
 */
export class VectorReceivedNotifyMessage extends Message<VectorReceivedNotifyMessage> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ReceivedNotifyMessage datas = 1;
   */
  datas: ReceivedNotifyMessage[] = [];

  constructor(data?: PartialMessage<VectorReceivedNotifyMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorReceivedNotifyMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: ReceivedNotifyMessage, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorReceivedNotifyMessage {
    return new VectorReceivedNotifyMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorReceivedNotifyMessage {
    return new VectorReceivedNotifyMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorReceivedNotifyMessage {
    return new VectorReceivedNotifyMessage().fromJsonString(jsonString, options);
  }

  static equals(a: VectorReceivedNotifyMessage | PlainMessage<VectorReceivedNotifyMessage> | undefined, b: VectorReceivedNotifyMessage | PlainMessage<VectorReceivedNotifyMessage> | undefined): boolean {
    return proto3.util.equals(VectorReceivedNotifyMessage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorLong
 */
export class VectorLong extends Message<VectorLong> {
  /**
   * @generated from field: int64 datas = 1;
   */
  datas = protoInt64.zero;

  constructor(data?: PartialMessage<VectorLong>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorLong";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorLong {
    return new VectorLong().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorLong {
    return new VectorLong().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorLong {
    return new VectorLong().fromJsonString(jsonString, options);
  }

  static equals(a: VectorLong | PlainMessage<VectorLong> | undefined, b: VectorLong | PlainMessage<VectorLong> | undefined): boolean {
    return proto3.util.equals(VectorLong, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorStickerSetCovered
 */
export class VectorStickerSetCovered extends Message<VectorStickerSetCovered> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.StickerSetCovered datas = 1;
   */
  datas: StickerSetCovered[] = [];

  constructor(data?: PartialMessage<VectorStickerSetCovered>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorStickerSetCovered";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: StickerSetCovered, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorStickerSetCovered {
    return new VectorStickerSetCovered().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorStickerSetCovered {
    return new VectorStickerSetCovered().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorStickerSetCovered {
    return new VectorStickerSetCovered().fromJsonString(jsonString, options);
  }

  static equals(a: VectorStickerSetCovered | PlainMessage<VectorStickerSetCovered> | undefined, b: VectorStickerSetCovered | PlainMessage<VectorStickerSetCovered> | undefined): boolean {
    return proto3.util.equals(VectorStickerSetCovered, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorMessageRange
 */
export class VectorMessageRange extends Message<VectorMessageRange> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessageRange datas = 1;
   */
  datas: MessageRange[] = [];

  constructor(data?: PartialMessage<VectorMessageRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorMessageRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: MessageRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorMessageRange {
    return new VectorMessageRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorMessageRange {
    return new VectorMessageRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorMessageRange {
    return new VectorMessageRange().fromJsonString(jsonString, options);
  }

  static equals(a: VectorMessageRange | PlainMessage<VectorMessageRange> | undefined, b: VectorMessageRange | PlainMessage<VectorMessageRange> | undefined): boolean {
    return proto3.util.equals(VectorMessageRange, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorDialogPeer
 */
export class VectorDialogPeer extends Message<VectorDialogPeer> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DialogPeer datas = 1;
   */
  datas: DialogPeer[] = [];

  constructor(data?: PartialMessage<VectorDialogPeer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorDialogPeer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: DialogPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorDialogPeer {
    return new VectorDialogPeer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorDialogPeer {
    return new VectorDialogPeer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorDialogPeer {
    return new VectorDialogPeer().fromJsonString(jsonString, options);
  }

  static equals(a: VectorDialogPeer | PlainMessage<VectorDialogPeer> | undefined, b: VectorDialogPeer | PlainMessage<VectorDialogPeer> | undefined): boolean {
    return proto3.util.equals(VectorDialogPeer, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorEmojiLanguage
 */
export class VectorEmojiLanguage extends Message<VectorEmojiLanguage> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.EmojiLanguage datas = 1;
   */
  datas: EmojiLanguage[] = [];

  constructor(data?: PartialMessage<VectorEmojiLanguage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorEmojiLanguage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: EmojiLanguage, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorEmojiLanguage {
    return new VectorEmojiLanguage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorEmojiLanguage {
    return new VectorEmojiLanguage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorEmojiLanguage {
    return new VectorEmojiLanguage().fromJsonString(jsonString, options);
  }

  static equals(a: VectorEmojiLanguage | PlainMessage<VectorEmojiLanguage> | undefined, b: VectorEmojiLanguage | PlainMessage<VectorEmojiLanguage> | undefined): boolean {
    return proto3.util.equals(VectorEmojiLanguage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorMessagesSearchCounter
 */
export class VectorMessagesSearchCounter extends Message<VectorMessagesSearchCounter> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.MessagesSearchCounter datas = 1;
   */
  datas: MessagesSearchCounter[] = [];

  constructor(data?: PartialMessage<VectorMessagesSearchCounter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorMessagesSearchCounter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: MessagesSearchCounter, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorMessagesSearchCounter {
    return new VectorMessagesSearchCounter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorMessagesSearchCounter {
    return new VectorMessagesSearchCounter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorMessagesSearchCounter {
    return new VectorMessagesSearchCounter().fromJsonString(jsonString, options);
  }

  static equals(a: VectorMessagesSearchCounter | PlainMessage<VectorMessagesSearchCounter> | undefined, b: VectorMessagesSearchCounter | PlainMessage<VectorMessagesSearchCounter> | undefined): boolean {
    return proto3.util.equals(VectorMessagesSearchCounter, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorDialogFilter
 */
export class VectorDialogFilter extends Message<VectorDialogFilter> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DialogFilter datas = 1;
   */
  datas: DialogFilter[] = [];

  constructor(data?: PartialMessage<VectorDialogFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorDialogFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: DialogFilter, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorDialogFilter {
    return new VectorDialogFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorDialogFilter {
    return new VectorDialogFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorDialogFilter {
    return new VectorDialogFilter().fromJsonString(jsonString, options);
  }

  static equals(a: VectorDialogFilter | PlainMessage<VectorDialogFilter> | undefined, b: VectorDialogFilter | PlainMessage<VectorDialogFilter> | undefined): boolean {
    return proto3.util.equals(VectorDialogFilter, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorDialogFilterSuggested
 */
export class VectorDialogFilterSuggested extends Message<VectorDialogFilterSuggested> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.DialogFilterSuggested datas = 1;
   */
  datas: DialogFilterSuggested[] = [];

  constructor(data?: PartialMessage<VectorDialogFilterSuggested>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorDialogFilterSuggested";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: DialogFilterSuggested, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorDialogFilterSuggested {
    return new VectorDialogFilterSuggested().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorDialogFilterSuggested {
    return new VectorDialogFilterSuggested().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorDialogFilterSuggested {
    return new VectorDialogFilterSuggested().fromJsonString(jsonString, options);
  }

  static equals(a: VectorDialogFilterSuggested | PlainMessage<VectorDialogFilterSuggested> | undefined, b: VectorDialogFilterSuggested | PlainMessage<VectorDialogFilterSuggested> | undefined): boolean {
    return proto3.util.equals(VectorDialogFilterSuggested, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorReadParticipantDate
 */
export class VectorReadParticipantDate extends Message<VectorReadParticipantDate> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.ReadParticipantDate datas = 1;
   */
  datas: ReadParticipantDate[] = [];

  constructor(data?: PartialMessage<VectorReadParticipantDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorReadParticipantDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: ReadParticipantDate, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorReadParticipantDate {
    return new VectorReadParticipantDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorReadParticipantDate {
    return new VectorReadParticipantDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorReadParticipantDate {
    return new VectorReadParticipantDate().fromJsonString(jsonString, options);
  }

  static equals(a: VectorReadParticipantDate | PlainMessage<VectorReadParticipantDate> | undefined, b: VectorReadParticipantDate | PlainMessage<VectorReadParticipantDate> | undefined): boolean {
    return proto3.util.equals(VectorReadParticipantDate, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorDocument
 */
export class VectorDocument extends Message<VectorDocument> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Document datas = 1;
   */
  datas: Document[] = [];

  constructor(data?: PartialMessage<VectorDocument>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorDocument";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: Document, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorDocument {
    return new VectorDocument().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorDocument {
    return new VectorDocument().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorDocument {
    return new VectorDocument().fromJsonString(jsonString, options);
  }

  static equals(a: VectorDocument | PlainMessage<VectorDocument> | undefined, b: VectorDocument | PlainMessage<VectorDocument> | undefined): boolean {
    return proto3.util.equals(VectorDocument, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorFileHash
 */
export class VectorFileHash extends Message<VectorFileHash> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.FileHash datas = 1;
   */
  datas: FileHash[] = [];

  constructor(data?: PartialMessage<VectorFileHash>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorFileHash";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: FileHash, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorFileHash {
    return new VectorFileHash().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorFileHash {
    return new VectorFileHash().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorFileHash {
    return new VectorFileHash().fromJsonString(jsonString, options);
  }

  static equals(a: VectorFileHash | PlainMessage<VectorFileHash> | undefined, b: VectorFileHash | PlainMessage<VectorFileHash> | undefined): boolean {
    return proto3.util.equals(VectorFileHash, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorBotCommand
 */
export class VectorBotCommand extends Message<VectorBotCommand> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.BotCommand datas = 1;
   */
  datas: BotCommand[] = [];

  constructor(data?: PartialMessage<VectorBotCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorBotCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: BotCommand, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorBotCommand {
    return new VectorBotCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorBotCommand {
    return new VectorBotCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorBotCommand {
    return new VectorBotCommand().fromJsonString(jsonString, options);
  }

  static equals(a: VectorBotCommand | PlainMessage<VectorBotCommand> | undefined, b: VectorBotCommand | PlainMessage<VectorBotCommand> | undefined): boolean {
    return proto3.util.equals(VectorBotCommand, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorLangPackString
 */
export class VectorLangPackString extends Message<VectorLangPackString> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.LangPackString datas = 1;
   */
  datas: LangPackString[] = [];

  constructor(data?: PartialMessage<VectorLangPackString>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorLangPackString";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: LangPackString, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorLangPackString {
    return new VectorLangPackString().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorLangPackString {
    return new VectorLangPackString().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorLangPackString {
    return new VectorLangPackString().fromJsonString(jsonString, options);
  }

  static equals(a: VectorLangPackString | PlainMessage<VectorLangPackString> | undefined, b: VectorLangPackString | PlainMessage<VectorLangPackString> | undefined): boolean {
    return proto3.util.equals(VectorLangPackString, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorLangPackLanguage
 */
export class VectorLangPackLanguage extends Message<VectorLangPackLanguage> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.LangPackLanguage datas = 1;
   */
  datas: LangPackLanguage[] = [];

  constructor(data?: PartialMessage<VectorLangPackLanguage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorLangPackLanguage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: LangPackLanguage, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorLangPackLanguage {
    return new VectorLangPackLanguage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorLangPackLanguage {
    return new VectorLangPackLanguage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorLangPackLanguage {
    return new VectorLangPackLanguage().fromJsonString(jsonString, options);
  }

  static equals(a: VectorLangPackLanguage | PlainMessage<VectorLangPackLanguage> | undefined, b: VectorLangPackLanguage | PlainMessage<VectorLangPackLanguage> | undefined): boolean {
    return proto3.util.equals(VectorLangPackLanguage, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorPeer
 */
export class VectorPeer extends Message<VectorPeer> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.Peer datas = 1;
   */
  datas: Peer[] = [];

  constructor(data?: PartialMessage<VectorPeer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorPeer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: Peer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorPeer {
    return new VectorPeer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorPeer {
    return new VectorPeer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorPeer {
    return new VectorPeer().fromJsonString(jsonString, options);
  }

  static equals(a: VectorPeer | PlainMessage<VectorPeer> | undefined, b: VectorPeer | PlainMessage<VectorPeer> | undefined): boolean {
    return proto3.util.equals(VectorPeer, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorString
 */
export class VectorString extends Message<VectorString> {
  /**
   * @generated from field: string datas = 1;
   */
  datas = "";

  constructor(data?: PartialMessage<VectorString>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorString";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorString {
    return new VectorString().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorString {
    return new VectorString().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorString {
    return new VectorString().fromJsonString(jsonString, options);
  }

  static equals(a: VectorString | PlainMessage<VectorString> | undefined, b: VectorString | PlainMessage<VectorString> | undefined): boolean {
    return proto3.util.equals(VectorString, a, b);
  }
}

/**
 * @generated from message tech.monstrs.chats_system.core.v1alpha1.VectorPredefinedUser
 */
export class VectorPredefinedUser extends Message<VectorPredefinedUser> {
  /**
   * @generated from field: repeated tech.monstrs.chats_system.core.v1alpha1.PredefinedUser datas = 1;
   */
  datas: PredefinedUser[] = [];

  constructor(data?: PartialMessage<VectorPredefinedUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "tech.monstrs.chats_system.core.v1alpha1.VectorPredefinedUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datas", kind: "message", T: PredefinedUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VectorPredefinedUser {
    return new VectorPredefinedUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VectorPredefinedUser {
    return new VectorPredefinedUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VectorPredefinedUser {
    return new VectorPredefinedUser().fromJsonString(jsonString, options);
  }

  static equals(a: VectorPredefinedUser | PlainMessage<VectorPredefinedUser> | undefined, b: VectorPredefinedUser | PlainMessage<VectorPredefinedUser> | undefined): boolean {
    return proto3.util.equals(VectorPredefinedUser, a, b);
  }
}

